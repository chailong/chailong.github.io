{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":1,"renderable":0},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":1,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":1,"renderable":1},{"_id":"themes/next/source/uploads/avatar.gif","path":"uploads/avatar.gif","modified":1,"renderable":1},{"_id":"themes/next/source/uploads/weixin.jpg","path":"uploads/weixin.jpg","modified":1,"renderable":1},{"_id":"themes/next/source/uploads/zhiply.jpg","path":"uploads/zhiply.jpg","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","path":"lib/canvas-ribbon/canvas-ribbon.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","path":"lib/pace/pace-theme-barber-shop.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","path":"lib/pace/pace-theme-big-counter.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","path":"lib/pace/pace-theme-bounce.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","path":"lib/pace/pace-theme-center-atom.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","path":"lib/pace/pace-theme-center-circle.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","path":"lib/pace/pace-theme-center-radar.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","path":"lib/pace/pace-theme-center-simple.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","path":"lib/pace/pace-theme-corner-indicator.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","path":"lib/pace/pace-theme-fill-left.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","path":"lib/pace/pace-theme-flash.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","path":"lib/pace/pace-theme-loading-bar.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","path":"lib/pace/pace-theme-mac-osx.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","path":"lib/pace/pace-theme-minimal.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace.min.js","path":"lib/pace/pace.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","path":"lib/three/canvas_lines.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","path":"lib/three/canvas_sphere.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/three-waves.min.js","path":"lib/three/three-waves.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/uploads/avatars.jpg","path":"uploads/avatars.jpg","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":1,"renderable":1},{"_id":"themes/next/source/uploads/avatar.jpg","path":"uploads/avatar.jpg","modified":1,"renderable":1},{"_id":"themes/next/source/uploads/ico.ico","path":"uploads/ico.ico","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.css","path":"lib/Han/dist/han.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.css","path":"lib/Han/dist/han.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.js","path":"lib/Han/dist/han.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.js","path":"lib/Han/dist/han.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","path":"lib/Han/dist/font/han-space.otf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","path":"lib/Han/dist/font/han-space.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","path":"lib/Han/dist/font/han.otf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","path":"lib/Han/dist/font/han.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/three.min.js","path":"lib/three/three.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":1,"renderable":1}],"Cache":[{"_id":"source/.DS_Store","hash":"8291eb15ce139e013d8a6af3fcfc442a348ea6a6","modified":1506287446000},{"_id":"source/CNAME","hash":"d65b677a5fbb99a412185d59e8d1d01e96fb7b06","modified":1505064341000},{"_id":"source/_config.yml","hash":"5f0f5524a75b03819045555f971348a95bc4b66d","modified":1505228903000},{"_id":"themes/next/.DS_Store","hash":"58973baa2ce6c00bf90e41201ad610240b144026","modified":1506318271000},{"_id":"themes/next/.bowerrc","hash":"3228a58ed0ece9f85e1e3136352094080b8dece1","modified":1501574194000},{"_id":"themes/next/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1501574194000},{"_id":"themes/next/.gitattributes","hash":"44bd4729c74ccb88110804f41746fec07bf487d4","modified":1501574194000},{"_id":"themes/next/.gitignore","hash":"32ea93f21d8693d5d8fa4eef1c51a21ad0670047","modified":1501574194000},{"_id":"themes/next/.hound.yml","hash":"b76daa84c9ca3ad292c78412603370a367cc2bc3","modified":1501574194000},{"_id":"themes/next/.javascript_ignore","hash":"8a224b381155f10e6eb132a4d815c5b52962a9d1","modified":1501574194000},{"_id":"themes/next/.jshintrc","hash":"9928f81bd822f6a8d67fdbc909b517178533bca9","modified":1501574194000},{"_id":"themes/next/.stylintrc","hash":"b28e24704a5d8de08346c45286574c8e76cc109f","modified":1501574194000},{"_id":"themes/next/.travis.yml","hash":"c42d9608c8c7fe90de7b1581a8dc3886e90c179e","modified":1501574194000},{"_id":"themes/next/LICENSE","hash":"f293bcfcdc06c0b77ba13570bb8af55eb5c059fd","modified":1501574194000},{"_id":"themes/next/README.en.md","hash":"32d6cdfec1447f54aae1d7f1365ce6733dfcec8f","modified":1501574194000},{"_id":"themes/next/README.md","hash":"500b5606eb6a09c979d16128f8b00f4bf9bc95ac","modified":1501574194000},{"_id":"themes/next/_config.yml","hash":"6db7741bab8eb0a2216b3163d6dbf7092ce97c97","modified":1506319277000},{"_id":"themes/next/bower.json","hash":"7d7938f9da896fe710aa0e9120140e528bf058df","modified":1501574194000},{"_id":"themes/next/gulpfile.coffee","hash":"031bffc483e417b20e90eceb6cf358e7596d2e69","modified":1501574194000},{"_id":"themes/next/package.json","hash":"193dad6f59a588908fac082cc46fe067dac1b84d","modified":1501574194000},{"_id":"source/_posts/.DS_Store","hash":"1e21f10d220ee2b491f0982dd0c0c2aea8799edd","modified":1505491100000},{"_id":"source/_posts/MacOpenError.md","hash":"63fc7f5685139e854996828361df0f52d96b4b86","modified":1506287328000},{"_id":"source/_posts/gitToWebPage.md","hash":"13863dbbce1efee857e1001580997641f1cd1f13","modified":1506287222000},{"_id":"source/_posts/hexoInstall.md","hash":"031c1c6f587648a22a0d85c1779969c21e6b75a6","modified":1506286943000},{"_id":"source/_posts/laravelExecl.md","hash":"f7480f32ee1e01ae48e2fcf7823e4d2e2572f7d7","modified":1506287101000},{"_id":"source/_posts/laravelMoHuSelect.md","hash":"e2e12690102e018afdf37644b089a0e6c56dcbfc","modified":1506287116000},{"_id":"source/_posts/laravelStart.md","hash":"b48d08ad5936958b6c2ff519717a6b24563833ed","modified":1506287097000},{"_id":"source/_posts/linuxComdLine.md","hash":"a272d7e29299a257990b7d3ce8d3c6d2b70e86f1","modified":1506287289000},{"_id":"source/_posts/linuxDir.md","hash":"100efbf24282d3fd9664089a7b3e73f1a9697d9d","modified":1506287171000},{"_id":"source/_posts/lnmpInstall.md","hash":"e1aa3ac5a5684a68801202a3d57ecc7f4aceb10f","modified":1506287156000},{"_id":"source/_posts/phpArrayINArr.md","hash":"5c0b1710f704e03f02415cb2eca7e9a5a89e7dbc","modified":1506287263000},{"_id":"source/_posts/mysqlJOIN.md","hash":"ec510582635f31e83191a094df605817b36dbeeb","modified":1506287188000},{"_id":"source/_posts/phplore.md","hash":"35b1e785607165c2481c92880602ae98f7113f1a","modified":1506287254000},{"_id":"source/_posts/stort1.md","hash":"5eb287efa10ca7e23acf0182d0f31669a6c265eb","modified":1506287271000},{"_id":"source/about/index.md","hash":"1dee998ce73f6b1fa727a2a21fe36b90fc06c629","modified":1506287452000},{"_id":"source/_posts/toolIDE.md","hash":"8bdb934bb61134ea56c9a164fe996deb5b405536","modified":1506286922000},{"_id":"source/categories/index.md","hash":"419d9e874699ded0493c482ef85a50e78f7a9fee","modified":1506286676000},{"_id":"source/rss2/index.md","hash":"76af7fbfc3dfc94a2b803d70cd5369e3183e9629","modified":1506286567000},{"_id":"source/tags/index.md","hash":"24332e4170da785cae6374189d1bd0f5f33177c1","modified":1506286696000},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"3b5eafd32abb718e56ccf8d1cee0607ad8ce611d","modified":1501574194000},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"b56c01cdfc6ee7ffea8a8a9fa149263f368caef6","modified":1501574194000},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"37bd0ec1d655c601946fc5f5ac2fe8ed1e529b77","modified":1501574194000},{"_id":"themes/next/languages/de.yml","hash":"306db8c865630f32c6b6260ade9d3209fbec8011","modified":1501574194000},{"_id":"themes/next/languages/default.yml","hash":"4cc6aeb1ac09a58330e494c8771773758ab354af","modified":1501574194000},{"_id":"themes/next/languages/en.yml","hash":"e7def07a709ef55684490b700a06998c67f35f39","modified":1501574194000},{"_id":"themes/next/languages/fr-FR.yml","hash":"24180322c83587a153cea110e74e96eacc3355ad","modified":1501574194000},{"_id":"themes/next/languages/id.yml","hash":"2835ea80dadf093fcf47edd957680973f1fb6b85","modified":1501574194000},{"_id":"themes/next/languages/ja.yml","hash":"1c3a05ab80a6f8be63268b66da6f19da7aa2c638","modified":1501574194000},{"_id":"themes/next/languages/ko.yml","hash":"be150543379150f78329815af427bf152c0e9431","modified":1501574194000},{"_id":"themes/next/languages/pt-BR.yml","hash":"958e49571818a34fdf4af3232a07a024050f8f4e","modified":1501574194000},{"_id":"themes/next/languages/pt.yml","hash":"36c8f60dacbe5d27d84d0e0d6974d7679f928da0","modified":1501574194000},{"_id":"themes/next/languages/ru.yml","hash":"1549a7c2fe23caa7cbedcd0aa2b77c46e57caf27","modified":1501574194000},{"_id":"themes/next/languages/zh-Hans.yml","hash":"4ddc428fc7ea9a4400aedc2ff9cc8b047f272187","modified":1505492033000},{"_id":"themes/next/languages/zh-hk.yml","hash":"1c917997413bf566cb79e0975789f3c9c9128ccd","modified":1501574194000},{"_id":"themes/next/languages/zh-tw.yml","hash":"0b2c18aa76570364003c8d1cd429fa158ae89022","modified":1501574194000},{"_id":"themes/next/layout/.DS_Store","hash":"1d9cb4f4f3a0679bdc373ae9d6c4f47b6a23f5ae","modified":1506318004000},{"_id":"themes/next/layout/_layout.swig","hash":"06b1eab2e00273e0b94bd32dc682bd92c1e0a747","modified":1501574194000},{"_id":"themes/next/layout/archive.swig","hash":"383f64deab105724fd5512371963bd9e9aafbffd","modified":1501574194000},{"_id":"themes/next/layout/category.swig","hash":"4472255f4a3e3dd6d79201523a9526dcabdfbf18","modified":1501574194000},{"_id":"themes/next/layout/index.swig","hash":"03e8a2cda03bad42ac0cb827025eb81f95d496a2","modified":1501574194000},{"_id":"themes/next/layout/page.swig","hash":"37c874cd720acf0eda8d26e063278f2b6ae8d3a6","modified":1501574194000},{"_id":"themes/next/layout/post.swig","hash":"2d5f8d7f0a96b611e2d5a5e4d111fc17726a990f","modified":1501574194000},{"_id":"themes/next/layout/schedule.swig","hash":"d86f8de4e118f8c4d778b285c140474084a271db","modified":1501574194000},{"_id":"themes/next/layout/tag.swig","hash":"7e0a7d7d832883eddb1297483ad22c184e4368de","modified":1501574194000},{"_id":"themes/next/scripts/merge-configs.js","hash":"13c8b3a2d9fce06c2488820d9248d190c8100e0a","modified":1501574194000},{"_id":"themes/next/scripts/merge.js","hash":"9130dabe6a674c54b535f322b17d75fe6081472f","modified":1501574194000},{"_id":"themes/next/source/.DS_Store","hash":"9dfb1d8918e80b0b93521262bfd06fdec902f1ff","modified":1506318281000},{"_id":"themes/next/test/.jshintrc","hash":"19f93d13d1689fe033c82eb2d5f3ce30b6543cc0","modified":1501574194000},{"_id":"themes/next/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1501574194000},{"_id":"themes/next/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1501574194000},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1501574194000},{"_id":"themes/next/layout/_custom/header.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1501574194000},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1501574194000},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"31322a7f57936cf2dc62e824af5490da5354cf02","modified":1501574194000},{"_id":"themes/next/layout/_macro/post-copyright.swig","hash":"53d4f83b2b7fb4387dfc9fe81519abd56fbce4ae","modified":1501574194000},{"_id":"themes/next/layout/_macro/post.swig","hash":"911363776867d9523a3e322cdf591d49cd166403","modified":1501574194000},{"_id":"themes/next/layout/_macro/reward.swig","hash":"5d5f70deb6074cb4dd0438463e14ccf89213c282","modified":1501574194000},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"faa7886ccf986890cd776f4e9d70cb89fe9fda5f","modified":1501574194000},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"39852700e4084ecccffa6d4669168e5cc0514c9e","modified":1501574194000},{"_id":"themes/next/layout/_partials/.DS_Store","hash":"917860db2365e78a569bc05fde02b943cbbe9dc5","modified":1506318010000},{"_id":"themes/next/layout/_partials/comments.swig","hash":"ce7094ee05878161e7568a6dfae5b56ff3fbd6e1","modified":1501574194000},{"_id":"themes/next/layout/_partials/footer.swig","hash":"2046f8f3f05d55995fb44020146c03c858eaddc0","modified":1505492256000},{"_id":"themes/next/layout/_partials/head.swig","hash":"7bfbbb5b650a89eb466f3e3cccdeebf4f3e3e0c1","modified":1506319390000},{"_id":"themes/next/layout/_partials/header.swig","hash":"a1ffbb691dfad3eaf2832a11766e58a179003b8b","modified":1501574194000},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"1efd925d34a5d4ba2dc0838d9c86ba911e705fc9","modified":1501574194000},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"9e8e21d194ef44d271b1cca0bc1448c14d7edf4f","modified":1501574194000},{"_id":"themes/next/layout/_partials/search.swig","hash":"9dbd378e94abfcb3f864a5b8dbbf18d212ca2ee0","modified":1501574194000},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"03aaebe9d50f6acb007ec38cc04acd1cfceb404d","modified":1501574194000},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"766b2bdda29523ed6cd8d7aa197f996022f8fd94","modified":1501574194000},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"9baf90f7c40b3b10f288e9268c3191e895890cea","modified":1501574194000},{"_id":"themes/next/layout/_third-party/duoshuo-hot-articles.swig","hash":"5d4638c46aef65bf32a01681495b62416ccc98db","modified":1501574194000},{"_id":"themes/next/layout/_third-party/exturl.swig","hash":"7c04a42319d728be356746363aff8ea247791d24","modified":1501574194000},{"_id":"themes/next/layout/_third-party/mathjax.swig","hash":"6d25596d6a7c57700d37b607f8d9a62d89708683","modified":1501574194000},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"fc93b1a7e6aed0dddb1f3910142b48d8ab61174e","modified":1501574194000},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"22369026c87fc23893c35a7f250b42f3bb1b60f1","modified":1501574194000},{"_id":"themes/next/layout/_third-party/scroll-cookie.swig","hash":"1ddb2336a1a19b47af3017047012c01ec5f54529","modified":1501574194000},{"_id":"themes/next/scripts/tags/button.js","hash":"62e6dbeb53d07627a048132c79630b45d9a8f2cc","modified":1501574194000},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"535fc542781021c4326dec24d8495cbb1387634a","modified":1501574194000},{"_id":"themes/next/scripts/tags/exturl.js","hash":"8d7e60f60779bde050d20fd76f6fdc36fc85e06d","modified":1501574194000},{"_id":"themes/next/scripts/tags/full-image.js","hash":"8eeb3fb89540299bdbb799edfdfdac3743b50596","modified":1501574194000},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"49252824cd53184dc9b97b2f2d87ff28e1b3ef27","modified":1501574194000},{"_id":"themes/next/scripts/tags/label.js","hash":"2f8f41a7316372f0d1ed6b51190dc4acd3e16fff","modified":1501574194000},{"_id":"themes/next/scripts/tags/lazy-image.js","hash":"eeeabede68cf263de9e6593ecf682f620da16f0a","modified":1501574194000},{"_id":"themes/next/scripts/tags/note.js","hash":"64de4e9d01cf3b491ffc7d53afdf148ee5ad9779","modified":1501574194000},{"_id":"themes/next/scripts/tags/tabs.js","hash":"5786545d51c38e8ca38d1bfc7dd9e946fc70a316","modified":1501574194000},{"_id":"themes/next/source/css/main.styl","hash":"20702c48d6053c92c5bcdbc68e8d0ef1369848a0","modified":1501574194000},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1501574194000},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1501574194000},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1501574194000},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1501574194000},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1501574194000},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1501574194000},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1501574194000},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1501574194000},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1501574194000},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1501574194000},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1501574194000},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1501574194000},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1501574194000},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1501574194000},{"_id":"themes/next/source/uploads/avatar.gif","hash":"cc961c9cdb8f4243b3e11c98d8410bf292042e79","modified":1505064342000},{"_id":"themes/next/source/uploads/weixin.jpg","hash":"b40bd220d4b23850f2b09ea18e61785ccc0188b1","modified":1505064342000},{"_id":"themes/next/source/uploads/.DS_Store","hash":"4d938c52fe62fbe93dd371f5474873ba68b2ffc5","modified":1506319354000},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1501574194000},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1501574194000},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1501574194000},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1501574194000},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1501574194000},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1501574194000},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1501574194000},{"_id":"themes/next/source/uploads/zhiply.jpg","hash":"7a45915c41f14d3fd036a3fafe2e1234989a5d02","modified":1505064342000},{"_id":"themes/next/layout/_partials/head/custom-head.swig","hash":"9e1b9666efa77f4cf8d8261bcfa445a9ac608e53","modified":1501574194000},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"7ce76358411184482bb0934e70037949dd0da8ca","modified":1501574194000},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"957701729b85fb0c5bfcf2fb99c19d54582f91ed","modified":1501574194000},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"959b7e04a96a5596056e4009b73b6489c117597e","modified":1501574194000},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"eefe2388ff3d424694045eda21346989b123977c","modified":1501574194000},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"23e23dc0f76ef3c631f24c65277adf7ea517b383","modified":1501574194000},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"1f1107468aaf03f7d0dcd7eb2b653e2813a675b4","modified":1501574194000},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1501574194000},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"63315fcf210799f894208c9f512737096df84962","modified":1501574194000},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"069d1357c717572256e5cdee09574ebce529cbae","modified":1501574194000},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1501574194000},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1501574194000},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"60426bf73f8a89ba61fb1be2df3ad5398e32c4ef","modified":1501574194000},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"deda6a814ed48debc694c4e0c466f06c127163d0","modified":1501574194000},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"18e7bef8923d83ea42df6c97405e515a876cede4","modified":1501574194000},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"8160b27bee0aa372c7dc7c8476c05bae57f58d0f","modified":1501574194000},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"a234c5cd1f75ca5731e814d0dbb92fdcf9240d1b","modified":1501574194000},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"5d9943d74cc2e0a91badcf4f755c6de77eab193a","modified":1501574194000},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"3358d11b9a26185a2d36c96049e4340e701646e4","modified":1501574194000},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"fc65b9c98a0a8ab43a5e7aabff6c5f03838e09c8","modified":1501574194000},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1501574194000},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"0ddc94ed4ba0c19627765fdf1abc4d8efbe53d5a","modified":1501574194000},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"c3971fd154d781088e1cc665035f8561a4098f4c","modified":1501574194000},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"0e3378f7c39b2b0f69638290873ede6b6b6825c0","modified":1501574194000},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"c316758546dc9ba6c60cb4d852c17ca6bb6d6724","modified":1501574194000},{"_id":"themes/next/layout/_third-party/comments/duoshuo.swig","hash":"a356b2185d40914447fde817eb3d358ab6b3e4c3","modified":1501574194000},{"_id":"themes/next/layout/_third-party/comments/hypercomments.swig","hash":"3e8dc5c6c912628a37e3b5f886bec7b2e5ed14ea","modified":1501574194000},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"ee63aa2e49507b884a2d56778479cf01c723d751","modified":1501574194000},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"8a2e393d2e49f7bf560766d8a07cd461bf3fce4f","modified":1501574194000},{"_id":"themes/next/layout/_third-party/comments/youyan.swig","hash":"8b6650f77fe0a824c8075b2659e0403e0c78a705","modified":1501574194000},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"c747fb5c6b1f500e8f0c583e44195878b66e4e29","modified":1501574194000},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"385c066af96bee30be2459dbec8aae1f15d382f5","modified":1501574194000},{"_id":"themes/next/layout/_third-party/search/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1501574194000},{"_id":"themes/next/layout/_third-party/seo/baidu-push.swig","hash":"c057b17f79e8261680fbae8dc4e81317a127c799","modified":1501574194000},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"328d9a9696cc2ccf59c67d3c26000d569f46344c","modified":1501574194000},{"_id":"themes/next/source/css/_mixins/Gemini.styl","hash":"2aa5b7166a85a8aa34b17792ae4f58a5a96df6cc","modified":1501574194000},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"eaedfaf06dae94ba77a8f4893e2e434bf8859bac","modified":1501574194000},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"82f9055955920ed88a2ab6a20ab02169abb2c634","modified":1501574194000},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"49b5210fa62d6cbc6a98f57d89d5067a06ab3561","modified":1501574194000},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"c8d35a6b9e3bff6d8fdb66de853065af9d37562d","modified":1501574194000},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"cfee25d790e4f9b7d57f0dc7e2ea9c1649f08f11","modified":1501574194000},{"_id":"themes/next/source/css/_variables/base.styl","hash":"d477196c5699c8261b08e993a77ef67054d86166","modified":1501574194000},{"_id":"themes/next/source/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1501574194000},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1501574194000},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"6117f97b4984b8e33f21c726132da64ba678e4ed","modified":1501574194000},{"_id":"themes/next/source/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1501574194000},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1501574194000},{"_id":"themes/next/source/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1501574194000},{"_id":"themes/next/source/js/src/motion.js","hash":"dc0365b2fb315a8b43d3ef19b59d3a82a366fcc1","modified":1501574194000},{"_id":"themes/next/source/js/src/post-details.js","hash":"0693695a9512641daff63d99da772625a058ab18","modified":1501574194000},{"_id":"themes/next/source/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1501574194000},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1501574194000},{"_id":"themes/next/source/js/src/utils.js","hash":"2917c39c75b14b6dab7e1c46ab4d87b4df9fcd5d","modified":1501574194000},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1501574194000},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1501574194000},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","hash":"7fd2f3e2773555392ef40df40cae3bedb884f17a","modified":1501574194000},{"_id":"themes/next/source/lib/fancybox/.bower.json","hash":"cc40a9b11e52348e554c84e4a5c058056f6b7aeb","modified":1501574194000},{"_id":"themes/next/source/lib/fancybox/.gitattributes","hash":"2db21acfbd457452462f71cc4048a943ee61b8e0","modified":1501574194000},{"_id":"themes/next/source/lib/fastclick/.bower.json","hash":"93ebd5b35e632f714dcf1753e1f6db77ec74449b","modified":1501574194000},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1501574194000},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"1decd8e1adad2cd6db0ab50cf56de6035156f4ea","modified":1501574194000},{"_id":"themes/next/source/lib/fastclick/bower.json","hash":"13379463c7463b4b96d13556b46faa4cc38d81e6","modified":1501574194000},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"a2aaaf12378db56bd10596ba3daae30950eac051","modified":1501574194000},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1501574194000},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1501574194000},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1501574194000},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1501574194000},{"_id":"themes/next/source/lib/jquery/.bower.json","hash":"91745c2cc6c946c7275f952b2b0760b880cea69e","modified":1501574194000},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"b7638afc93e9cd350d0783565ee9a7da6805ad8e","modified":1501574194000},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4891864c24c28efecd81a6a8d3f261145190f901","modified":1501574194000},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"895d50fa29759af7835256522e9dd7dac597765c","modified":1501574194000},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"65bc85d12197e71c40a55c0cd7f6823995a05222","modified":1501574194000},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1501574194000},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1501574194000},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1501574194000},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1501574194000},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1501574194000},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1501574194000},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1501574194000},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1501574194000},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1501574194000},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1501574194000},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1501574194000},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1501574194000},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1501574194000},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1501574194000},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1501574194000},{"_id":"themes/next/source/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1501574194000},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","hash":"dce4a3b65f8bf958f973690caa7ec4952f353b0c","modified":1501574194000},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","hash":"d8ea241a53c135a650f7335d2b6982b899fd58a9","modified":1501574194000},{"_id":"themes/next/source/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1501574194000},{"_id":"themes/next/source/lib/velocity/.bower.json","hash":"05f960846f1c7a93dab1d3f9a1121e86812e8c88","modified":1501574194000},{"_id":"themes/next/source/lib/velocity/bower.json","hash":"2ec99573e84c7117368beccb9e94b6bf35d2db03","modified":1501574194000},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1501574194000},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1501574194000},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1501574194000},{"_id":"themes/next/source/uploads/avatars.jpg","hash":"a1d95178604b09fcc662b3b9f3ca5e8f61a37f74","modified":1505182374000},{"_id":"themes/next/source/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1501574194000},{"_id":"themes/next/source/uploads/avatar.jpg","hash":"ff3ccefd58bb0fe4e1ce260400e06ad8688bdfb2","modified":1506284027000},{"_id":"themes/next/source/uploads/ico.ico","hash":"ff3ccefd58bb0fe4e1ce260400e06ad8688bdfb2","modified":1506284027000},{"_id":"themes/next/layout/_third-party/search/algolia-search/assets.swig","hash":"28ff4ed6714c59124569ffcbd10f1173d53ca923","modified":1501574194000},{"_id":"themes/next/layout/_third-party/search/algolia-search/dom.swig","hash":"ba698f49dd3a868c95b240d802f5b1b24ff287e4","modified":1501574194000},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"d026c8489f66ab6c12ad04bd37f1d5b6f2f3f0d1","modified":1501574194000},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"31050fc7a25784805b4843550151c93bfa55c9c8","modified":1501574194000},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"0dfb4b3ba3180d7285e66f270e1d3fa0f132c3d2","modified":1501574194000},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1501574194000},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"a6bb5256be6195e76addbda12f4ed7c662d65e7a","modified":1501574194000},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"711c8830886619d4f4a0598b0cde5499dce50c62","modified":1501574194000},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1501574194000},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"2186be20e317505cd31886f1291429cc21f76703","modified":1501574194000},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"2915df7152ea095a6290ef69157fd67669e0e793","modified":1501574194000},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"9c25c75311e1bd4d68df031d3f2ae6d141a90766","modified":1501574194000},{"_id":"themes/next/source/css/_common/scaffolding/mobile.styl","hash":"86b6fd7f1b1be3ae98f8af6b23a6b1299c670ce9","modified":1501574194000},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1501574194000},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"a280a583b7615e939aaddbf778f5c108ef8a2a6c","modified":1501574194000},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"64f5d56c08d74a338813df1265580ca0cbf0190b","modified":1501574194000},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"bc8c388553bbcf95897459a466ba35bffd5ec5f0","modified":1501574194000},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"c2d079788d6fc2e9a191ccdae94e50d55bf849dc","modified":1501574194000},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"5ae7906dc7c1d9468c7f4b4a6feddddc555797a1","modified":1501574194000},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1501574194000},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"b0dcca862cd0cc6e732e33d975b476d744911742","modified":1501574194000},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"fda14bc35be2e1b332809b55b3d07155a833dbf4","modified":1501574194000},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1501574194000},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9a5581a770af8964064fef7afd3e16963e45547f","modified":1501574194000},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"0efa036a15c18f5abb058b7c0fad1dd9ac5eed4c","modified":1501574194000},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1501574194000},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"82bbaa6322764779a1ac2e2c8390ce901c7972e2","modified":1501574194000},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1501574194000},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"a0e2030a606c934fb2c5c7373aaae04a1caac4c5","modified":1501574194000},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"c4ed249798296f60bda02351fe6404fb3ef2126f","modified":1501574194000},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"5b93958239d3d2bf9aeaede44eced2434d784462","modified":1501574194000},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"215de948be49bcf14f06d500cef9f7035e406a43","modified":1501574194000},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"2f878213cb24c5ddc18877f6d15ec5c5f57745ac","modified":1501574194000},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"e3e23751d4ad24e8714b425d768cf68e37de7ded","modified":1501574194000},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"69ecd6c97e7cdfd822ac8102b45ad0ede85050db","modified":1501574194000},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"79da92119bc246fe05d1626ac98426a83ec90a94","modified":1501574194000},{"_id":"themes/next/source/lib/Han/dist/han.css","hash":"bd40da3fba8735df5850956814e312bd7b3193d7","modified":1501574194000},{"_id":"themes/next/source/lib/Han/dist/han.min.css","hash":"a0c9e32549a8b8cf327ab9227b037f323cdb60ee","modified":1501574194000},{"_id":"themes/next/source/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1501574194000},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1501574194000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1501574194000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1501574194000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1501574194000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1501574194000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1501574194000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1501574194000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1501574194000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1501574194000},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1501574194000},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1501574194000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1501574194000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1501574194000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1501574194000},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1501574194000},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1501574194000},{"_id":"themes/next/source/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1501574194000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1501574194000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1501574194000},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1501574194000},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"8994ffcce84deac0471532f270f97c44fea54dc0","modified":1501574194000},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"ae1ca14e51de67b07dba8f61ec79ee0e2e344574","modified":1501574194000},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1501574194000},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"8a2421cb9005352905fae9d41a847ae56957247e","modified":1501574194000},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"6c00f6e0978f4d8f9a846a15579963728aaa6a17","modified":1501574194000},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1501574194000},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"96f32ea6c3265a3889e6abe57587f6e2a2a40dfb","modified":1501574194000},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"740d37f428b8f4574a76fc95cc25e50e0565f45e","modified":1501574194000},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"b76387934fb6bb75212b23c1a194486892cc495e","modified":1501574194000},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1501574194000},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"7778920dd105fa4de3a7ab206eeba30b1a7bac45","modified":1501574194000},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"2039590632bba3943c39319d80ef630af7928185","modified":1501574194000},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1501574194000},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"a82afbb72d83ee394aedc7b37ac0008a9823b4f4","modified":1501574194000},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"beccb53dcd658136fb91a0c5678dea8f37d6e0b6","modified":1501574194000},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"0f7f522cc6bfb3401d5afd62b0fcdf48bb2d604b","modified":1501574194000},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"f54367c0feda6986c030cc4d15a0ca6ceea14bcb","modified":1501574194000},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"2cdc094ecf907a02fce25ad4a607cd5c40da0f2b","modified":1501574194000},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1501574194000},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"88c7d75646b66b168213190ee4cd874609afd5e3","modified":1501574194000},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"ed88c8b51d0517759c777e71a6bfbe2907bcd994","modified":1501574194000},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"a5d8617a24d7cb6c5ad91ea621183ca2c0917331","modified":1501574194000},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"ee554b1031ef0070a5916477939021800e3c9d27","modified":1501574194000},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"017074ef58166e2d69c53bb7590a0e7a8947a1ed","modified":1501574194000},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1501574194000},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"963105a531403d7aad6d9e5e23e3bfabb8ec065a","modified":1501574194000},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"08a500b2984f109b751f3697ca33172d1340591a","modified":1501574194000},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1501574194000},{"_id":"themes/next/source/css/_common/components/post/post-wordcount.styl","hash":"4fda5d38c6c8d910e3bf5c74a48a8d4a3f3dc73d","modified":1501574194000},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"51eca243220cf57133a4becae9b78514bcfdc723","modified":1501574194000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"65a64d5662637b66e2f039a5f58217afe7a6e800","modified":1501574194000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"920343e41c124221a17f050bbb989494d44f7a24","modified":1501574194000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"5f6ea57aabfa30a437059bf8352f1ad829dbd4ff","modified":1501574194000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"efa5e5022e205b52786ce495d4879f5e7b8f84b2","modified":1501574194000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"9486ddd2cb255227db102d09a7df4cae0fabad72","modified":1501574194000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"45fa7193435a8eae9960267438750b4c9fa9587f","modified":1501574194000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"77c92a449ce84d558d26d052681f2e0dd77c70c9","modified":1501574194000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"f7784aba0c1cd20d824c918c120012d57a5eaa2a","modified":1501574194000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"57d2c8a060f5e4e1a0aef9aae11a0016cf7ac5ba","modified":1501574194000},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"3623e7fa4324ec1307370f33d8f287a9e20a5578","modified":1501574194000},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1501574194000},{"_id":"themes/next/source/css/_common/components/tags/exturl.styl","hash":"1b3cc9f4e5a7f6e05b4100e9990b37b20d4a2005","modified":1501574194000},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"b8969e1654eec89a0fd10d88b337fee9cb03cd44","modified":1501574194000},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1501574194000},{"_id":"themes/next/source/css/_common/components/tags/label.styl","hash":"4a457d265d62f287c63d48764ce45d9bcfc9ec5a","modified":1501574194000},{"_id":"themes/next/source/css/_common/components/tags/note-modern.styl","hash":"45df0cf4c97b47e05573bcd41028ee50f3fdf432","modified":1501574194000},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"32c9156bea5bac9e9ad0b4c08ffbca8b3d9aac4b","modified":1501574194000},{"_id":"themes/next/source/css/_common/components/tags/tabs.styl","hash":"4ab5deed8c3b0c338212380f678f8382672e1bcb","modified":1501574194000},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"ead0d0f2321dc71505788c7f689f92257cf14947","modified":1501574194000},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"fd42777b9125fd8969dc39d4f15473e2b91b4142","modified":1501574194000},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"93b08815c4d17e2b96fef8530ec1f1064dede6ef","modified":1501574194000},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"d4e6d8d7b34dc69994593c208f875ae8f7e8a3ae","modified":1501574194000},{"_id":"themes/next/source/css/_common/components/third-party/han.styl","hash":"cce6772e2cdb4db85d35486ae4c6c59367fbdd40","modified":1501574194000},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"2340dd9b3202c61d73cc708b790fac5adddbfc7f","modified":1501574194000},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"327b5f63d55ec26f7663185c1a778440588d9803","modified":1501574194000},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"d89c4b562b528e4746696b2ad8935764d133bdae","modified":1501574194000},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"aeff0e6e23725e8baea27c890ccbbf466024f767","modified":1501574194000},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1501574194000},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1501574194000},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1501574194000},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1501574194000},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1501574194000},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1501574194000},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1501574194000},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1501574194000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1501574194000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1501574194000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1501574194000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1501574194000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1501574194000},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1501574194000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1501574194000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1501574194000},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1501574194000},{"_id":"themes/next/source/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1501574194000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1501574194000},{"_id":"public/baidusitemap.xml","hash":"9bb1f7dc246c92d727e9108e09148a6fe48afba8","modified":1506319406391},{"_id":"public/search.xml","hash":"932c80df28de4631e95185de11bf44366e1d54b8","modified":1506319406502},{"_id":"public/sitemap.xml","hash":"8d7eacb5561ed4511aa10e69e56b123e7990347e","modified":1506319406502},{"_id":"public/about/index.html","hash":"c4245308be5ca8702092655462ca83b50c460e3d","modified":1506319406580},{"_id":"public/categories/index.html","hash":"aadfe78834e478c307f2a5205d2d70b4f922717b","modified":1506319406580},{"_id":"public/rss2/index.html","hash":"53be51e37e52a466db418922bda4ff80eb8f6dde","modified":1506319406580},{"_id":"public/tags/index.html","hash":"50807d6968ea730131c687efb2943e83ba0b163d","modified":1506319406580},{"_id":"public/2017/06/24/toolIDE/index.html","hash":"6f3a8af25ba4ef0364f38f2eeb6784ecee21fdeb","modified":1506319406581},{"_id":"public/2016/10/28/gitToWebPage/index.html","hash":"3938355205526d7555f02a066677100db5130433","modified":1506319406581},{"_id":"public/2016/10/16/phpArrayINArr/index.html","hash":"baa5257260ab83a3f2d926e60a4ff4e7ab8dc556","modified":1506319406581},{"_id":"public/2016/10/06/stort1/index.html","hash":"438734c5469a76ef5b1cf9df1e8da4c9cdf811d6","modified":1506319406581},{"_id":"public/2016/10/03/mysqlJOIN/index.html","hash":"9b3ae659b25b30b7f69bae9fb33ad03e7f8a8d04","modified":1506319406581},{"_id":"public/2016/09/22/linuxDir/index.html","hash":"e0b74b8b12beb17905414295d69f228404440479","modified":1506319406581},{"_id":"public/2016/09/21/lnmpInstall/index.html","hash":"187ba5c82af11ccb64c8fc21c3f31a5a4f9a200a","modified":1506319406581},{"_id":"public/2016/09/18/laravelMoHuSelect/index.html","hash":"1aa14824b1604b0f16d0d1e8043e2c91093d812a","modified":1506319406581},{"_id":"public/2016/09/18/linuxComdLine/index.html","hash":"b8823db3276339c0ec0468c5756585eb2b998f52","modified":1506319406581},{"_id":"public/2016/09/14/MacOpenError/index.html","hash":"0860115460dead0a7b2da83582fe5c0c5697c86f","modified":1506319406581},{"_id":"public/2016/09/09/laravelStart/index.html","hash":"87629ac0b9b485f6dd9a2f283d78f6dda91d2a6b","modified":1506319406581},{"_id":"public/2016/09/08/laravelExecl/index.html","hash":"ff6b87d75843d414f42cae20be1d790d5df06b1d","modified":1506319406581},{"_id":"public/2016/08/22/phplore/index.html","hash":"4ddece85f135c154e1af53b1993cff769a5176ab","modified":1506319406581},{"_id":"public/2016/08/13/hexoInstall/index.html","hash":"35daae645b7e81ab5a415ed9364d05faeb5d687e","modified":1506319406581},{"_id":"public/archives/index.html","hash":"670231edb74b69ee27432301e9f2bbe66cbe240d","modified":1506319406581},{"_id":"public/archives/page/2/index.html","hash":"2243faee91579c28ad817034bfb492f8582b658d","modified":1506319406581},{"_id":"public/archives/2016/index.html","hash":"c4e6b421b6adf53b2adbfb7a9d55944764550b0e","modified":1506319406581},{"_id":"public/archives/2016/page/2/index.html","hash":"84e90399000e822ace0bc543f167cc333641faea","modified":1506319406581},{"_id":"public/archives/2016/08/index.html","hash":"28e6bb5e375f0e55d56623db7bdd7346e48821f5","modified":1506319406581},{"_id":"public/archives/2016/09/index.html","hash":"39562355a1a142b201547b28e88098de32c80490","modified":1506319406581},{"_id":"public/archives/2016/10/index.html","hash":"a436c658fb9b8d838d7802c5dbba742a617f1f47","modified":1506319406581},{"_id":"public/archives/2017/index.html","hash":"054798693dbf46f7890b57a6dc7e38e223c1991b","modified":1506319406581},{"_id":"public/archives/2017/06/index.html","hash":"bdfb11b2c327f17ab7e7e98a2f02bb2a1bb225f7","modified":1506319406582},{"_id":"public/categories/MAC-DIY/index.html","hash":"aecaeb8aeae4671c722f951c9313893252a0dc77","modified":1506319406582},{"_id":"public/categories/GIT/index.html","hash":"6c3818244e68d370ea2aa8e7fc7c2a2a8f217995","modified":1506319406582},{"_id":"public/categories/Laravel奇淫技巧/index.html","hash":"988a21080faa658c20ef85bc9a9b8b76e2dbd142","modified":1506319406582},{"_id":"public/categories/Linux/index.html","hash":"cf7f8628c9c576f7a570df4081793cce20a3a402","modified":1506319406582},{"_id":"public/categories/服务器/index.html","hash":"bdcbe32e4c986ab48825a910826077de6d707e93","modified":1506319406582},{"_id":"public/categories/php奇淫技巧/index.html","hash":"6367d3d5f1312185317b27ef5eff889f7b4e2ae5","modified":1506319406582},{"_id":"public/categories/数据库/index.html","hash":"ddfcccf25a61b726a7e8d23e12c332bc7ced94e9","modified":1506319406582},{"_id":"public/categories/开发工具/index.html","hash":"5333288f09617bb12bfdd5a540281fd796a63069","modified":1506319406582},{"_id":"public/index.html","hash":"2b29bf7985a22f585b5dd05e519eb23778f52b0d","modified":1506319406582},{"_id":"public/page/2/index.html","hash":"12e063d281393904ad5db999a59d9b8e507784de","modified":1506319406582},{"_id":"public/tags/Mac/index.html","hash":"7f2a88c62c30ce09792f9bf8014be45e977b4780","modified":1506319406582},{"_id":"public/tags/App-Errpr/index.html","hash":"67a1c77075018275f19c84d399fe0b1ec40a7fd7","modified":1506319406582},{"_id":"public/tags/软件打不开/index.html","hash":"c889545f41c064abf53fa6511feb0628265cc213","modified":1506319406582},{"_id":"public/tags/git/index.html","hash":"9ebb4d1ef0d884d9ef7c590610e65472a1fa457a","modified":1506319406582},{"_id":"public/tags/Linux/index.html","hash":"806ebc9979443c5e0c1979a98d6276373bb1dba3","modified":1506319406582},{"_id":"public/tags/Laravel/index.html","hash":"e29852b9b011fc380e8f5b621722678c322d4764","modified":1506319406582},{"_id":"public/tags/Excel/index.html","hash":"85969ce396dcc03c53dbc6dec048efb4d97cb861","modified":1506319406582},{"_id":"public/tags/laravel/index.html","hash":"05cf0823c4c15ce46b5704176b546822b040e606","modified":1506319406582},{"_id":"public/tags/select/index.html","hash":"1cd687e56200a8c0a28961c6cefcd76a9a56f452","modified":1506319406582},{"_id":"public/tags/DB/index.html","hash":"ae80c03e8091504d5f54924d63555996a81b8af0","modified":1506319406582},{"_id":"public/tags/phpstome/index.html","hash":"d9315da17b444953678fb35ba8832741281d61f3","modified":1506319406582},{"_id":"public/tags/oh-my-zsh/index.html","hash":"890e671bb027db9f384af9c9a73d0b44dac5b724","modified":1506319406582},{"_id":"public/tags/常用操作命令/index.html","hash":"3c0d4ab50ba8493b0e705354c6aa4f072a3e6954","modified":1506319406582},{"_id":"public/tags/LNMP/index.html","hash":"65acb6b064ac65642e6b2f1dea362b5c7a37f5d9","modified":1506319406582},{"_id":"public/tags/数组/index.html","hash":"7eb95f0901b6fb41c7ce0c4ce019e99e4eeb9ece","modified":1506319406582},{"_id":"public/tags/mysql/index.html","hash":"5d17fdb643c2ec96f7afdadc45c27ae18468635b","modified":1506319406582},{"_id":"public/tags/PHP/index.html","hash":"2aa237a8526a1886bd2a7ac46109a8bd6ec268d8","modified":1506319406582},{"_id":"public/tags/排序/index.html","hash":"d9fa4c3a914f8e7967a982ee6c55a285426fd7a0","modified":1506319406582},{"_id":"public/tags/MAC/index.html","hash":"ee2f8eee11d9746e827c447d51e278e234786e39","modified":1506319406583},{"_id":"public/CNAME","hash":"d65b677a5fbb99a412185d59e8d1d01e96fb7b06","modified":1506319406598},{"_id":"public/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1506319406598},{"_id":"public/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1506319406599},{"_id":"public/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1506319406599},{"_id":"public/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1506319406599},{"_id":"public/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1506319406599},{"_id":"public/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1506319406599},{"_id":"public/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1506319406599},{"_id":"public/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1506319406599},{"_id":"public/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1506319406599},{"_id":"public/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1506319406599},{"_id":"public/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1506319406599},{"_id":"public/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1506319406599},{"_id":"public/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1506319406599},{"_id":"public/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1506319406599},{"_id":"public/uploads/avatar.gif","hash":"cc961c9cdb8f4243b3e11c98d8410bf292042e79","modified":1506319406599},{"_id":"public/uploads/weixin.jpg","hash":"b40bd220d4b23850f2b09ea18e61785ccc0188b1","modified":1506319406599},{"_id":"public/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1506319406599},{"_id":"public/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1506319406599},{"_id":"public/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1506319406599},{"_id":"public/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1506319406599},{"_id":"public/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1506319406599},{"_id":"public/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1506319406599},{"_id":"public/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1506319406599},{"_id":"public/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1506319406599},{"_id":"public/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1506319406600},{"_id":"public/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1506319406600},{"_id":"public/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1506319406600},{"_id":"public/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1506319406600},{"_id":"public/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1506319406600},{"_id":"public/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1506319406600},{"_id":"public/uploads/zhiply.jpg","hash":"7a45915c41f14d3fd036a3fafe2e1234989a5d02","modified":1506319407336},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1506319407338},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1506319407373},{"_id":"public/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1506319407381},{"_id":"public/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1506319407381},{"_id":"public/js/src/bootstrap.js","hash":"6117f97b4984b8e33f21c726132da64ba678e4ed","modified":1506319407381},{"_id":"public/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1506319407381},{"_id":"public/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1506319407381},{"_id":"public/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1506319407381},{"_id":"public/js/src/motion.js","hash":"dc0365b2fb315a8b43d3ef19b59d3a82a366fcc1","modified":1506319407381},{"_id":"public/js/src/post-details.js","hash":"0693695a9512641daff63d99da772625a058ab18","modified":1506319407381},{"_id":"public/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1506319407381},{"_id":"public/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1506319407381},{"_id":"public/js/src/utils.js","hash":"2917c39c75b14b6dab7e1c46ab4d87b4df9fcd5d","modified":1506319407381},{"_id":"public/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1506319407381},{"_id":"public/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1506319407381},{"_id":"public/lib/canvas-ribbon/canvas-ribbon.js","hash":"7fd2f3e2773555392ef40df40cae3bedb884f17a","modified":1506319407381},{"_id":"public/lib/fastclick/bower.json","hash":"4dcecf83afddba148464d5339c93f6d0aa9f42e9","modified":1506319407381},{"_id":"public/lib/fastclick/README.html","hash":"da3c74d484c73cc7df565e8abbfa4d6a5a18d4da","modified":1506319407381},{"_id":"public/lib/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1506319407381},{"_id":"public/lib/jquery_lazyload/CONTRIBUTING.html","hash":"a6358170d346af13b1452ac157b60505bec7015c","modified":1506319407382},{"_id":"public/lib/jquery_lazyload/bower.json","hash":"ae3c3b61e6e7f9e1d7e3585ad854380ecc04cf53","modified":1506319407382},{"_id":"public/lib/jquery_lazyload/README.html","hash":"bde24335f6bc09d8801c0dcd7274f71b466552bd","modified":1506319407382},{"_id":"public/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1506319407382},{"_id":"public/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1506319407382},{"_id":"public/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1506319407382},{"_id":"public/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1506319407382},{"_id":"public/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1506319407382},{"_id":"public/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1506319407382},{"_id":"public/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1506319407382},{"_id":"public/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1506319407382},{"_id":"public/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1506319407382},{"_id":"public/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1506319407382},{"_id":"public/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1506319407382},{"_id":"public/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1506319407382},{"_id":"public/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1506319407382},{"_id":"public/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1506319407382},{"_id":"public/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1506319407382},{"_id":"public/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1506319407382},{"_id":"public/lib/velocity/bower.json","hash":"0ef14e7ccdfba5db6eb3f8fc6aa3b47282c36409","modified":1506319407382},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1506319407382},{"_id":"public/js/src/schemes/pisces.js","hash":"79da92119bc246fe05d1626ac98426a83ec90a94","modified":1506319407382},{"_id":"public/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1506319407382},{"_id":"public/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1506319407383},{"_id":"public/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1506319407383},{"_id":"public/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1506319407383},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1506319407383},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1506319407383},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1506319407383},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1506319407383},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1506319407383},{"_id":"public/css/main.css","hash":"38cd49b70e1b521cfd69ec30668b7f390fed0447","modified":1506319407383},{"_id":"public/lib/three/canvas_lines.min.js","hash":"dce4a3b65f8bf958f973690caa7ec4952f353b0c","modified":1506319407383},{"_id":"public/lib/three/canvas_sphere.min.js","hash":"d8ea241a53c135a650f7335d2b6982b899fd58a9","modified":1506319407384},{"_id":"public/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1506319407384},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1506319407384},{"_id":"public/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1506319407384},{"_id":"public/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1506319407384},{"_id":"public/lib/Han/dist/han.css","hash":"bd40da3fba8735df5850956814e312bd7b3193d7","modified":1506319407384},{"_id":"public/lib/Han/dist/han.min.css","hash":"a0c9e32549a8b8cf327ab9227b037f323cdb60ee","modified":1506319407384},{"_id":"public/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1506319407384},{"_id":"public/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1506319407384},{"_id":"public/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1506319407384},{"_id":"public/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1506319407384},{"_id":"public/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1506319407384},{"_id":"public/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1506319407384},{"_id":"public/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1506319407384},{"_id":"public/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1506319407384},{"_id":"public/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1506319407384},{"_id":"public/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1506319407384},{"_id":"public/uploads/avatars.jpg","hash":"a1d95178604b09fcc662b3b9f3ca5e8f61a37f74","modified":1506319407385},{"_id":"public/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1506319407385},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1506319407385},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1506319407385},{"_id":"public/uploads/avatar.jpg","hash":"ff3ccefd58bb0fe4e1ce260400e06ad8688bdfb2","modified":1506319407393},{"_id":"public/uploads/ico.ico","hash":"ff3ccefd58bb0fe4e1ce260400e06ad8688bdfb2","modified":1506319407393},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1506319407419}],"Category":[{"name":"MAC-DIY","_id":"cj7zrohq30004r1s69k4bk8up"},{"name":"GIT","_id":"cj7zrohql000br1s6fgnaa2oy"},{"name":"Laravel奇淫技巧","_id":"cj7zrohqr000gr1s6s1zs208j"},{"name":"Linux","_id":"cj7zrohrc000xr1s6rxmmhfbp"},{"name":"服务器","_id":"cj7zrohrg0016r1s6hicoc2th"},{"name":"php奇淫技巧","_id":"cj7zrohrj001br1s68qfkhz6f"},{"name":"数据库","_id":"cj7zrohrm001fr1s6a9r1pltw"},{"name":"开发工具","_id":"cj7zrohrt001qr1s6d26ney00"}],"Data":[],"Page":[{"title":"about","date":"2017-09-12T15:51:17.000Z","type":"about","_content":"\n那就正阳柄\n\n\n","source":"about/index.md","raw":"---\ntitle: about\ndate: 2017-09-12 23:51:17\ntype: \"about\"\n---\n\n那就正阳柄\n\n\n","updated":"2017-09-24T21:10:52.000Z","path":"about/index.html","comments":1,"layout":"page","_id":"cj7zrohpx0001r1s6tthmq8o8","content":"<p>那就正阳柄</p>\n","site":{"data":{}},"excerpt":"","more":"<p>那就正阳柄</p>\n"},{"title":"分类","date":"2017-09-12T15:48:21.000Z","type":"categories","_content":"\n\n","source":"categories/index.md","raw":"---\ntitle: 分类\ndate: 2017-09-12 23:48:21\ntype: \"categories\"\n---\n\n\n","updated":"2017-09-24T20:57:56.000Z","path":"categories/index.html","comments":1,"layout":"page","_id":"cj7zrohq10003r1s6xxkfifsj","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"rss2","date":"2017-09-24T20:53:48.000Z","_content":"\n\n","source":"rss2/index.md","raw":"---\ntitle: rss2\ndate: 2017-09-25 04:53:48\n---\n\n\n","updated":"2017-09-24T20:56:07.000Z","path":"rss2/index.html","comments":1,"layout":"page","_id":"cj7zrohqb0007r1s63sf35hma","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"标签","date":"2016-08-02T02:46:03.000Z","type":"tags","_content":"\n\n","source":"tags/index.md","raw":"---\ntitle: 标签\ndate: 2016-08-02 10:46:03\ntype: \"tags\"\n---\n\n\n","updated":"2017-09-24T20:58:16.000Z","path":"tags/index.html","comments":1,"layout":"page","_id":"cj7zrohqh0009r1s6jydrj7zl","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"macOS Sierra 如何打开任何来源","date":"2016-09-13T22:42:46.000Z","_content":"\n一定有很多小朋友遇到过这样的问题，升级到了macOS Sierra，随之而来的是第三方应用都无法打开了，提示无法打开或者扔进废纸篓。浪费了1个小时却得到下图一样的回报，绝望不绝望 意不意外 惊不惊喜 刺不刺激 感觉整个人都崩溃了，下面我会告诉你如何解决。\n\n![](http://opxoapzhs.bkt.clouddn.com/7A3218F3-EB10-4C64-91BA-66517F743FAA.png)\n<!--more-->\n首先我们来了解下\n大家都知道，macOS Sierra之前的系统也是需要手动去打开应用程序-系统偏好设置-安全性和隐私-通用里勾选任何来源，这样操作之后才能打开第三方应用。而到了macOS Sierra同样如此，但是默认是不显示的。「电脑都不让玩了，还怎么活」\n\n# 不想看废话？点我啊 \n1.打开终端工具  (往下看教你如何打开终端)\n2.输入命令 `sudo spctl --master-disable` 回车执行\n3.输入用户名密码 \n4.打开设置-隐私 查看\n由刚开始的这样\n    ![](http://opxoapzhs.bkt.clouddn.com/qq.jpg)\n变成这样\n    ![](http://opxoapzhs.bkt.clouddn.com/EBE3DD2C-204C-4618-A37B-7EF9D9810A0E.png)\n5.完毕 \n\n⚠️ 如果将「隐私权限」改回系统默认，需要重新执行上述命令\n## 终端的打开姿势\n1. 点击桌面空白处-选择菜单栏「前往」- 实用工具 找到终端双击打开\n2. 点击桌面空白处 使用快捷键:command+shift+u  找到终端双击打开\n3. 使用command+空格 输入 Terminal 或 终端 回车打开\n4. 打开应用程序-实用工具-终端 双击打开\n    \n\n\n\n","source":"_posts/MacOpenError.md","raw":"---\ntitle: macOS Sierra 如何打开任何来源\ndate: 2016-09-14 06:42:46\ntags:\n    - Mac\n    - App_Errpr\n    - 软件打不开\ncategories: MAC-DIY\n---\n\n一定有很多小朋友遇到过这样的问题，升级到了macOS Sierra，随之而来的是第三方应用都无法打开了，提示无法打开或者扔进废纸篓。浪费了1个小时却得到下图一样的回报，绝望不绝望 意不意外 惊不惊喜 刺不刺激 感觉整个人都崩溃了，下面我会告诉你如何解决。\n\n![](http://opxoapzhs.bkt.clouddn.com/7A3218F3-EB10-4C64-91BA-66517F743FAA.png)\n<!--more-->\n首先我们来了解下\n大家都知道，macOS Sierra之前的系统也是需要手动去打开应用程序-系统偏好设置-安全性和隐私-通用里勾选任何来源，这样操作之后才能打开第三方应用。而到了macOS Sierra同样如此，但是默认是不显示的。「电脑都不让玩了，还怎么活」\n\n# 不想看废话？点我啊 \n1.打开终端工具  (往下看教你如何打开终端)\n2.输入命令 `sudo spctl --master-disable` 回车执行\n3.输入用户名密码 \n4.打开设置-隐私 查看\n由刚开始的这样\n    ![](http://opxoapzhs.bkt.clouddn.com/qq.jpg)\n变成这样\n    ![](http://opxoapzhs.bkt.clouddn.com/EBE3DD2C-204C-4618-A37B-7EF9D9810A0E.png)\n5.完毕 \n\n⚠️ 如果将「隐私权限」改回系统默认，需要重新执行上述命令\n## 终端的打开姿势\n1. 点击桌面空白处-选择菜单栏「前往」- 实用工具 找到终端双击打开\n2. 点击桌面空白处 使用快捷键:command+shift+u  找到终端双击打开\n3. 使用command+空格 输入 Terminal 或 终端 回车打开\n4. 打开应用程序-实用工具-终端 双击打开\n    \n\n\n\n","slug":"MacOpenError","published":1,"updated":"2017-09-24T21:08:48.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj7zrohpq0000r1s63ntrcged","content":"<p>一定有很多小朋友遇到过这样的问题，升级到了macOS Sierra，随之而来的是第三方应用都无法打开了，提示无法打开或者扔进废纸篓。浪费了1个小时却得到下图一样的回报，绝望不绝望 意不意外 惊不惊喜 刺不刺激 感觉整个人都崩溃了，下面我会告诉你如何解决。</p>\n<p><img src=\"http://opxoapzhs.bkt.clouddn.com/7A3218F3-EB10-4C64-91BA-66517F743FAA.png\" alt=\"\"><br><a id=\"more\"></a><br>首先我们来了解下<br>大家都知道，macOS Sierra之前的系统也是需要手动去打开应用程序-系统偏好设置-安全性和隐私-通用里勾选任何来源，这样操作之后才能打开第三方应用。而到了macOS Sierra同样如此，但是默认是不显示的。「电脑都不让玩了，还怎么活」</p>\n<h1 id=\"不想看废话？点我啊\"><a href=\"#不想看废话？点我啊\" class=\"headerlink\" title=\"不想看废话？点我啊\"></a>不想看废话？点我啊</h1><p>1.打开终端工具  (往下看教你如何打开终端)<br>2.输入命令 <code>sudo spctl --master-disable</code> 回车执行<br>3.输入用户名密码<br>4.打开设置-隐私 查看<br>由刚开始的这样<br>    <img src=\"http://opxoapzhs.bkt.clouddn.com/qq.jpg\" alt=\"\"><br>变成这样<br>    <img src=\"http://opxoapzhs.bkt.clouddn.com/EBE3DD2C-204C-4618-A37B-7EF9D9810A0E.png\" alt=\"\"><br>5.完毕 </p>\n<p>⚠️ 如果将「隐私权限」改回系统默认，需要重新执行上述命令</p>\n<h2 id=\"终端的打开姿势\"><a href=\"#终端的打开姿势\" class=\"headerlink\" title=\"终端的打开姿势\"></a>终端的打开姿势</h2><ol>\n<li>点击桌面空白处-选择菜单栏「前往」- 实用工具 找到终端双击打开</li>\n<li>点击桌面空白处 使用快捷键:command+shift+u  找到终端双击打开</li>\n<li>使用command+空格 输入 Terminal 或 终端 回车打开</li>\n<li>打开应用程序-实用工具-终端 双击打开</li>\n</ol>\n","site":{"data":{}},"excerpt":"<p>一定有很多小朋友遇到过这样的问题，升级到了macOS Sierra，随之而来的是第三方应用都无法打开了，提示无法打开或者扔进废纸篓。浪费了1个小时却得到下图一样的回报，绝望不绝望 意不意外 惊不惊喜 刺不刺激 感觉整个人都崩溃了，下面我会告诉你如何解决。</p>\n<p><img src=\"http://opxoapzhs.bkt.clouddn.com/7A3218F3-EB10-4C64-91BA-66517F743FAA.png\" alt=\"\"><br>","more":"<br>首先我们来了解下<br>大家都知道，macOS Sierra之前的系统也是需要手动去打开应用程序-系统偏好设置-安全性和隐私-通用里勾选任何来源，这样操作之后才能打开第三方应用。而到了macOS Sierra同样如此，但是默认是不显示的。「电脑都不让玩了，还怎么活」</p>\n<h1 id=\"不想看废话？点我啊\"><a href=\"#不想看废话？点我啊\" class=\"headerlink\" title=\"不想看废话？点我啊\"></a>不想看废话？点我啊</h1><p>1.打开终端工具  (往下看教你如何打开终端)<br>2.输入命令 <code>sudo spctl --master-disable</code> 回车执行<br>3.输入用户名密码<br>4.打开设置-隐私 查看<br>由刚开始的这样<br>    <img src=\"http://opxoapzhs.bkt.clouddn.com/qq.jpg\" alt=\"\"><br>变成这样<br>    <img src=\"http://opxoapzhs.bkt.clouddn.com/EBE3DD2C-204C-4618-A37B-7EF9D9810A0E.png\" alt=\"\"><br>5.完毕 </p>\n<p>⚠️ 如果将「隐私权限」改回系统默认，需要重新执行上述命令</p>\n<h2 id=\"终端的打开姿势\"><a href=\"#终端的打开姿势\" class=\"headerlink\" title=\"终端的打开姿势\"></a>终端的打开姿势</h2><ol>\n<li>点击桌面空白处-选择菜单栏「前往」- 实用工具 找到终端双击打开</li>\n<li>点击桌面空白处 使用快捷键:command+shift+u  找到终端双击打开</li>\n<li>使用command+空格 输入 Terminal 或 终端 回车打开</li>\n<li>打开应用程序-实用工具-终端 双击打开</li>\n</ol>"},{"title":"git推送到服务器自动同步到站点目录","date":"2016-10-27T16:52:35.000Z","_content":"\n有这样一种需求，在本地开发，然后push到服务器上，并且自动同步到web站点目录，这样就可以直接看到网页效果了。\n<!--more-->\n# git推送到服务器自动同步到站点目录\n\n分几个步骤 ?\n* 在服务器上创建裸版本库\n* 创建web目录\n* 本地初始化版本库\n* 本地克隆裸版本库\n* 设置裸版本库的钩子post-receive\n* 本地推送\n* 裸版本库接收到推送内容后自动检出到web目录实现同步\n\n## 创建裸版本库：\n\n```\n[root@localhost]$ mkdir /home/workspace\n[root@localhost]$ cd /home/workspace\n[root@localhost]$ git init -bare wwwroot.git\n```\n\n## 创建web目录：\n\n```\n[root@localhost]$ mkdir -p /home/website/wwwroot\n```\n\n~~暂时不需要~~\n~~**本地**初始化一个版本库~~\n~~[root@admin.pc]$ cd e:~~\n~~[root@admin.pc]$ git init local.git~~\n~~暂时不需要~~\n\n\n## 使用ssh协议从服务器上克隆裸版本库内容，这里如果没有配置公钥的话，会提示输入密码。\n\n```\n[root@admin.pc e:/local.git/]$ git clone ssh://root@xxx.xxx.x/home/workspace/wwwroot.git\n```\n\n## 设置钩子\n\n```\n[root@localhost]$ cd /home/workspace/wwwroot.git/hooks\n[root@localhost]$ cat > post-receive <<EOF\n>#!/bin/bash\n>git --work-tree=/home/website/wwwroot checkout -f \n>EOF\n[root@localhost]$ chmod +x post-receive\n```\n\n在服务器裸版本库目录下有一个hooks目录，进去后添加一个post-receive的文件，将上面>开头的几行代码输进去，可以用vi，我这里用的cat，保存后记得使用chmod将这个文件赋予可执行权限，成为一个shell脚本。其中 --work-tree对应站点文件目录。\n\n第一次push可能会有一些提示，因为裸版本库还什么都没有，你可能需要 git push origin master写全命令，之后就没必要了。\n\n\n","source":"_posts/gitToWebPage.md","raw":"---\ntitle: git推送到服务器自动同步到站点目录\ndate: 2016-10-28 00:52:35\ntags: \n    - git \n    - Linux\ncategories: GIT\n---\n\n有这样一种需求，在本地开发，然后push到服务器上，并且自动同步到web站点目录，这样就可以直接看到网页效果了。\n<!--more-->\n# git推送到服务器自动同步到站点目录\n\n分几个步骤 ?\n* 在服务器上创建裸版本库\n* 创建web目录\n* 本地初始化版本库\n* 本地克隆裸版本库\n* 设置裸版本库的钩子post-receive\n* 本地推送\n* 裸版本库接收到推送内容后自动检出到web目录实现同步\n\n## 创建裸版本库：\n\n```\n[root@localhost]$ mkdir /home/workspace\n[root@localhost]$ cd /home/workspace\n[root@localhost]$ git init -bare wwwroot.git\n```\n\n## 创建web目录：\n\n```\n[root@localhost]$ mkdir -p /home/website/wwwroot\n```\n\n~~暂时不需要~~\n~~**本地**初始化一个版本库~~\n~~[root@admin.pc]$ cd e:~~\n~~[root@admin.pc]$ git init local.git~~\n~~暂时不需要~~\n\n\n## 使用ssh协议从服务器上克隆裸版本库内容，这里如果没有配置公钥的话，会提示输入密码。\n\n```\n[root@admin.pc e:/local.git/]$ git clone ssh://root@xxx.xxx.x/home/workspace/wwwroot.git\n```\n\n## 设置钩子\n\n```\n[root@localhost]$ cd /home/workspace/wwwroot.git/hooks\n[root@localhost]$ cat > post-receive <<EOF\n>#!/bin/bash\n>git --work-tree=/home/website/wwwroot checkout -f \n>EOF\n[root@localhost]$ chmod +x post-receive\n```\n\n在服务器裸版本库目录下有一个hooks目录，进去后添加一个post-receive的文件，将上面>开头的几行代码输进去，可以用vi，我这里用的cat，保存后记得使用chmod将这个文件赋予可执行权限，成为一个shell脚本。其中 --work-tree对应站点文件目录。\n\n第一次push可能会有一些提示，因为裸版本库还什么都没有，你可能需要 git push origin master写全命令，之后就没必要了。\n\n\n","slug":"gitToWebPage","published":1,"updated":"2017-09-24T21:07:02.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj7zrohpz0002r1s6hwy8uvgw","content":"<p>有这样一种需求，在本地开发，然后push到服务器上，并且自动同步到web站点目录，这样就可以直接看到网页效果了。<br><a id=\"more\"></a></p>\n<h1 id=\"git推送到服务器自动同步到站点目录\"><a href=\"#git推送到服务器自动同步到站点目录\" class=\"headerlink\" title=\"git推送到服务器自动同步到站点目录\"></a>git推送到服务器自动同步到站点目录</h1><p>分几个步骤 ?</p>\n<ul>\n<li>在服务器上创建裸版本库</li>\n<li>创建web目录</li>\n<li>本地初始化版本库</li>\n<li>本地克隆裸版本库</li>\n<li>设置裸版本库的钩子post-receive</li>\n<li>本地推送</li>\n<li>裸版本库接收到推送内容后自动检出到web目录实现同步</li>\n</ul>\n<h2 id=\"创建裸版本库：\"><a href=\"#创建裸版本库：\" class=\"headerlink\" title=\"创建裸版本库：\"></a>创建裸版本库：</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root@localhost]$ mkdir /home/workspace</div><div class=\"line\">[root@localhost]$ cd /home/workspace</div><div class=\"line\">[root@localhost]$ git init -bare wwwroot.git</div></pre></td></tr></table></figure>\n<h2 id=\"创建web目录：\"><a href=\"#创建web目录：\" class=\"headerlink\" title=\"创建web目录：\"></a>创建web目录：</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root@localhost]$ mkdir -p /home/website/wwwroot</div></pre></td></tr></table></figure>\n<p><del>暂时不需要</del><br><del><strong>本地</strong>初始化一个版本库</del><br><del>[root@admin.pc]$ cd e:</del><br><del>[root@admin.pc]$ git init local.git</del><br><del>暂时不需要</del></p>\n<h2 id=\"使用ssh协议从服务器上克隆裸版本库内容，这里如果没有配置公钥的话，会提示输入密码。\"><a href=\"#使用ssh协议从服务器上克隆裸版本库内容，这里如果没有配置公钥的话，会提示输入密码。\" class=\"headerlink\" title=\"使用ssh协议从服务器上克隆裸版本库内容，这里如果没有配置公钥的话，会提示输入密码。\"></a>使用ssh协议从服务器上克隆裸版本库内容，这里如果没有配置公钥的话，会提示输入密码。</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root@admin.pc e:/local.git/]$ git clone ssh://root@xxx.xxx.x/home/workspace/wwwroot.git</div></pre></td></tr></table></figure>\n<h2 id=\"设置钩子\"><a href=\"#设置钩子\" class=\"headerlink\" title=\"设置钩子\"></a>设置钩子</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root@localhost]$ cd /home/workspace/wwwroot.git/hooks</div><div class=\"line\">[root@localhost]$ cat &gt; post-receive &lt;&lt;EOF</div><div class=\"line\">&gt;#!/bin/bash</div><div class=\"line\">&gt;git --work-tree=/home/website/wwwroot checkout -f </div><div class=\"line\">&gt;EOF</div><div class=\"line\">[root@localhost]$ chmod +x post-receive</div></pre></td></tr></table></figure>\n<p>在服务器裸版本库目录下有一个hooks目录，进去后添加一个post-receive的文件，将上面&gt;开头的几行代码输进去，可以用vi，我这里用的cat，保存后记得使用chmod将这个文件赋予可执行权限，成为一个shell脚本。其中 –work-tree对应站点文件目录。</p>\n<p>第一次push可能会有一些提示，因为裸版本库还什么都没有，你可能需要 git push origin master写全命令，之后就没必要了。</p>\n","site":{"data":{}},"excerpt":"<p>有这样一种需求，在本地开发，然后push到服务器上，并且自动同步到web站点目录，这样就可以直接看到网页效果了。<br>","more":"</p>\n<h1 id=\"git推送到服务器自动同步到站点目录\"><a href=\"#git推送到服务器自动同步到站点目录\" class=\"headerlink\" title=\"git推送到服务器自动同步到站点目录\"></a>git推送到服务器自动同步到站点目录</h1><p>分几个步骤 ?</p>\n<ul>\n<li>在服务器上创建裸版本库</li>\n<li>创建web目录</li>\n<li>本地初始化版本库</li>\n<li>本地克隆裸版本库</li>\n<li>设置裸版本库的钩子post-receive</li>\n<li>本地推送</li>\n<li>裸版本库接收到推送内容后自动检出到web目录实现同步</li>\n</ul>\n<h2 id=\"创建裸版本库：\"><a href=\"#创建裸版本库：\" class=\"headerlink\" title=\"创建裸版本库：\"></a>创建裸版本库：</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root@localhost]$ mkdir /home/workspace</div><div class=\"line\">[root@localhost]$ cd /home/workspace</div><div class=\"line\">[root@localhost]$ git init -bare wwwroot.git</div></pre></td></tr></table></figure>\n<h2 id=\"创建web目录：\"><a href=\"#创建web目录：\" class=\"headerlink\" title=\"创建web目录：\"></a>创建web目录：</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root@localhost]$ mkdir -p /home/website/wwwroot</div></pre></td></tr></table></figure>\n<p><del>暂时不需要</del><br><del><strong>本地</strong>初始化一个版本库</del><br><del>[root@admin.pc]$ cd e:</del><br><del>[root@admin.pc]$ git init local.git</del><br><del>暂时不需要</del></p>\n<h2 id=\"使用ssh协议从服务器上克隆裸版本库内容，这里如果没有配置公钥的话，会提示输入密码。\"><a href=\"#使用ssh协议从服务器上克隆裸版本库内容，这里如果没有配置公钥的话，会提示输入密码。\" class=\"headerlink\" title=\"使用ssh协议从服务器上克隆裸版本库内容，这里如果没有配置公钥的话，会提示输入密码。\"></a>使用ssh协议从服务器上克隆裸版本库内容，这里如果没有配置公钥的话，会提示输入密码。</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root@admin.pc e:/local.git/]$ git clone ssh://root@xxx.xxx.x/home/workspace/wwwroot.git</div></pre></td></tr></table></figure>\n<h2 id=\"设置钩子\"><a href=\"#设置钩子\" class=\"headerlink\" title=\"设置钩子\"></a>设置钩子</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root@localhost]$ cd /home/workspace/wwwroot.git/hooks</div><div class=\"line\">[root@localhost]$ cat &gt; post-receive &lt;&lt;EOF</div><div class=\"line\">&gt;#!/bin/bash</div><div class=\"line\">&gt;git --work-tree=/home/website/wwwroot checkout -f </div><div class=\"line\">&gt;EOF</div><div class=\"line\">[root@localhost]$ chmod +x post-receive</div></pre></td></tr></table></figure>\n<p>在服务器裸版本库目录下有一个hooks目录，进去后添加一个post-receive的文件，将上面&gt;开头的几行代码输进去，可以用vi，我这里用的cat，保存后记得使用chmod将这个文件赋予可执行权限，成为一个shell脚本。其中 –work-tree对应站点文件目录。</p>\n<p>第一次push可能会有一些提示，因为裸版本库还什么都没有，你可能需要 git push origin master写全命令，之后就没必要了。</p>"},{"title":"hexo折腾日记","date":"2016-08-13T03:52:13.000Z","_content":"1.安装git和node.js 安装自行百度\n2.如果您的计算机已经有这些，恭喜！只要安装Hexo新公共管理\n\n3.安装hexo\n```\n\tnpm install -g hexo-cli\n```\n4.正式的旅程碑\n```\nhexo init <folder>\ncd <folder>\nnpm install\n```\n5.如何发布GitHub上\n\t1）在source目录学新建一个没有后缀名名为CNAME的文件，在里面写入你的域名（不带www）\n\t2）解析你的域名到GitHub上的仓库名称xxx.github.io （自行百度）\n\t3）修改hexo目录下站点配置文件找到deploy\n```\n\t\tdeploy:\n  \t\t\ttype: git\n  \t\t\trepository: https://github.com/sonny/sonny.github.io.git\n  \t\t\tbranch: master\n  ```\n \t*注意这里的repository填写你的仓库地址，这里是我的*\n \t4）你的项目根目下运行发布命令\n```\n\t\thexo g -d \n```\n\t5）搭建 hexo，在执行 hexo deploy 后,出现 error deployer not found:git 的错误:\n解决方法1.\n\t\t将第3步的type值改为：type: github\n解决方法2。\n```\n\tnpm install hexo-deployer-git --save\n```\n\n6.其余详细教程请参考https://hexo.io/docs/\n\n\n\n\n","source":"_posts/hexoInstall.md","raw":"---\ntitle: hexo折腾日记\ndate: 2016-08-13 11:52:13\ntags:\n---\n1.安装git和node.js 安装自行百度\n2.如果您的计算机已经有这些，恭喜！只要安装Hexo新公共管理\n\n3.安装hexo\n```\n\tnpm install -g hexo-cli\n```\n4.正式的旅程碑\n```\nhexo init <folder>\ncd <folder>\nnpm install\n```\n5.如何发布GitHub上\n\t1）在source目录学新建一个没有后缀名名为CNAME的文件，在里面写入你的域名（不带www）\n\t2）解析你的域名到GitHub上的仓库名称xxx.github.io （自行百度）\n\t3）修改hexo目录下站点配置文件找到deploy\n```\n\t\tdeploy:\n  \t\t\ttype: git\n  \t\t\trepository: https://github.com/sonny/sonny.github.io.git\n  \t\t\tbranch: master\n  ```\n \t*注意这里的repository填写你的仓库地址，这里是我的*\n \t4）你的项目根目下运行发布命令\n```\n\t\thexo g -d \n```\n\t5）搭建 hexo，在执行 hexo deploy 后,出现 error deployer not found:git 的错误:\n解决方法1.\n\t\t将第3步的type值改为：type: github\n解决方法2。\n```\n\tnpm install hexo-deployer-git --save\n```\n\n6.其余详细教程请参考https://hexo.io/docs/\n\n\n\n\n","slug":"hexoInstall","published":1,"updated":"2017-09-24T21:02:23.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj7zrohq90006r1s6lsg6gyu3","content":"<p>1.安装git和node.js 安装自行百度<br>2.如果您的计算机已经有这些，恭喜！只要安装Hexo新公共管理</p>\n<p>3.安装hexo<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install -g hexo-cli</div></pre></td></tr></table></figure></p>\n<p>4.正式的旅程碑<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo init &lt;folder&gt;</div><div class=\"line\">cd &lt;folder&gt;</div><div class=\"line\">npm install</div></pre></td></tr></table></figure></p>\n<p>5.如何发布GitHub上<br>    1）在source目录学新建一个没有后缀名名为CNAME的文件，在里面写入你的域名（不带www）<br>    2）解析你的域名到GitHub上的仓库名称xxx.github.io （自行百度）<br>    3）修改hexo目录下站点配置文件找到deploy<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">deploy:</div><div class=\"line\">\t\t\ttype: git</div><div class=\"line\">\t\t\trepository: https://github.com/sonny/sonny.github.io.git</div><div class=\"line\">\t\t\tbranch: master</div></pre></td></tr></table></figure></p>\n<pre><code>*注意这里的repository填写你的仓库地址，这里是我的*\n4）你的项目根目下运行发布命令\n</code></pre><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo g -d</div></pre></td></tr></table></figure>\n<pre><code>5）搭建 hexo，在执行 hexo deploy 后,出现 error deployer not found:git 的错误:\n</code></pre><p>解决方法1.<br>        将第3步的type值改为：type: github<br>解决方法2。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install hexo-deployer-git --save</div></pre></td></tr></table></figure></p>\n<p>6.其余详细教程请参考<a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"external\">https://hexo.io/docs/</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>1.安装git和node.js 安装自行百度<br>2.如果您的计算机已经有这些，恭喜！只要安装Hexo新公共管理</p>\n<p>3.安装hexo<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install -g hexo-cli</div></pre></td></tr></table></figure></p>\n<p>4.正式的旅程碑<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo init &lt;folder&gt;</div><div class=\"line\">cd &lt;folder&gt;</div><div class=\"line\">npm install</div></pre></td></tr></table></figure></p>\n<p>5.如何发布GitHub上<br>    1）在source目录学新建一个没有后缀名名为CNAME的文件，在里面写入你的域名（不带www）<br>    2）解析你的域名到GitHub上的仓库名称xxx.github.io （自行百度）<br>    3）修改hexo目录下站点配置文件找到deploy<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">deploy:</div><div class=\"line\">\t\t\ttype: git</div><div class=\"line\">\t\t\trepository: https://github.com/sonny/sonny.github.io.git</div><div class=\"line\">\t\t\tbranch: master</div></pre></td></tr></table></figure></p>\n<pre><code>*注意这里的repository填写你的仓库地址，这里是我的*\n4）你的项目根目下运行发布命令\n</code></pre><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo g -d</div></pre></td></tr></table></figure>\n<pre><code>5）搭建 hexo，在执行 hexo deploy 后,出现 error deployer not found:git 的错误:\n</code></pre><p>解决方法1.<br>        将第3步的type值改为：type: github<br>解决方法2。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install hexo-deployer-git --save</div></pre></td></tr></table></figure></p>\n<p>6.其余详细教程请参考<a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"external\">https://hexo.io/docs/</a></p>\n"},{"title":"Laravel中的Excel","date":"2016-09-07T17:57:23.000Z","_content":"\n\nLaravel Excel 在 Laravel 5 中集成 PHPOffice 套件中的 PHPExcel ，从而方便我们以优雅的、富有表现力的代码实现Excel/CSV文件的导入和 导出 。\n该项目的GitHub地址是： https://github.com/Maatwebsite/Laravel-Excel 。\n本文我们将在Laravel中使用Laravel Excel简单实现Excel文件的导入和导出\n<!--more-->\n# 2、安装&配置\n使用Composer安装依赖 \n首先在Laravel项目根目录下使用Composer安装依赖：\n\n```\ncomposer require maatwebsite/excel ~2.0.0\n```\n\n安装后的设置\n在 config/app.php 中注册服务提供者到 providers 数组：\n\n```\nMaatwebsite\\Excel\\ExcelServiceProvider::class,\n```\n\n同样在 config/app.php 中注册门面到 aliases 数组：\n\n```\n'Excel' => Maatwebsite\\Excel\\Facades\\Excel::class,\n```\n\n如果想要对Laravel Excel进行更多的自定义配置，执行如下Artisan命令，执行成功后会在 config 目录下生成一个配置文件 excel.php 。\n\n```\nphp artisan vendor:publish\n```\n\n# 3、导出Excel文件\n为了演示Laravel Excel相关功能，我们为本测试创建一个干净的控制器 ExcelController.php ：\n\n```\nphp artisan make:controller ExcelController --plain\n```\n\n然后在 web.php 中定义相关路由：\n\n```\n$router->get('excel/export','ExcelController@export');\n$router->get('excel/import','ExcelController@import');\n```\n\n\n```\n<?php\nnamespace App\\Http\\Controllers\\Api;\nuse DB;\nuse Excel;\nuse App\\Http\\Controllers\\Controller;\nuse Illuminate\\Http\\Request;\nclass ExcelController extends Controller\n{\n\tExcel文件导出功能\n\tpublic function export()\n\t{\n\t$info = DB::table('dtsz')\n\t\t->select('id', 'name', 'phone', 'yiyuan', 'dlsname', 'pname', 'addtime', 'logintime')\n\t\t->get();\n\t$cellData = [\n\t\t['共'.count($info).'条'],\n\t\t[' ','姓名', '电话', '所在医院', '推荐人', '所在地区', '注册日期', '最后登录日期', '总计登录天数', '转诊病人数(含新转诊)', '总计提现金额(含未审核)', '剩余积分(含未审核)'],\n\t];\n\tforeach ($info as $k => $v) {\n\t\t$count  = DB::table('patients')->where('uid', $v->id)->count();\n\t\t$get    = DB::table('jifenlog')->where('uid', $v->id)->where('sztype', 0)->select(DB::raw('SUM(jifen) as total_sales'))->first();\n\t\t$out    = DB::table('jifenlog')->where('uid', $v->id)->where('sztype', 1)->select(DB::raw('SUM(jifen) as total_sales'))->first();\n\t\t$cellData[$k + 2][] = $k + 1;\n\t\t$cellData[$k + 2][] = $v->name ? $v->name : '';\n\t\t$cellData[$k + 2][] = $v->phone ? $v->phone : '';\n\t\t$cellData[$k + 2][] = $v->yiyuan ? $v->yiyuan : '';\n\t\t$cellData[$k + 2][] = $v->dlsname ? $v->dlsname : '';\n\t\t$cellData[$k + 2][] = $v->pname ? $v->pname : '';\n\t\t$cellData[$k + 2][] = date('Y-m-d H:i:s', $v->addtime);\n\t\t$cellData[$k + 2][] = date('Y-m-d H:i:s', $v->logintime);\n\t\t$cellData[$k + 2][] = $v->day = 0;\n\t\t$cellData[$k + 2][] = $v->count_human = $count;\n\t\t$cellData[$k + 2][] = $v->count_sum = $get->total_sales ? $get->total_sales : 0;\n\t\t$cellData[$k + 2][] = $out->total_sales ? $out->total_sales : 0;\n\t}\n\tExcel::create('召回用户黑名单', function ($excel) use ($cellData) {\n\t\t$excel->sheet('score', function ($sheet) use ($cellData) {\n\t\t\t$sheet->rows($cellData);\n\t\t});\n\t})->export('xls');\n\t}\n}\n```\n\n我们在浏览器中访问 http://localhost:8000/excel/export ，会导出一个名为 召回用户黑名单.xls 的Excel文件：\n\n![111](http://oe2qf8as1.bkt.clouddn.com/854F.tm.png)\n\n如果你要导出csv或者xlsx文件，只需将 export 方法中的参数改成csv或xlsx即可。\n如果还要将该Excel文件保存到服务器上，可以使用 store 方法：\n\n```\nExcel::create('召回用户黑名单',function($excel) use ($cellData){\n     $excel->sheet('score', function($sheet) use ($cellData){\n         $sheet->rows($cellData);\n     });\n})->store('xls')->export('xls');\n```\n\n文件默认保存到 storage/exports 目录下，如果出现文件名中文乱码，将上述代码文件名做如下修改即可：\n\n```\niconv('UTF-8', 'GBK', '召回用户黑名单')\n```\n\n# 4、导入Excel文件\n我们将刚才保存到服务器上的Excel文件导入进来，导入很简单，使用 Excel 门面上的 load 方法即可：\n\n```\nExcel文件导入功能  \npublic function import(){\n    $filePath = 'storage/exports/'.iconv('UTF-8', 'GBK', '召回用户黑名单').'.xls';\n    Excel::load($filePath, function($reader) {\n        $data = $reader->all();\n        dd($data);\n    });\n}\n```\n\nload 方法基于项目根路径作为根目录，同样我们对中文进行了转码，否则会提示文件不存在。\n在浏览器中访问 http://localhost:8000/excel/import ，页面显示如下：\n\n\n当然，Laravel Excel还有很多其它功能，比如将Blade视图导出为Excel或CSV，以及对导入/导出更加细粒度的控制，具体可参考其官方文档： http://www.maatwebsite.nl/laravel-excel/docs\n\n","source":"_posts/laravelExecl.md","raw":"---\ntitle: Laravel中的Excel\ndate: 2016-09-08 01:57:23\ntags:\n    - Laravel\n    - Excel\ncategories: Laravel奇淫技巧\n---\n\n\nLaravel Excel 在 Laravel 5 中集成 PHPOffice 套件中的 PHPExcel ，从而方便我们以优雅的、富有表现力的代码实现Excel/CSV文件的导入和 导出 。\n该项目的GitHub地址是： https://github.com/Maatwebsite/Laravel-Excel 。\n本文我们将在Laravel中使用Laravel Excel简单实现Excel文件的导入和导出\n<!--more-->\n# 2、安装&配置\n使用Composer安装依赖 \n首先在Laravel项目根目录下使用Composer安装依赖：\n\n```\ncomposer require maatwebsite/excel ~2.0.0\n```\n\n安装后的设置\n在 config/app.php 中注册服务提供者到 providers 数组：\n\n```\nMaatwebsite\\Excel\\ExcelServiceProvider::class,\n```\n\n同样在 config/app.php 中注册门面到 aliases 数组：\n\n```\n'Excel' => Maatwebsite\\Excel\\Facades\\Excel::class,\n```\n\n如果想要对Laravel Excel进行更多的自定义配置，执行如下Artisan命令，执行成功后会在 config 目录下生成一个配置文件 excel.php 。\n\n```\nphp artisan vendor:publish\n```\n\n# 3、导出Excel文件\n为了演示Laravel Excel相关功能，我们为本测试创建一个干净的控制器 ExcelController.php ：\n\n```\nphp artisan make:controller ExcelController --plain\n```\n\n然后在 web.php 中定义相关路由：\n\n```\n$router->get('excel/export','ExcelController@export');\n$router->get('excel/import','ExcelController@import');\n```\n\n\n```\n<?php\nnamespace App\\Http\\Controllers\\Api;\nuse DB;\nuse Excel;\nuse App\\Http\\Controllers\\Controller;\nuse Illuminate\\Http\\Request;\nclass ExcelController extends Controller\n{\n\tExcel文件导出功能\n\tpublic function export()\n\t{\n\t$info = DB::table('dtsz')\n\t\t->select('id', 'name', 'phone', 'yiyuan', 'dlsname', 'pname', 'addtime', 'logintime')\n\t\t->get();\n\t$cellData = [\n\t\t['共'.count($info).'条'],\n\t\t[' ','姓名', '电话', '所在医院', '推荐人', '所在地区', '注册日期', '最后登录日期', '总计登录天数', '转诊病人数(含新转诊)', '总计提现金额(含未审核)', '剩余积分(含未审核)'],\n\t];\n\tforeach ($info as $k => $v) {\n\t\t$count  = DB::table('patients')->where('uid', $v->id)->count();\n\t\t$get    = DB::table('jifenlog')->where('uid', $v->id)->where('sztype', 0)->select(DB::raw('SUM(jifen) as total_sales'))->first();\n\t\t$out    = DB::table('jifenlog')->where('uid', $v->id)->where('sztype', 1)->select(DB::raw('SUM(jifen) as total_sales'))->first();\n\t\t$cellData[$k + 2][] = $k + 1;\n\t\t$cellData[$k + 2][] = $v->name ? $v->name : '';\n\t\t$cellData[$k + 2][] = $v->phone ? $v->phone : '';\n\t\t$cellData[$k + 2][] = $v->yiyuan ? $v->yiyuan : '';\n\t\t$cellData[$k + 2][] = $v->dlsname ? $v->dlsname : '';\n\t\t$cellData[$k + 2][] = $v->pname ? $v->pname : '';\n\t\t$cellData[$k + 2][] = date('Y-m-d H:i:s', $v->addtime);\n\t\t$cellData[$k + 2][] = date('Y-m-d H:i:s', $v->logintime);\n\t\t$cellData[$k + 2][] = $v->day = 0;\n\t\t$cellData[$k + 2][] = $v->count_human = $count;\n\t\t$cellData[$k + 2][] = $v->count_sum = $get->total_sales ? $get->total_sales : 0;\n\t\t$cellData[$k + 2][] = $out->total_sales ? $out->total_sales : 0;\n\t}\n\tExcel::create('召回用户黑名单', function ($excel) use ($cellData) {\n\t\t$excel->sheet('score', function ($sheet) use ($cellData) {\n\t\t\t$sheet->rows($cellData);\n\t\t});\n\t})->export('xls');\n\t}\n}\n```\n\n我们在浏览器中访问 http://localhost:8000/excel/export ，会导出一个名为 召回用户黑名单.xls 的Excel文件：\n\n![111](http://oe2qf8as1.bkt.clouddn.com/854F.tm.png)\n\n如果你要导出csv或者xlsx文件，只需将 export 方法中的参数改成csv或xlsx即可。\n如果还要将该Excel文件保存到服务器上，可以使用 store 方法：\n\n```\nExcel::create('召回用户黑名单',function($excel) use ($cellData){\n     $excel->sheet('score', function($sheet) use ($cellData){\n         $sheet->rows($cellData);\n     });\n})->store('xls')->export('xls');\n```\n\n文件默认保存到 storage/exports 目录下，如果出现文件名中文乱码，将上述代码文件名做如下修改即可：\n\n```\niconv('UTF-8', 'GBK', '召回用户黑名单')\n```\n\n# 4、导入Excel文件\n我们将刚才保存到服务器上的Excel文件导入进来，导入很简单，使用 Excel 门面上的 load 方法即可：\n\n```\nExcel文件导入功能  \npublic function import(){\n    $filePath = 'storage/exports/'.iconv('UTF-8', 'GBK', '召回用户黑名单').'.xls';\n    Excel::load($filePath, function($reader) {\n        $data = $reader->all();\n        dd($data);\n    });\n}\n```\n\nload 方法基于项目根路径作为根目录，同样我们对中文进行了转码，否则会提示文件不存在。\n在浏览器中访问 http://localhost:8000/excel/import ，页面显示如下：\n\n\n当然，Laravel Excel还有很多其它功能，比如将Blade视图导出为Excel或CSV，以及对导入/导出更加细粒度的控制，具体可参考其官方文档： http://www.maatwebsite.nl/laravel-excel/docs\n\n","slug":"laravelExecl","published":1,"updated":"2017-09-24T21:05:01.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj7zrohqd0008r1s6gzis0vww","content":"<p>Laravel Excel 在 Laravel 5 中集成 PHPOffice 套件中的 PHPExcel ，从而方便我们以优雅的、富有表现力的代码实现Excel/CSV文件的导入和 导出 。<br>该项目的GitHub地址是： <a href=\"https://github.com/Maatwebsite/Laravel-Excel\" target=\"_blank\" rel=\"external\">https://github.com/Maatwebsite/Laravel-Excel</a> 。<br>本文我们将在Laravel中使用Laravel Excel简单实现Excel文件的导入和导出<br><a id=\"more\"></a></p>\n<h1 id=\"2、安装-amp-配置\"><a href=\"#2、安装-amp-配置\" class=\"headerlink\" title=\"2、安装&amp;配置\"></a>2、安装&amp;配置</h1><p>使用Composer安装依赖<br>首先在Laravel项目根目录下使用Composer安装依赖：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">composer require maatwebsite/excel ~2.0.0</div></pre></td></tr></table></figure>\n<p>安装后的设置<br>在 config/app.php 中注册服务提供者到 providers 数组：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">Maatwebsite\\Excel\\ExcelServiceProvider::class,</div></pre></td></tr></table></figure>\n<p>同样在 config/app.php 中注册门面到 aliases 数组：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&apos;Excel&apos; =&gt; Maatwebsite\\Excel\\Facades\\Excel::class,</div></pre></td></tr></table></figure>\n<p>如果想要对Laravel Excel进行更多的自定义配置，执行如下Artisan命令，执行成功后会在 config 目录下生成一个配置文件 excel.php 。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">php artisan vendor:publish</div></pre></td></tr></table></figure>\n<h1 id=\"3、导出Excel文件\"><a href=\"#3、导出Excel文件\" class=\"headerlink\" title=\"3、导出Excel文件\"></a>3、导出Excel文件</h1><p>为了演示Laravel Excel相关功能，我们为本测试创建一个干净的控制器 ExcelController.php ：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">php artisan make:controller ExcelController --plain</div></pre></td></tr></table></figure>\n<p>然后在 web.php 中定义相关路由：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">$router-&gt;get(&apos;excel/export&apos;,&apos;ExcelController@export&apos;);</div><div class=\"line\">$router-&gt;get(&apos;excel/import&apos;,&apos;ExcelController@import&apos;);</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?php</div><div class=\"line\">namespace App\\Http\\Controllers\\Api;</div><div class=\"line\">use DB;</div><div class=\"line\">use Excel;</div><div class=\"line\">use App\\Http\\Controllers\\Controller;</div><div class=\"line\">use Illuminate\\Http\\Request;</div><div class=\"line\">class ExcelController extends Controller</div><div class=\"line\">&#123;</div><div class=\"line\">\tExcel文件导出功能</div><div class=\"line\">\tpublic function export()</div><div class=\"line\">\t&#123;</div><div class=\"line\">\t$info = DB::table(&apos;dtsz&apos;)</div><div class=\"line\">\t\t-&gt;select(&apos;id&apos;, &apos;name&apos;, &apos;phone&apos;, &apos;yiyuan&apos;, &apos;dlsname&apos;, &apos;pname&apos;, &apos;addtime&apos;, &apos;logintime&apos;)</div><div class=\"line\">\t\t-&gt;get();</div><div class=\"line\">\t$cellData = [</div><div class=\"line\">\t\t[&apos;共&apos;.count($info).&apos;条&apos;],</div><div class=\"line\">\t\t[&apos; &apos;,&apos;姓名&apos;, &apos;电话&apos;, &apos;所在医院&apos;, &apos;推荐人&apos;, &apos;所在地区&apos;, &apos;注册日期&apos;, &apos;最后登录日期&apos;, &apos;总计登录天数&apos;, &apos;转诊病人数(含新转诊)&apos;, &apos;总计提现金额(含未审核)&apos;, &apos;剩余积分(含未审核)&apos;],</div><div class=\"line\">\t];</div><div class=\"line\">\tforeach ($info as $k =&gt; $v) &#123;</div><div class=\"line\">\t\t$count  = DB::table(&apos;patients&apos;)-&gt;where(&apos;uid&apos;, $v-&gt;id)-&gt;count();</div><div class=\"line\">\t\t$get    = DB::table(&apos;jifenlog&apos;)-&gt;where(&apos;uid&apos;, $v-&gt;id)-&gt;where(&apos;sztype&apos;, 0)-&gt;select(DB::raw(&apos;SUM(jifen) as total_sales&apos;))-&gt;first();</div><div class=\"line\">\t\t$out    = DB::table(&apos;jifenlog&apos;)-&gt;where(&apos;uid&apos;, $v-&gt;id)-&gt;where(&apos;sztype&apos;, 1)-&gt;select(DB::raw(&apos;SUM(jifen) as total_sales&apos;))-&gt;first();</div><div class=\"line\">\t\t$cellData[$k + 2][] = $k + 1;</div><div class=\"line\">\t\t$cellData[$k + 2][] = $v-&gt;name ? $v-&gt;name : &apos;&apos;;</div><div class=\"line\">\t\t$cellData[$k + 2][] = $v-&gt;phone ? $v-&gt;phone : &apos;&apos;;</div><div class=\"line\">\t\t$cellData[$k + 2][] = $v-&gt;yiyuan ? $v-&gt;yiyuan : &apos;&apos;;</div><div class=\"line\">\t\t$cellData[$k + 2][] = $v-&gt;dlsname ? $v-&gt;dlsname : &apos;&apos;;</div><div class=\"line\">\t\t$cellData[$k + 2][] = $v-&gt;pname ? $v-&gt;pname : &apos;&apos;;</div><div class=\"line\">\t\t$cellData[$k + 2][] = date(&apos;Y-m-d H:i:s&apos;, $v-&gt;addtime);</div><div class=\"line\">\t\t$cellData[$k + 2][] = date(&apos;Y-m-d H:i:s&apos;, $v-&gt;logintime);</div><div class=\"line\">\t\t$cellData[$k + 2][] = $v-&gt;day = 0;</div><div class=\"line\">\t\t$cellData[$k + 2][] = $v-&gt;count_human = $count;</div><div class=\"line\">\t\t$cellData[$k + 2][] = $v-&gt;count_sum = $get-&gt;total_sales ? $get-&gt;total_sales : 0;</div><div class=\"line\">\t\t$cellData[$k + 2][] = $out-&gt;total_sales ? $out-&gt;total_sales : 0;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\tExcel::create(&apos;召回用户黑名单&apos;, function ($excel) use ($cellData) &#123;</div><div class=\"line\">\t\t$excel-&gt;sheet(&apos;score&apos;, function ($sheet) use ($cellData) &#123;</div><div class=\"line\">\t\t\t$sheet-&gt;rows($cellData);</div><div class=\"line\">\t\t&#125;);</div><div class=\"line\">\t&#125;)-&gt;export(&apos;xls&apos;);</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>我们在浏览器中访问 <a href=\"http://localhost:8000/excel/export\" target=\"_blank\" rel=\"external\">http://localhost:8000/excel/export</a> ，会导出一个名为 召回用户黑名单.xls 的Excel文件：</p>\n<p><img src=\"http://oe2qf8as1.bkt.clouddn.com/854F.tm.png\" alt=\"111\"></p>\n<p>如果你要导出csv或者xlsx文件，只需将 export 方法中的参数改成csv或xlsx即可。<br>如果还要将该Excel文件保存到服务器上，可以使用 store 方法：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">Excel::create(&apos;召回用户黑名单&apos;,function($excel) use ($cellData)&#123;</div><div class=\"line\">     $excel-&gt;sheet(&apos;score&apos;, function($sheet) use ($cellData)&#123;</div><div class=\"line\">         $sheet-&gt;rows($cellData);</div><div class=\"line\">     &#125;);</div><div class=\"line\">&#125;)-&gt;store(&apos;xls&apos;)-&gt;export(&apos;xls&apos;);</div></pre></td></tr></table></figure>\n<p>文件默认保存到 storage/exports 目录下，如果出现文件名中文乱码，将上述代码文件名做如下修改即可：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">iconv(&apos;UTF-8&apos;, &apos;GBK&apos;, &apos;召回用户黑名单&apos;)</div></pre></td></tr></table></figure>\n<h1 id=\"4、导入Excel文件\"><a href=\"#4、导入Excel文件\" class=\"headerlink\" title=\"4、导入Excel文件\"></a>4、导入Excel文件</h1><p>我们将刚才保存到服务器上的Excel文件导入进来，导入很简单，使用 Excel 门面上的 load 方法即可：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">Excel文件导入功能  </div><div class=\"line\">public function import()&#123;</div><div class=\"line\">    $filePath = &apos;storage/exports/&apos;.iconv(&apos;UTF-8&apos;, &apos;GBK&apos;, &apos;召回用户黑名单&apos;).&apos;.xls&apos;;</div><div class=\"line\">    Excel::load($filePath, function($reader) &#123;</div><div class=\"line\">        $data = $reader-&gt;all();</div><div class=\"line\">        dd($data);</div><div class=\"line\">    &#125;);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>load 方法基于项目根路径作为根目录，同样我们对中文进行了转码，否则会提示文件不存在。<br>在浏览器中访问 <a href=\"http://localhost:8000/excel/import\" target=\"_blank\" rel=\"external\">http://localhost:8000/excel/import</a> ，页面显示如下：</p>\n<p>当然，Laravel Excel还有很多其它功能，比如将Blade视图导出为Excel或CSV，以及对导入/导出更加细粒度的控制，具体可参考其官方文档： <a href=\"http://www.maatwebsite.nl/laravel-excel/docs\" target=\"_blank\" rel=\"external\">http://www.maatwebsite.nl/laravel-excel/docs</a></p>\n","site":{"data":{}},"excerpt":"<p>Laravel Excel 在 Laravel 5 中集成 PHPOffice 套件中的 PHPExcel ，从而方便我们以优雅的、富有表现力的代码实现Excel/CSV文件的导入和 导出 。<br>该项目的GitHub地址是： <a href=\"https://github.com/Maatwebsite/Laravel-Excel\" target=\"_blank\" rel=\"external\">https://github.com/Maatwebsite/Laravel-Excel</a> 。<br>本文我们将在Laravel中使用Laravel Excel简单实现Excel文件的导入和导出<br>","more":"</p>\n<h1 id=\"2、安装-amp-配置\"><a href=\"#2、安装-amp-配置\" class=\"headerlink\" title=\"2、安装&amp;配置\"></a>2、安装&amp;配置</h1><p>使用Composer安装依赖<br>首先在Laravel项目根目录下使用Composer安装依赖：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">composer require maatwebsite/excel ~2.0.0</div></pre></td></tr></table></figure>\n<p>安装后的设置<br>在 config/app.php 中注册服务提供者到 providers 数组：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">Maatwebsite\\Excel\\ExcelServiceProvider::class,</div></pre></td></tr></table></figure>\n<p>同样在 config/app.php 中注册门面到 aliases 数组：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&apos;Excel&apos; =&gt; Maatwebsite\\Excel\\Facades\\Excel::class,</div></pre></td></tr></table></figure>\n<p>如果想要对Laravel Excel进行更多的自定义配置，执行如下Artisan命令，执行成功后会在 config 目录下生成一个配置文件 excel.php 。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">php artisan vendor:publish</div></pre></td></tr></table></figure>\n<h1 id=\"3、导出Excel文件\"><a href=\"#3、导出Excel文件\" class=\"headerlink\" title=\"3、导出Excel文件\"></a>3、导出Excel文件</h1><p>为了演示Laravel Excel相关功能，我们为本测试创建一个干净的控制器 ExcelController.php ：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">php artisan make:controller ExcelController --plain</div></pre></td></tr></table></figure>\n<p>然后在 web.php 中定义相关路由：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">$router-&gt;get(&apos;excel/export&apos;,&apos;ExcelController@export&apos;);</div><div class=\"line\">$router-&gt;get(&apos;excel/import&apos;,&apos;ExcelController@import&apos;);</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?php</div><div class=\"line\">namespace App\\Http\\Controllers\\Api;</div><div class=\"line\">use DB;</div><div class=\"line\">use Excel;</div><div class=\"line\">use App\\Http\\Controllers\\Controller;</div><div class=\"line\">use Illuminate\\Http\\Request;</div><div class=\"line\">class ExcelController extends Controller</div><div class=\"line\">&#123;</div><div class=\"line\">\tExcel文件导出功能</div><div class=\"line\">\tpublic function export()</div><div class=\"line\">\t&#123;</div><div class=\"line\">\t$info = DB::table(&apos;dtsz&apos;)</div><div class=\"line\">\t\t-&gt;select(&apos;id&apos;, &apos;name&apos;, &apos;phone&apos;, &apos;yiyuan&apos;, &apos;dlsname&apos;, &apos;pname&apos;, &apos;addtime&apos;, &apos;logintime&apos;)</div><div class=\"line\">\t\t-&gt;get();</div><div class=\"line\">\t$cellData = [</div><div class=\"line\">\t\t[&apos;共&apos;.count($info).&apos;条&apos;],</div><div class=\"line\">\t\t[&apos; &apos;,&apos;姓名&apos;, &apos;电话&apos;, &apos;所在医院&apos;, &apos;推荐人&apos;, &apos;所在地区&apos;, &apos;注册日期&apos;, &apos;最后登录日期&apos;, &apos;总计登录天数&apos;, &apos;转诊病人数(含新转诊)&apos;, &apos;总计提现金额(含未审核)&apos;, &apos;剩余积分(含未审核)&apos;],</div><div class=\"line\">\t];</div><div class=\"line\">\tforeach ($info as $k =&gt; $v) &#123;</div><div class=\"line\">\t\t$count  = DB::table(&apos;patients&apos;)-&gt;where(&apos;uid&apos;, $v-&gt;id)-&gt;count();</div><div class=\"line\">\t\t$get    = DB::table(&apos;jifenlog&apos;)-&gt;where(&apos;uid&apos;, $v-&gt;id)-&gt;where(&apos;sztype&apos;, 0)-&gt;select(DB::raw(&apos;SUM(jifen) as total_sales&apos;))-&gt;first();</div><div class=\"line\">\t\t$out    = DB::table(&apos;jifenlog&apos;)-&gt;where(&apos;uid&apos;, $v-&gt;id)-&gt;where(&apos;sztype&apos;, 1)-&gt;select(DB::raw(&apos;SUM(jifen) as total_sales&apos;))-&gt;first();</div><div class=\"line\">\t\t$cellData[$k + 2][] = $k + 1;</div><div class=\"line\">\t\t$cellData[$k + 2][] = $v-&gt;name ? $v-&gt;name : &apos;&apos;;</div><div class=\"line\">\t\t$cellData[$k + 2][] = $v-&gt;phone ? $v-&gt;phone : &apos;&apos;;</div><div class=\"line\">\t\t$cellData[$k + 2][] = $v-&gt;yiyuan ? $v-&gt;yiyuan : &apos;&apos;;</div><div class=\"line\">\t\t$cellData[$k + 2][] = $v-&gt;dlsname ? $v-&gt;dlsname : &apos;&apos;;</div><div class=\"line\">\t\t$cellData[$k + 2][] = $v-&gt;pname ? $v-&gt;pname : &apos;&apos;;</div><div class=\"line\">\t\t$cellData[$k + 2][] = date(&apos;Y-m-d H:i:s&apos;, $v-&gt;addtime);</div><div class=\"line\">\t\t$cellData[$k + 2][] = date(&apos;Y-m-d H:i:s&apos;, $v-&gt;logintime);</div><div class=\"line\">\t\t$cellData[$k + 2][] = $v-&gt;day = 0;</div><div class=\"line\">\t\t$cellData[$k + 2][] = $v-&gt;count_human = $count;</div><div class=\"line\">\t\t$cellData[$k + 2][] = $v-&gt;count_sum = $get-&gt;total_sales ? $get-&gt;total_sales : 0;</div><div class=\"line\">\t\t$cellData[$k + 2][] = $out-&gt;total_sales ? $out-&gt;total_sales : 0;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\tExcel::create(&apos;召回用户黑名单&apos;, function ($excel) use ($cellData) &#123;</div><div class=\"line\">\t\t$excel-&gt;sheet(&apos;score&apos;, function ($sheet) use ($cellData) &#123;</div><div class=\"line\">\t\t\t$sheet-&gt;rows($cellData);</div><div class=\"line\">\t\t&#125;);</div><div class=\"line\">\t&#125;)-&gt;export(&apos;xls&apos;);</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>我们在浏览器中访问 <a href=\"http://localhost:8000/excel/export\" target=\"_blank\" rel=\"external\">http://localhost:8000/excel/export</a> ，会导出一个名为 召回用户黑名单.xls 的Excel文件：</p>\n<p><img src=\"http://oe2qf8as1.bkt.clouddn.com/854F.tm.png\" alt=\"111\"></p>\n<p>如果你要导出csv或者xlsx文件，只需将 export 方法中的参数改成csv或xlsx即可。<br>如果还要将该Excel文件保存到服务器上，可以使用 store 方法：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">Excel::create(&apos;召回用户黑名单&apos;,function($excel) use ($cellData)&#123;</div><div class=\"line\">     $excel-&gt;sheet(&apos;score&apos;, function($sheet) use ($cellData)&#123;</div><div class=\"line\">         $sheet-&gt;rows($cellData);</div><div class=\"line\">     &#125;);</div><div class=\"line\">&#125;)-&gt;store(&apos;xls&apos;)-&gt;export(&apos;xls&apos;);</div></pre></td></tr></table></figure>\n<p>文件默认保存到 storage/exports 目录下，如果出现文件名中文乱码，将上述代码文件名做如下修改即可：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">iconv(&apos;UTF-8&apos;, &apos;GBK&apos;, &apos;召回用户黑名单&apos;)</div></pre></td></tr></table></figure>\n<h1 id=\"4、导入Excel文件\"><a href=\"#4、导入Excel文件\" class=\"headerlink\" title=\"4、导入Excel文件\"></a>4、导入Excel文件</h1><p>我们将刚才保存到服务器上的Excel文件导入进来，导入很简单，使用 Excel 门面上的 load 方法即可：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">Excel文件导入功能  </div><div class=\"line\">public function import()&#123;</div><div class=\"line\">    $filePath = &apos;storage/exports/&apos;.iconv(&apos;UTF-8&apos;, &apos;GBK&apos;, &apos;召回用户黑名单&apos;).&apos;.xls&apos;;</div><div class=\"line\">    Excel::load($filePath, function($reader) &#123;</div><div class=\"line\">        $data = $reader-&gt;all();</div><div class=\"line\">        dd($data);</div><div class=\"line\">    &#125;);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>load 方法基于项目根路径作为根目录，同样我们对中文进行了转码，否则会提示文件不存在。<br>在浏览器中访问 <a href=\"http://localhost:8000/excel/import\" target=\"_blank\" rel=\"external\">http://localhost:8000/excel/import</a> ，页面显示如下：</p>\n<p>当然，Laravel Excel还有很多其它功能，比如将Blade视图导出为Excel或CSV，以及对导入/导出更加细粒度的控制，具体可参考其官方文档： <a href=\"http://www.maatwebsite.nl/laravel-excel/docs\" target=\"_blank\" rel=\"external\">http://www.maatwebsite.nl/laravel-excel/docs</a></p>"},{"title":"laravel最优雅的模糊查询","date":"2016-09-18T00:27:48.000Z","_content":"![分页](https://gss0.baidu.com/-4o3dSag_xI4khGko9WTAnF6hhy/bainuo/crop%3D0%2C2%2C470%2C285%3Bw%3D470%3Bq%3D80/sign=e5ebcb6ea98b87d6440df15f3a38040a/9d82d158ccbf6c81d6fd55b7b43eb13532fa40a2.jpg)\n<!--more-->\n### Create a new post\n``` bash\npublic function index(Request $request)\n{\n$page     = 0;\n$limit    = 10;\n$where[]  = ['id','!=',0];\n  \nif ($request->page) {\n    $page = ($request->page-1)*10;\n}\n  \nif ($request->disease) {\n    $where[] = ['disease_lists','like',\"%,$request->disease%\"];\n}\n  \nif ($request->hosname) {\n    $where[] = ['name','like',\"%$request->hosname%\"];\n    $limit   = 15;\n}\n  \n$hos_topten = DB::connection('ezhuanzhen')->table('cb_hos')\n      ->where($where)\n      ->orderBy('browse_num','desc')\n      ->skip($page)\n      ->take($limit)\n      ->select('id','name','level','address','browse_num as hot','tel_list','disease_list')\n      ->get();\n}\n```\n\n\n进入hexo博客项目的themes/next目录\n用文本编辑器打开_config.yml文件\n搜索\"auto_excerpt\",\n把enable改为对应的false改为true，然后hexo d -g，再进主页，问题就解决了！\n\n\n","source":"_posts/laravelMoHuSelect.md","raw":"---\ntitle: laravel最优雅的模糊查询\ndate: 2016-09-18 08:27:48\ntags: \n\t- laravel \n\t- select\n\t- DB \ncategories: Laravel奇淫技巧\n---\n![分页](https://gss0.baidu.com/-4o3dSag_xI4khGko9WTAnF6hhy/bainuo/crop%3D0%2C2%2C470%2C285%3Bw%3D470%3Bq%3D80/sign=e5ebcb6ea98b87d6440df15f3a38040a/9d82d158ccbf6c81d6fd55b7b43eb13532fa40a2.jpg)\n<!--more-->\n### Create a new post\n``` bash\npublic function index(Request $request)\n{\n$page     = 0;\n$limit    = 10;\n$where[]  = ['id','!=',0];\n  \nif ($request->page) {\n    $page = ($request->page-1)*10;\n}\n  \nif ($request->disease) {\n    $where[] = ['disease_lists','like',\"%,$request->disease%\"];\n}\n  \nif ($request->hosname) {\n    $where[] = ['name','like',\"%$request->hosname%\"];\n    $limit   = 15;\n}\n  \n$hos_topten = DB::connection('ezhuanzhen')->table('cb_hos')\n      ->where($where)\n      ->orderBy('browse_num','desc')\n      ->skip($page)\n      ->take($limit)\n      ->select('id','name','level','address','browse_num as hot','tel_list','disease_list')\n      ->get();\n}\n```\n\n\n进入hexo博客项目的themes/next目录\n用文本编辑器打开_config.yml文件\n搜索\"auto_excerpt\",\n把enable改为对应的false改为true，然后hexo d -g，再进主页，问题就解决了！\n\n\n","slug":"laravelMoHuSelect","published":1,"updated":"2017-09-24T21:05:16.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj7zrohqk000ar1s6amus2kxj","content":"<p><img src=\"https://gss0.baidu.com/-4o3dSag_xI4khGko9WTAnF6hhy/bainuo/crop%3D0%2C2%2C470%2C285%3Bw%3D470%3Bq%3D80/sign=e5ebcb6ea98b87d6440df15f3a38040a/9d82d158ccbf6c81d6fd55b7b43eb13532fa40a2.jpg\" alt=\"分页\"><br><a id=\"more\"></a></p>\n<h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div></pre></td><td class=\"code\"><pre><div class=\"line\">public <span class=\"keyword\">function</span> index(Request <span class=\"variable\">$request</span>)</div><div class=\"line\">&#123;</div><div class=\"line\"><span class=\"variable\">$page</span>     = 0;</div><div class=\"line\"><span class=\"variable\">$limit</span>    = 10;</div><div class=\"line\"><span class=\"variable\">$where</span>[]  = [<span class=\"string\">'id'</span>,<span class=\"string\">'!='</span>,0];</div><div class=\"line\">  </div><div class=\"line\"><span class=\"keyword\">if</span> (<span class=\"variable\">$request</span>-&gt;page) &#123;</div><div class=\"line\">    <span class=\"variable\">$page</span> = (<span class=\"variable\">$request</span>-&gt;page-1)*10;</div><div class=\"line\">&#125;</div><div class=\"line\">  </div><div class=\"line\"><span class=\"keyword\">if</span> (<span class=\"variable\">$request</span>-&gt;disease) &#123;</div><div class=\"line\">    <span class=\"variable\">$where</span>[] = [<span class=\"string\">'disease_lists'</span>,<span class=\"string\">'like'</span>,<span class=\"string\">\"%,<span class=\"variable\">$request</span>-&gt;disease%\"</span>];</div><div class=\"line\">&#125;</div><div class=\"line\">  </div><div class=\"line\"><span class=\"keyword\">if</span> (<span class=\"variable\">$request</span>-&gt;hosname) &#123;</div><div class=\"line\">    <span class=\"variable\">$where</span>[] = [<span class=\"string\">'name'</span>,<span class=\"string\">'like'</span>,<span class=\"string\">\"%<span class=\"variable\">$request</span>-&gt;hosname%\"</span>];</div><div class=\"line\">    <span class=\"variable\">$limit</span>   = 15;</div><div class=\"line\">&#125;</div><div class=\"line\">  </div><div class=\"line\"><span class=\"variable\">$hos_topten</span> = DB::connection(<span class=\"string\">'ezhuanzhen'</span>)-&gt;table(<span class=\"string\">'cb_hos'</span>)</div><div class=\"line\">      -&gt;<span class=\"built_in\">where</span>(<span class=\"variable\">$where</span>)</div><div class=\"line\">      -&gt;orderBy(<span class=\"string\">'browse_num'</span>,<span class=\"string\">'desc'</span>)</div><div class=\"line\">      -&gt;skip(<span class=\"variable\">$page</span>)</div><div class=\"line\">      -&gt;take(<span class=\"variable\">$limit</span>)</div><div class=\"line\">      -&gt;select(<span class=\"string\">'id'</span>,<span class=\"string\">'name'</span>,<span class=\"string\">'level'</span>,<span class=\"string\">'address'</span>,<span class=\"string\">'browse_num as hot'</span>,<span class=\"string\">'tel_list'</span>,<span class=\"string\">'disease_list'</span>)</div><div class=\"line\">      -&gt;get();</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>进入hexo博客项目的themes/next目录<br>用文本编辑器打开_config.yml文件<br>搜索”auto_excerpt”,<br>把enable改为对应的false改为true，然后hexo d -g，再进主页，问题就解决了！</p>\n","site":{"data":{}},"excerpt":"<p><img src=\"https://gss0.baidu.com/-4o3dSag_xI4khGko9WTAnF6hhy/bainuo/crop%3D0%2C2%2C470%2C285%3Bw%3D470%3Bq%3D80/sign=e5ebcb6ea98b87d6440df15f3a38040a/9d82d158ccbf6c81d6fd55b7b43eb13532fa40a2.jpg\" alt=\"分页\"><br>","more":"</p>\n<h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div></pre></td><td class=\"code\"><pre><div class=\"line\">public <span class=\"keyword\">function</span> index(Request <span class=\"variable\">$request</span>)</div><div class=\"line\">&#123;</div><div class=\"line\"><span class=\"variable\">$page</span>     = 0;</div><div class=\"line\"><span class=\"variable\">$limit</span>    = 10;</div><div class=\"line\"><span class=\"variable\">$where</span>[]  = [<span class=\"string\">'id'</span>,<span class=\"string\">'!='</span>,0];</div><div class=\"line\">  </div><div class=\"line\"><span class=\"keyword\">if</span> (<span class=\"variable\">$request</span>-&gt;page) &#123;</div><div class=\"line\">    <span class=\"variable\">$page</span> = (<span class=\"variable\">$request</span>-&gt;page-1)*10;</div><div class=\"line\">&#125;</div><div class=\"line\">  </div><div class=\"line\"><span class=\"keyword\">if</span> (<span class=\"variable\">$request</span>-&gt;disease) &#123;</div><div class=\"line\">    <span class=\"variable\">$where</span>[] = [<span class=\"string\">'disease_lists'</span>,<span class=\"string\">'like'</span>,<span class=\"string\">\"%,<span class=\"variable\">$request</span>-&gt;disease%\"</span>];</div><div class=\"line\">&#125;</div><div class=\"line\">  </div><div class=\"line\"><span class=\"keyword\">if</span> (<span class=\"variable\">$request</span>-&gt;hosname) &#123;</div><div class=\"line\">    <span class=\"variable\">$where</span>[] = [<span class=\"string\">'name'</span>,<span class=\"string\">'like'</span>,<span class=\"string\">\"%<span class=\"variable\">$request</span>-&gt;hosname%\"</span>];</div><div class=\"line\">    <span class=\"variable\">$limit</span>   = 15;</div><div class=\"line\">&#125;</div><div class=\"line\">  </div><div class=\"line\"><span class=\"variable\">$hos_topten</span> = DB::connection(<span class=\"string\">'ezhuanzhen'</span>)-&gt;table(<span class=\"string\">'cb_hos'</span>)</div><div class=\"line\">      -&gt;<span class=\"built_in\">where</span>(<span class=\"variable\">$where</span>)</div><div class=\"line\">      -&gt;orderBy(<span class=\"string\">'browse_num'</span>,<span class=\"string\">'desc'</span>)</div><div class=\"line\">      -&gt;skip(<span class=\"variable\">$page</span>)</div><div class=\"line\">      -&gt;take(<span class=\"variable\">$limit</span>)</div><div class=\"line\">      -&gt;select(<span class=\"string\">'id'</span>,<span class=\"string\">'name'</span>,<span class=\"string\">'level'</span>,<span class=\"string\">'address'</span>,<span class=\"string\">'browse_num as hot'</span>,<span class=\"string\">'tel_list'</span>,<span class=\"string\">'disease_list'</span>)</div><div class=\"line\">      -&gt;get();</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>进入hexo博客项目的themes/next目录<br>用文本编辑器打开_config.yml文件<br>搜索”auto_excerpt”,<br>把enable改为对应的false改为true，然后hexo d -g，再进主页，问题就解决了！</p>"},{"title":"Laravel 从零开始","date":"2016-09-08T17:15:39.000Z","_content":"# Laravel 安装\n1.下载[composer 官网](https://getcomposer.org)\n2.`mv composer.pr /usr/local/bin/composr`\n3.`laravel new blog` 或 `composer create-project --prefer-dist laravel/laracel Laravel5`\n4.使用 `php artisna serve` 来启动 laravel 框架\n<!--more-->\n# Laravel 基本工作流程 \nroutes 路由文件：\n你可以想象成为专门处理http请求的，比如get、post等。\n\n以前访问页面都是某个文件夹下面某个PHP文件 访问地址如下：\n\n```\nimages/index.php\n或\nwww.xxx.com/images/index.php\n```\n\n打开 routes/web.php 你会发现里面有三行代码，\n\n```\nRoute::get('/', function () {\n    return view('welcome');\n});\n```\n\n在Laravel中 你会神奇的发现这是一条get 请求 「／」 目录 下一个匿名方法。\n你可以将匿名函数内容改为  `return 'Hello world'` 保存 ，访问 http://127.0.0.1:8000 \n\n你会发现每次访问都要写一个匿名函数，我们通常会采取 Controller控制器 来访问。\n下面我们来创建 Controller控制器 ，首先要使用 **终端** 进入你的项目根目录。\n\n```\nphp artisan make:controller NameController    # 创建一个不带方法的路由\n\nphp artisan make:controller NameController --resource #创建一个带方法的路由\n```\n⚠️ 控制器的默认目录放在 app/Http/Controller 下\n\n打开刚刚创建的 控制器 在里面如下方法\n\n```\npublic function index()\n{\n    return view('welcome');\n}\n```\n\n我们修改 `routes/web.php`\n\n```\n Route::get('/','NameController@index');\n \n //$router->get( '/' , 'NameController@index' );\n \n //Route::resource('／', 'PhotoController'); #我们在后面会讲解到，不要在这里纠结这是什么意思\n```\n\n⚠️ 上面2行代码是等效的。\n\n打开浏览器访问 http://127.0.0.1:80 你会惊奇的发现页面没有变化\n\n# Laravel向视图传递变量\n这里 「name」是发送给视图的变量，「$name」是变量值\n\n### 单个变量\n```\nreturn vier('about.about')->with('name',$name); \n```\n\n### 多个变量\n```\n#方法1:\nreturn vier('about.about')->with([\n    'first'=> 'one',\n    'last'=> 'two'\n]);     \n\n\n#方法2:\n$array=[];\n$array['farst']= 'one';\n$array['lost']= 'two';\nreturn vier('about.about',$array);\n```\n\n### 多个或单个变量\n\n```\n$first= 'one';\n$lost= 'two';\nreturn view('about.about',compact('first','lost')); # 个人倾向\n```\n\n在模板中使用变量 \n>传统写法：\n\n```\n<?php $name ?>\n```\n\n>laravel写法\n\n```\n{{ $name }}   #会转义变量\n\n{!! $name !!}  #不会转义变量 注意xss攻击\n```\n\n# Laravel Blade 模板简介\n比如我们需要新建一个页面，考虑页面CSS一至性，每次都要 cp ？ ❌ \n其实网们可以这样做 在 views/目录下新建 app.blade.php \n\n```\n<!DOCTYPE HTML>\n<html>\n<head>\n<title></title>\n<link rel=\"stylesheet\" type=\"text/css\" href=\"style/css/style.css\"/>\n<link rel=\"stylesheet\" type=\"text/css\" href=\"style/css/external.min.css\"/>\n</head>\n<body>\n\n@yield('content') #重点在这里  设置一块content缓冲区\n\n</body>\n</html>\n```\n其他html页面可以删除body以上代码\n```\n@extends('app')  #继承刚才新建的app.blade.php\n\n@section('content')  #创建一块content缓冲区\n    #body正文\n@stop #一个section对应1个stop\n```\n⚠️ 如果一个页面西药特定文件怎么办 没错就是在创建一块缓冲区\n\n这个你学会了，在来的新技能吧！\n## 在模版中使用条件 循环\n### 条件判断\n\n```\n@if(true)\n    <h1> true </h1>\n@else\n    flast\n@endif\n```\n\n### 循环\n\n```\n@foreach($array as $key) \n    {{ $key }}\n@endforeach\n```\n\n# Laravel环境配置.env\nenv('.env名称','默认值')\n# 美化phpstorm\nhttps://www.laravist.com/series/phpstorm-the-best-php-ide-you-ever-met/episodes/2\n\n# mac终端美化：\n## 安装「oh my zsh」可以自动安装也可以手动安装\n**推荐手动安装**\n### 手动安装 \n[Github地址](https://github.com/zsh-users/zsh-autosuggestions)\n```\ngit clone git://github.com/robbyrussell/oh-my-zsh.git ~/.oh-my-zsh\ncp ~/.oh-my-zsh/templates/zshrc.zsh-template ~/.zshrc\n```\n\n### 自动安装\n\n```\nwget https://github.com/robbyrussell/oh-my-zsh/raw/master/tools/install.sh -O - | sh\n```\n\n### 替换bash为zsh\n\n```\nchsh -s /bin/zsh\n```\n\n## 自动提示插件安装\n### 下载插件\n\n```\ngit clone git://github.com/zsh-users/zsh-autosuggestions ~/.zsh/zsh-autosuggestions\n\n#将下命令添加到你的 .zshrc:\nsource ~/.zsh/zsh-autosuggestions/zsh-autosuggestions.zsh\n```\n\n## git问题大全\n### 执行git push错误时的解决方法\n默认情况下在执行 `git push` 时，系统会提示error而无法成功推送。这是由于git默认拒绝了push操作，需要进行设置，修改远程仓库目录中的 .git/config 文件.\n\n**解决方法：**\n在后面添加如下代码：\n\n```\n[receive]\n       denyCurrentBranch = ignore\n```       \n\n### 执行git push后，服务器端无法查看到推送内容的原因及解决方法\n在初始化远程仓库时最好使用：`git --bare init`，而不要使用：`git init`\n如果使用了`git init` 初始化，则远程仓库的目录下也包含 work tree。当本地仓库向远程仓库push时，如果远程仓库正在push的分支上（如果当时不在push的分支，就没有问题）, 那么push后的结果不会反应在work tree上，也即在远程仓库的目录下对应的文件还是之前的内容。\n\n**解决方法：**\n远程端必须运行命令：`git reset --hard` 才能看到 push 后的内容。\n### 解决因git源代码库路径发生变化，导致本地代码库无法同步的问题\n如果执行git clone之后，源代码库的路径发生变化，导致无法与源代码保持一致，可以修改本地代码库的.git/config文件以更新源代码路径，例如：\nvi .git/config\n内容如下：\n\n```\n[core]\n        repositoryformatversion = 0\n        filemode = true\n        bare = false\n        logallrefupdates = true\n[remote \"origin\"]\n        fetch = +refs/heads/*:refs/remotes/origin/*\n        url = /home/android/gitTestSource\n[branch \"master\"]\n        remote = origin\n        merge = refs/heads/master\n```\n**解决方法：**\n如果现在/home/android/gitTestSource目录的文件被移动到了/home/android/project/gitTestSource目录，则可将其中的url = /home/android/gitTestSource改为：url = /home/android/project/gitTestSource。\n\n### git  Unable to create temporary file\n1）出现 `Unable to create temporary file: Permission denied`\n在Windows上使用TortoiseGit执行Push时出现以下错误\n\n```\ngit.exe push --force --progress  \"origin\" master:master\nCounting objects: 189, done.\nCompressing objects: 100% (187/187)\nWriting objects:   7% (14/189)\nfatal: Unable to create temporary file: Permission denied\nfatal: sha1 file '<stdout>' write error: Invalid argument\nerror: failed to push some refs to 'git@110.73.4.46:channelv.git'\n```\n \n`git did not exit cleanly (exit code 1)`\n原来是服务器上是用root账户建立的库目录，导致git账户无权写入，方法就是修改文件夹的所属用户和所属用户组\n\n```\nchown -R git *\nchgrp -R git *\n```\n\n\n2）出现 `failed to push some refs to 'git@110.731.41.46:channelv.git'`\n\n在Windows上使用TortoiseGit执行Push时出现以下错误\n\n```\ngit.exe push --progress  \"origin\" master:master\nCounting objects: 189, done.\nCompressing objects: 100% (158/158)\nWriting objects: 100% (189/189), 1016.00 KiB | 997 KiB/s\nWriting objects: 100% (189/189), 1.12 MiB | 997 KiB/s, done.\nremote: error: 'receive.denyCurrentBranch' configuration variable to 'refuse'.\nTo git@101.713.4.46:channelv.git\n! [remote rejected] master -> master (branch is currently checked out)\nerror: failed to push some refs to 'git@10.73.4.46:channelv.git'\ngit did not exit cleanly (exit code 1)\n```\n\n在服务器对应的库目录下执行以下命令增加配置即可\n\n`git config --bool core.bare true`\n\n","source":"_posts/laravelStart.md","raw":"---\ntitle: Laravel 从零开始\ndate: 2016-09-09 01:15:39\ntags:\n    - Laravel\n    - git\n    - phpstome\n    - oh my zsh\ncategories: Laravel奇淫技巧\n---\n# Laravel 安装\n1.下载[composer 官网](https://getcomposer.org)\n2.`mv composer.pr /usr/local/bin/composr`\n3.`laravel new blog` 或 `composer create-project --prefer-dist laravel/laracel Laravel5`\n4.使用 `php artisna serve` 来启动 laravel 框架\n<!--more-->\n# Laravel 基本工作流程 \nroutes 路由文件：\n你可以想象成为专门处理http请求的，比如get、post等。\n\n以前访问页面都是某个文件夹下面某个PHP文件 访问地址如下：\n\n```\nimages/index.php\n或\nwww.xxx.com/images/index.php\n```\n\n打开 routes/web.php 你会发现里面有三行代码，\n\n```\nRoute::get('/', function () {\n    return view('welcome');\n});\n```\n\n在Laravel中 你会神奇的发现这是一条get 请求 「／」 目录 下一个匿名方法。\n你可以将匿名函数内容改为  `return 'Hello world'` 保存 ，访问 http://127.0.0.1:8000 \n\n你会发现每次访问都要写一个匿名函数，我们通常会采取 Controller控制器 来访问。\n下面我们来创建 Controller控制器 ，首先要使用 **终端** 进入你的项目根目录。\n\n```\nphp artisan make:controller NameController    # 创建一个不带方法的路由\n\nphp artisan make:controller NameController --resource #创建一个带方法的路由\n```\n⚠️ 控制器的默认目录放在 app/Http/Controller 下\n\n打开刚刚创建的 控制器 在里面如下方法\n\n```\npublic function index()\n{\n    return view('welcome');\n}\n```\n\n我们修改 `routes/web.php`\n\n```\n Route::get('/','NameController@index');\n \n //$router->get( '/' , 'NameController@index' );\n \n //Route::resource('／', 'PhotoController'); #我们在后面会讲解到，不要在这里纠结这是什么意思\n```\n\n⚠️ 上面2行代码是等效的。\n\n打开浏览器访问 http://127.0.0.1:80 你会惊奇的发现页面没有变化\n\n# Laravel向视图传递变量\n这里 「name」是发送给视图的变量，「$name」是变量值\n\n### 单个变量\n```\nreturn vier('about.about')->with('name',$name); \n```\n\n### 多个变量\n```\n#方法1:\nreturn vier('about.about')->with([\n    'first'=> 'one',\n    'last'=> 'two'\n]);     \n\n\n#方法2:\n$array=[];\n$array['farst']= 'one';\n$array['lost']= 'two';\nreturn vier('about.about',$array);\n```\n\n### 多个或单个变量\n\n```\n$first= 'one';\n$lost= 'two';\nreturn view('about.about',compact('first','lost')); # 个人倾向\n```\n\n在模板中使用变量 \n>传统写法：\n\n```\n<?php $name ?>\n```\n\n>laravel写法\n\n```\n{{ $name }}   #会转义变量\n\n{!! $name !!}  #不会转义变量 注意xss攻击\n```\n\n# Laravel Blade 模板简介\n比如我们需要新建一个页面，考虑页面CSS一至性，每次都要 cp ？ ❌ \n其实网们可以这样做 在 views/目录下新建 app.blade.php \n\n```\n<!DOCTYPE HTML>\n<html>\n<head>\n<title></title>\n<link rel=\"stylesheet\" type=\"text/css\" href=\"style/css/style.css\"/>\n<link rel=\"stylesheet\" type=\"text/css\" href=\"style/css/external.min.css\"/>\n</head>\n<body>\n\n@yield('content') #重点在这里  设置一块content缓冲区\n\n</body>\n</html>\n```\n其他html页面可以删除body以上代码\n```\n@extends('app')  #继承刚才新建的app.blade.php\n\n@section('content')  #创建一块content缓冲区\n    #body正文\n@stop #一个section对应1个stop\n```\n⚠️ 如果一个页面西药特定文件怎么办 没错就是在创建一块缓冲区\n\n这个你学会了，在来的新技能吧！\n## 在模版中使用条件 循环\n### 条件判断\n\n```\n@if(true)\n    <h1> true </h1>\n@else\n    flast\n@endif\n```\n\n### 循环\n\n```\n@foreach($array as $key) \n    {{ $key }}\n@endforeach\n```\n\n# Laravel环境配置.env\nenv('.env名称','默认值')\n# 美化phpstorm\nhttps://www.laravist.com/series/phpstorm-the-best-php-ide-you-ever-met/episodes/2\n\n# mac终端美化：\n## 安装「oh my zsh」可以自动安装也可以手动安装\n**推荐手动安装**\n### 手动安装 \n[Github地址](https://github.com/zsh-users/zsh-autosuggestions)\n```\ngit clone git://github.com/robbyrussell/oh-my-zsh.git ~/.oh-my-zsh\ncp ~/.oh-my-zsh/templates/zshrc.zsh-template ~/.zshrc\n```\n\n### 自动安装\n\n```\nwget https://github.com/robbyrussell/oh-my-zsh/raw/master/tools/install.sh -O - | sh\n```\n\n### 替换bash为zsh\n\n```\nchsh -s /bin/zsh\n```\n\n## 自动提示插件安装\n### 下载插件\n\n```\ngit clone git://github.com/zsh-users/zsh-autosuggestions ~/.zsh/zsh-autosuggestions\n\n#将下命令添加到你的 .zshrc:\nsource ~/.zsh/zsh-autosuggestions/zsh-autosuggestions.zsh\n```\n\n## git问题大全\n### 执行git push错误时的解决方法\n默认情况下在执行 `git push` 时，系统会提示error而无法成功推送。这是由于git默认拒绝了push操作，需要进行设置，修改远程仓库目录中的 .git/config 文件.\n\n**解决方法：**\n在后面添加如下代码：\n\n```\n[receive]\n       denyCurrentBranch = ignore\n```       \n\n### 执行git push后，服务器端无法查看到推送内容的原因及解决方法\n在初始化远程仓库时最好使用：`git --bare init`，而不要使用：`git init`\n如果使用了`git init` 初始化，则远程仓库的目录下也包含 work tree。当本地仓库向远程仓库push时，如果远程仓库正在push的分支上（如果当时不在push的分支，就没有问题）, 那么push后的结果不会反应在work tree上，也即在远程仓库的目录下对应的文件还是之前的内容。\n\n**解决方法：**\n远程端必须运行命令：`git reset --hard` 才能看到 push 后的内容。\n### 解决因git源代码库路径发生变化，导致本地代码库无法同步的问题\n如果执行git clone之后，源代码库的路径发生变化，导致无法与源代码保持一致，可以修改本地代码库的.git/config文件以更新源代码路径，例如：\nvi .git/config\n内容如下：\n\n```\n[core]\n        repositoryformatversion = 0\n        filemode = true\n        bare = false\n        logallrefupdates = true\n[remote \"origin\"]\n        fetch = +refs/heads/*:refs/remotes/origin/*\n        url = /home/android/gitTestSource\n[branch \"master\"]\n        remote = origin\n        merge = refs/heads/master\n```\n**解决方法：**\n如果现在/home/android/gitTestSource目录的文件被移动到了/home/android/project/gitTestSource目录，则可将其中的url = /home/android/gitTestSource改为：url = /home/android/project/gitTestSource。\n\n### git  Unable to create temporary file\n1）出现 `Unable to create temporary file: Permission denied`\n在Windows上使用TortoiseGit执行Push时出现以下错误\n\n```\ngit.exe push --force --progress  \"origin\" master:master\nCounting objects: 189, done.\nCompressing objects: 100% (187/187)\nWriting objects:   7% (14/189)\nfatal: Unable to create temporary file: Permission denied\nfatal: sha1 file '<stdout>' write error: Invalid argument\nerror: failed to push some refs to 'git@110.73.4.46:channelv.git'\n```\n \n`git did not exit cleanly (exit code 1)`\n原来是服务器上是用root账户建立的库目录，导致git账户无权写入，方法就是修改文件夹的所属用户和所属用户组\n\n```\nchown -R git *\nchgrp -R git *\n```\n\n\n2）出现 `failed to push some refs to 'git@110.731.41.46:channelv.git'`\n\n在Windows上使用TortoiseGit执行Push时出现以下错误\n\n```\ngit.exe push --progress  \"origin\" master:master\nCounting objects: 189, done.\nCompressing objects: 100% (158/158)\nWriting objects: 100% (189/189), 1016.00 KiB | 997 KiB/s\nWriting objects: 100% (189/189), 1.12 MiB | 997 KiB/s, done.\nremote: error: 'receive.denyCurrentBranch' configuration variable to 'refuse'.\nTo git@101.713.4.46:channelv.git\n! [remote rejected] master -> master (branch is currently checked out)\nerror: failed to push some refs to 'git@10.73.4.46:channelv.git'\ngit did not exit cleanly (exit code 1)\n```\n\n在服务器对应的库目录下执行以下命令增加配置即可\n\n`git config --bool core.bare true`\n\n","slug":"laravelStart","published":1,"updated":"2017-09-24T21:04:57.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj7zrohqm000dr1s6295n7ylb","content":"<h1 id=\"Laravel-安装\"><a href=\"#Laravel-安装\" class=\"headerlink\" title=\"Laravel 安装\"></a>Laravel 安装</h1><p>1.下载<a href=\"https://getcomposer.org\" target=\"_blank\" rel=\"external\">composer 官网</a><br>2.<code>mv composer.pr /usr/local/bin/composr</code><br>3.<code>laravel new blog</code> 或 <code>composer create-project --prefer-dist laravel/laracel Laravel5</code><br>4.使用 <code>php artisna serve</code> 来启动 laravel 框架<br><a id=\"more\"></a></p>\n<h1 id=\"Laravel-基本工作流程\"><a href=\"#Laravel-基本工作流程\" class=\"headerlink\" title=\"Laravel 基本工作流程\"></a>Laravel 基本工作流程</h1><p>routes 路由文件：<br>你可以想象成为专门处理http请求的，比如get、post等。</p>\n<p>以前访问页面都是某个文件夹下面某个PHP文件 访问地址如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">images/index.php</div><div class=\"line\">或</div><div class=\"line\">www.xxx.com/images/index.php</div></pre></td></tr></table></figure>\n<p>打开 routes/web.php 你会发现里面有三行代码，</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">Route::get(&apos;/&apos;, function () &#123;</div><div class=\"line\">    return view(&apos;welcome&apos;);</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<p>在Laravel中 你会神奇的发现这是一条get 请求 「／」 目录 下一个匿名方法。<br>你可以将匿名函数内容改为  <code>return &#39;Hello world&#39;</code> 保存 ，访问 <a href=\"http://127.0.0.1:8000\" target=\"_blank\" rel=\"external\">http://127.0.0.1:8000</a> </p>\n<p>你会发现每次访问都要写一个匿名函数，我们通常会采取 Controller控制器 来访问。<br>下面我们来创建 Controller控制器 ，首先要使用 <strong>终端</strong> 进入你的项目根目录。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">php artisan make:controller NameController    # 创建一个不带方法的路由</div><div class=\"line\"></div><div class=\"line\">php artisan make:controller NameController --resource #创建一个带方法的路由</div></pre></td></tr></table></figure>\n<p>⚠️ 控制器的默认目录放在 app/Http/Controller 下</p>\n<p>打开刚刚创建的 控制器 在里面如下方法</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">public function index()</div><div class=\"line\">&#123;</div><div class=\"line\">    return view(&apos;welcome&apos;);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>我们修改 <code>routes/web.php</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">Route::get(&apos;/&apos;,&apos;NameController@index&apos;);</div><div class=\"line\"></div><div class=\"line\">//$router-&gt;get( &apos;/&apos; , &apos;NameController@index&apos; );</div><div class=\"line\"></div><div class=\"line\">//Route::resource(&apos;／&apos;, &apos;PhotoController&apos;); #我们在后面会讲解到，不要在这里纠结这是什么意思</div></pre></td></tr></table></figure>\n<p>⚠️ 上面2行代码是等效的。</p>\n<p>打开浏览器访问 <a href=\"http://127.0.0.1:80\" target=\"_blank\" rel=\"external\">http://127.0.0.1:80</a> 你会惊奇的发现页面没有变化</p>\n<h1 id=\"Laravel向视图传递变量\"><a href=\"#Laravel向视图传递变量\" class=\"headerlink\" title=\"Laravel向视图传递变量\"></a>Laravel向视图传递变量</h1><p>这里 「name」是发送给视图的变量，「$name」是变量值</p>\n<h3 id=\"单个变量\"><a href=\"#单个变量\" class=\"headerlink\" title=\"单个变量\"></a>单个变量</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">return vier(&apos;about.about&apos;)-&gt;with(&apos;name&apos;,$name);</div></pre></td></tr></table></figure>\n<h3 id=\"多个变量\"><a href=\"#多个变量\" class=\"headerlink\" title=\"多个变量\"></a>多个变量</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">#方法1:</div><div class=\"line\">return vier(&apos;about.about&apos;)-&gt;with([</div><div class=\"line\">    &apos;first&apos;=&gt; &apos;one&apos;,</div><div class=\"line\">    &apos;last&apos;=&gt; &apos;two&apos;</div><div class=\"line\">]);     </div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">#方法2:</div><div class=\"line\">$array=[];</div><div class=\"line\">$array[&apos;farst&apos;]= &apos;one&apos;;</div><div class=\"line\">$array[&apos;lost&apos;]= &apos;two&apos;;</div><div class=\"line\">return vier(&apos;about.about&apos;,$array);</div></pre></td></tr></table></figure>\n<h3 id=\"多个或单个变量\"><a href=\"#多个或单个变量\" class=\"headerlink\" title=\"多个或单个变量\"></a>多个或单个变量</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">$first= &apos;one&apos;;</div><div class=\"line\">$lost= &apos;two&apos;;</div><div class=\"line\">return view(&apos;about.about&apos;,compact(&apos;first&apos;,&apos;lost&apos;)); # 个人倾向</div></pre></td></tr></table></figure>\n<p>在模板中使用变量 </p>\n<blockquote>\n<p>传统写法：</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?php $name ?&gt;</div></pre></td></tr></table></figure>\n<blockquote>\n<p>laravel写法</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;&#123; $name &#125;&#125;   #会转义变量</div><div class=\"line\"></div><div class=\"line\">&#123;!! $name !!&#125;  #不会转义变量 注意xss攻击</div></pre></td></tr></table></figure>\n<h1 id=\"Laravel-Blade-模板简介\"><a href=\"#Laravel-Blade-模板简介\" class=\"headerlink\" title=\"Laravel Blade 模板简介\"></a>Laravel Blade 模板简介</h1><p>比如我们需要新建一个页面，考虑页面CSS一至性，每次都要 cp ？ ❌<br>其实网们可以这样做 在 views/目录下新建 app.blade.php </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;!DOCTYPE HTML&gt;</div><div class=\"line\">&lt;html&gt;</div><div class=\"line\">&lt;head&gt;</div><div class=\"line\">&lt;title&gt;&lt;/title&gt;</div><div class=\"line\">&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;style/css/style.css&quot;/&gt;</div><div class=\"line\">&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;style/css/external.min.css&quot;/&gt;</div><div class=\"line\">&lt;/head&gt;</div><div class=\"line\">&lt;body&gt;</div><div class=\"line\"></div><div class=\"line\">@yield(&apos;content&apos;) #重点在这里  设置一块content缓冲区</div><div class=\"line\"></div><div class=\"line\">&lt;/body&gt;</div><div class=\"line\">&lt;/html&gt;</div></pre></td></tr></table></figure>\n<p>其他html页面可以删除body以上代码<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">@extends(&apos;app&apos;)  #继承刚才新建的app.blade.php</div><div class=\"line\"></div><div class=\"line\">@section(&apos;content&apos;)  #创建一块content缓冲区</div><div class=\"line\">    #body正文</div><div class=\"line\">@stop #一个section对应1个stop</div></pre></td></tr></table></figure></p>\n<p>⚠️ 如果一个页面西药特定文件怎么办 没错就是在创建一块缓冲区</p>\n<p>这个你学会了，在来的新技能吧！</p>\n<h2 id=\"在模版中使用条件-循环\"><a href=\"#在模版中使用条件-循环\" class=\"headerlink\" title=\"在模版中使用条件 循环\"></a>在模版中使用条件 循环</h2><h3 id=\"条件判断\"><a href=\"#条件判断\" class=\"headerlink\" title=\"条件判断\"></a>条件判断</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">@if(true)</div><div class=\"line\">    &lt;h1&gt; true &lt;/h1&gt;</div><div class=\"line\">@else</div><div class=\"line\">    flast</div><div class=\"line\">@endif</div></pre></td></tr></table></figure>\n<h3 id=\"循环\"><a href=\"#循环\" class=\"headerlink\" title=\"循环\"></a>循环</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">@foreach($array as $key) </div><div class=\"line\">    &#123;&#123; $key &#125;&#125;</div><div class=\"line\">@endforeach</div></pre></td></tr></table></figure>\n<h1 id=\"Laravel环境配置-env\"><a href=\"#Laravel环境配置-env\" class=\"headerlink\" title=\"Laravel环境配置.env\"></a>Laravel环境配置.env</h1><p>env(‘.env名称’,’默认值’)</p>\n<h1 id=\"美化phpstorm\"><a href=\"#美化phpstorm\" class=\"headerlink\" title=\"美化phpstorm\"></a>美化phpstorm</h1><p><a href=\"https://www.laravist.com/series/phpstorm-the-best-php-ide-you-ever-met/episodes/2\" target=\"_blank\" rel=\"external\">https://www.laravist.com/series/phpstorm-the-best-php-ide-you-ever-met/episodes/2</a></p>\n<h1 id=\"mac终端美化：\"><a href=\"#mac终端美化：\" class=\"headerlink\" title=\"mac终端美化：\"></a>mac终端美化：</h1><h2 id=\"安装「oh-my-zsh」可以自动安装也可以手动安装\"><a href=\"#安装「oh-my-zsh」可以自动安装也可以手动安装\" class=\"headerlink\" title=\"安装「oh my zsh」可以自动安装也可以手动安装\"></a>安装「oh my zsh」可以自动安装也可以手动安装</h2><p><strong>推荐手动安装</strong></p>\n<h3 id=\"手动安装\"><a href=\"#手动安装\" class=\"headerlink\" title=\"手动安装\"></a>手动安装</h3><p><a href=\"https://github.com/zsh-users/zsh-autosuggestions\" target=\"_blank\" rel=\"external\">Github地址</a><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">git clone git://github.com/robbyrussell/oh-my-zsh.git ~/.oh-my-zsh</div><div class=\"line\">cp ~/.oh-my-zsh/templates/zshrc.zsh-template ~/.zshrc</div></pre></td></tr></table></figure></p>\n<h3 id=\"自动安装\"><a href=\"#自动安装\" class=\"headerlink\" title=\"自动安装\"></a>自动安装</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">wget https://github.com/robbyrussell/oh-my-zsh/raw/master/tools/install.sh -O - | sh</div></pre></td></tr></table></figure>\n<h3 id=\"替换bash为zsh\"><a href=\"#替换bash为zsh\" class=\"headerlink\" title=\"替换bash为zsh\"></a>替换bash为zsh</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">chsh -s /bin/zsh</div></pre></td></tr></table></figure>\n<h2 id=\"自动提示插件安装\"><a href=\"#自动提示插件安装\" class=\"headerlink\" title=\"自动提示插件安装\"></a>自动提示插件安装</h2><h3 id=\"下载插件\"><a href=\"#下载插件\" class=\"headerlink\" title=\"下载插件\"></a>下载插件</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">git clone git://github.com/zsh-users/zsh-autosuggestions ~/.zsh/zsh-autosuggestions</div><div class=\"line\"></div><div class=\"line\">#将下命令添加到你的 .zshrc:</div><div class=\"line\">source ~/.zsh/zsh-autosuggestions/zsh-autosuggestions.zsh</div></pre></td></tr></table></figure>\n<h2 id=\"git问题大全\"><a href=\"#git问题大全\" class=\"headerlink\" title=\"git问题大全\"></a>git问题大全</h2><h3 id=\"执行git-push错误时的解决方法\"><a href=\"#执行git-push错误时的解决方法\" class=\"headerlink\" title=\"执行git push错误时的解决方法\"></a>执行git push错误时的解决方法</h3><p>默认情况下在执行 <code>git push</code> 时，系统会提示error而无法成功推送。这是由于git默认拒绝了push操作，需要进行设置，修改远程仓库目录中的 .git/config 文件.</p>\n<p><strong>解决方法：</strong><br>在后面添加如下代码：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\">[receive]</div><div class=\"line\">       denyCurrentBranch = ignore</div><div class=\"line\">```       </div><div class=\"line\"></div><div class=\"line\">### 执行git push后，服务器端无法查看到推送内容的原因及解决方法</div><div class=\"line\">在初始化远程仓库时最好使用：`git --bare init`，而不要使用：`git init`</div><div class=\"line\">如果使用了`git init` 初始化，则远程仓库的目录下也包含 work tree。当本地仓库向远程仓库push时，如果远程仓库正在push的分支上（如果当时不在push的分支，就没有问题）, 那么push后的结果不会反应在work tree上，也即在远程仓库的目录下对应的文件还是之前的内容。</div><div class=\"line\"></div><div class=\"line\">**解决方法：**</div><div class=\"line\">远程端必须运行命令：`git reset --hard` 才能看到 push 后的内容。</div><div class=\"line\">### 解决因git源代码库路径发生变化，导致本地代码库无法同步的问题</div><div class=\"line\">如果执行git clone之后，源代码库的路径发生变化，导致无法与源代码保持一致，可以修改本地代码库的.git/config文件以更新源代码路径，例如：</div><div class=\"line\">vi .git/config</div><div class=\"line\">内容如下：</div></pre></td></tr></table></figure>\n<p>[core]<br>        repositoryformatversion = 0<br>        filemode = true<br>        bare = false<br>        logallrefupdates = true<br>[remote “origin”]<br>        fetch = +refs/heads/<em>:refs/remotes/origin/</em><br>        url = /home/android/gitTestSource<br>[branch “master”]<br>        remote = origin<br>        merge = refs/heads/master<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">**解决方法：**</div><div class=\"line\">如果现在/home/android/gitTestSource目录的文件被移动到了/home/android/project/gitTestSource目录，则可将其中的url = /home/android/gitTestSource改为：url = /home/android/project/gitTestSource。</div><div class=\"line\"></div><div class=\"line\">### git  Unable to create temporary file</div><div class=\"line\">1）出现 `Unable to create temporary file: Permission denied`</div><div class=\"line\">在Windows上使用TortoiseGit执行Push时出现以下错误</div></pre></td></tr></table></figure></p>\n<p>git.exe push –force –progress  “origin” master:master<br>Counting objects: 189, done.<br>Compressing objects: 100% (187/187)<br>Writing objects:   7% (14/189)<br>fatal: Unable to create temporary file: Permission denied<br>fatal: sha1 file ‘<stdout>‘ write error: Invalid argument<br>error: failed to push some refs to ‘git@110.73.4.46:channelv.git’<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"> </div><div class=\"line\">`git did not exit cleanly (exit code 1)`</div><div class=\"line\">原来是服务器上是用root账户建立的库目录，导致git账户无权写入，方法就是修改文件夹的所属用户和所属用户组</div></pre></td></tr></table></figure></stdout></p>\n<p>chown -R git <em><br>chgrp -R git </em><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">2）出现 `failed to push some refs to &apos;git@110.731.41.46:channelv.git&apos;`</div><div class=\"line\"></div><div class=\"line\">在Windows上使用TortoiseGit执行Push时出现以下错误</div></pre></td></tr></table></figure></p>\n<p>git.exe push –progress  “origin” master:master<br>Counting objects: 189, done.<br>Compressing objects: 100% (158/158)<br>Writing objects: 100% (189/189), 1016.00 KiB | 997 KiB/s<br>Writing objects: 100% (189/189), 1.12 MiB | 997 KiB/s, done.<br>remote: error: ‘receive.denyCurrentBranch’ configuration variable to ‘refuse’.<br>To git@101.713.4.46:channelv.git<br>! [remote rejected] master -&gt; master (branch is currently checked out)<br>error: failed to push some refs to ‘git@10.73.4.46:channelv.git’<br>git did not exit cleanly (exit code 1)<br>```</p>\n<p>在服务器对应的库目录下执行以下命令增加配置即可</p>\n<p><code>git config --bool core.bare true</code></p>\n","site":{"data":{}},"excerpt":"<h1 id=\"Laravel-安装\"><a href=\"#Laravel-安装\" class=\"headerlink\" title=\"Laravel 安装\"></a>Laravel 安装</h1><p>1.下载<a href=\"https://getcomposer.org\" target=\"_blank\" rel=\"external\">composer 官网</a><br>2.<code>mv composer.pr /usr/local/bin/composr</code><br>3.<code>laravel new blog</code> 或 <code>composer create-project --prefer-dist laravel/laracel Laravel5</code><br>4.使用 <code>php artisna serve</code> 来启动 laravel 框架<br>","more":"</p>\n<h1 id=\"Laravel-基本工作流程\"><a href=\"#Laravel-基本工作流程\" class=\"headerlink\" title=\"Laravel 基本工作流程\"></a>Laravel 基本工作流程</h1><p>routes 路由文件：<br>你可以想象成为专门处理http请求的，比如get、post等。</p>\n<p>以前访问页面都是某个文件夹下面某个PHP文件 访问地址如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">images/index.php</div><div class=\"line\">或</div><div class=\"line\">www.xxx.com/images/index.php</div></pre></td></tr></table></figure>\n<p>打开 routes/web.php 你会发现里面有三行代码，</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">Route::get(&apos;/&apos;, function () &#123;</div><div class=\"line\">    return view(&apos;welcome&apos;);</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<p>在Laravel中 你会神奇的发现这是一条get 请求 「／」 目录 下一个匿名方法。<br>你可以将匿名函数内容改为  <code>return &#39;Hello world&#39;</code> 保存 ，访问 <a href=\"http://127.0.0.1:8000\" target=\"_blank\" rel=\"external\">http://127.0.0.1:8000</a> </p>\n<p>你会发现每次访问都要写一个匿名函数，我们通常会采取 Controller控制器 来访问。<br>下面我们来创建 Controller控制器 ，首先要使用 <strong>终端</strong> 进入你的项目根目录。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">php artisan make:controller NameController    # 创建一个不带方法的路由</div><div class=\"line\"></div><div class=\"line\">php artisan make:controller NameController --resource #创建一个带方法的路由</div></pre></td></tr></table></figure>\n<p>⚠️ 控制器的默认目录放在 app/Http/Controller 下</p>\n<p>打开刚刚创建的 控制器 在里面如下方法</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">public function index()</div><div class=\"line\">&#123;</div><div class=\"line\">    return view(&apos;welcome&apos;);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>我们修改 <code>routes/web.php</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">Route::get(&apos;/&apos;,&apos;NameController@index&apos;);</div><div class=\"line\"></div><div class=\"line\">//$router-&gt;get( &apos;/&apos; , &apos;NameController@index&apos; );</div><div class=\"line\"></div><div class=\"line\">//Route::resource(&apos;／&apos;, &apos;PhotoController&apos;); #我们在后面会讲解到，不要在这里纠结这是什么意思</div></pre></td></tr></table></figure>\n<p>⚠️ 上面2行代码是等效的。</p>\n<p>打开浏览器访问 <a href=\"http://127.0.0.1:80\" target=\"_blank\" rel=\"external\">http://127.0.0.1:80</a> 你会惊奇的发现页面没有变化</p>\n<h1 id=\"Laravel向视图传递变量\"><a href=\"#Laravel向视图传递变量\" class=\"headerlink\" title=\"Laravel向视图传递变量\"></a>Laravel向视图传递变量</h1><p>这里 「name」是发送给视图的变量，「$name」是变量值</p>\n<h3 id=\"单个变量\"><a href=\"#单个变量\" class=\"headerlink\" title=\"单个变量\"></a>单个变量</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">return vier(&apos;about.about&apos;)-&gt;with(&apos;name&apos;,$name);</div></pre></td></tr></table></figure>\n<h3 id=\"多个变量\"><a href=\"#多个变量\" class=\"headerlink\" title=\"多个变量\"></a>多个变量</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">#方法1:</div><div class=\"line\">return vier(&apos;about.about&apos;)-&gt;with([</div><div class=\"line\">    &apos;first&apos;=&gt; &apos;one&apos;,</div><div class=\"line\">    &apos;last&apos;=&gt; &apos;two&apos;</div><div class=\"line\">]);     </div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">#方法2:</div><div class=\"line\">$array=[];</div><div class=\"line\">$array[&apos;farst&apos;]= &apos;one&apos;;</div><div class=\"line\">$array[&apos;lost&apos;]= &apos;two&apos;;</div><div class=\"line\">return vier(&apos;about.about&apos;,$array);</div></pre></td></tr></table></figure>\n<h3 id=\"多个或单个变量\"><a href=\"#多个或单个变量\" class=\"headerlink\" title=\"多个或单个变量\"></a>多个或单个变量</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">$first= &apos;one&apos;;</div><div class=\"line\">$lost= &apos;two&apos;;</div><div class=\"line\">return view(&apos;about.about&apos;,compact(&apos;first&apos;,&apos;lost&apos;)); # 个人倾向</div></pre></td></tr></table></figure>\n<p>在模板中使用变量 </p>\n<blockquote>\n<p>传统写法：</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?php $name ?&gt;</div></pre></td></tr></table></figure>\n<blockquote>\n<p>laravel写法</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;&#123; $name &#125;&#125;   #会转义变量</div><div class=\"line\"></div><div class=\"line\">&#123;!! $name !!&#125;  #不会转义变量 注意xss攻击</div></pre></td></tr></table></figure>\n<h1 id=\"Laravel-Blade-模板简介\"><a href=\"#Laravel-Blade-模板简介\" class=\"headerlink\" title=\"Laravel Blade 模板简介\"></a>Laravel Blade 模板简介</h1><p>比如我们需要新建一个页面，考虑页面CSS一至性，每次都要 cp ？ ❌<br>其实网们可以这样做 在 views/目录下新建 app.blade.php </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;!DOCTYPE HTML&gt;</div><div class=\"line\">&lt;html&gt;</div><div class=\"line\">&lt;head&gt;</div><div class=\"line\">&lt;title&gt;&lt;/title&gt;</div><div class=\"line\">&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;style/css/style.css&quot;/&gt;</div><div class=\"line\">&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;style/css/external.min.css&quot;/&gt;</div><div class=\"line\">&lt;/head&gt;</div><div class=\"line\">&lt;body&gt;</div><div class=\"line\"></div><div class=\"line\">@yield(&apos;content&apos;) #重点在这里  设置一块content缓冲区</div><div class=\"line\"></div><div class=\"line\">&lt;/body&gt;</div><div class=\"line\">&lt;/html&gt;</div></pre></td></tr></table></figure>\n<p>其他html页面可以删除body以上代码<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">@extends(&apos;app&apos;)  #继承刚才新建的app.blade.php</div><div class=\"line\"></div><div class=\"line\">@section(&apos;content&apos;)  #创建一块content缓冲区</div><div class=\"line\">    #body正文</div><div class=\"line\">@stop #一个section对应1个stop</div></pre></td></tr></table></figure></p>\n<p>⚠️ 如果一个页面西药特定文件怎么办 没错就是在创建一块缓冲区</p>\n<p>这个你学会了，在来的新技能吧！</p>\n<h2 id=\"在模版中使用条件-循环\"><a href=\"#在模版中使用条件-循环\" class=\"headerlink\" title=\"在模版中使用条件 循环\"></a>在模版中使用条件 循环</h2><h3 id=\"条件判断\"><a href=\"#条件判断\" class=\"headerlink\" title=\"条件判断\"></a>条件判断</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">@if(true)</div><div class=\"line\">    &lt;h1&gt; true &lt;/h1&gt;</div><div class=\"line\">@else</div><div class=\"line\">    flast</div><div class=\"line\">@endif</div></pre></td></tr></table></figure>\n<h3 id=\"循环\"><a href=\"#循环\" class=\"headerlink\" title=\"循环\"></a>循环</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">@foreach($array as $key) </div><div class=\"line\">    &#123;&#123; $key &#125;&#125;</div><div class=\"line\">@endforeach</div></pre></td></tr></table></figure>\n<h1 id=\"Laravel环境配置-env\"><a href=\"#Laravel环境配置-env\" class=\"headerlink\" title=\"Laravel环境配置.env\"></a>Laravel环境配置.env</h1><p>env(‘.env名称’,’默认值’)</p>\n<h1 id=\"美化phpstorm\"><a href=\"#美化phpstorm\" class=\"headerlink\" title=\"美化phpstorm\"></a>美化phpstorm</h1><p><a href=\"https://www.laravist.com/series/phpstorm-the-best-php-ide-you-ever-met/episodes/2\" target=\"_blank\" rel=\"external\">https://www.laravist.com/series/phpstorm-the-best-php-ide-you-ever-met/episodes/2</a></p>\n<h1 id=\"mac终端美化：\"><a href=\"#mac终端美化：\" class=\"headerlink\" title=\"mac终端美化：\"></a>mac终端美化：</h1><h2 id=\"安装「oh-my-zsh」可以自动安装也可以手动安装\"><a href=\"#安装「oh-my-zsh」可以自动安装也可以手动安装\" class=\"headerlink\" title=\"安装「oh my zsh」可以自动安装也可以手动安装\"></a>安装「oh my zsh」可以自动安装也可以手动安装</h2><p><strong>推荐手动安装</strong></p>\n<h3 id=\"手动安装\"><a href=\"#手动安装\" class=\"headerlink\" title=\"手动安装\"></a>手动安装</h3><p><a href=\"https://github.com/zsh-users/zsh-autosuggestions\" target=\"_blank\" rel=\"external\">Github地址</a><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">git clone git://github.com/robbyrussell/oh-my-zsh.git ~/.oh-my-zsh</div><div class=\"line\">cp ~/.oh-my-zsh/templates/zshrc.zsh-template ~/.zshrc</div></pre></td></tr></table></figure></p>\n<h3 id=\"自动安装\"><a href=\"#自动安装\" class=\"headerlink\" title=\"自动安装\"></a>自动安装</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">wget https://github.com/robbyrussell/oh-my-zsh/raw/master/tools/install.sh -O - | sh</div></pre></td></tr></table></figure>\n<h3 id=\"替换bash为zsh\"><a href=\"#替换bash为zsh\" class=\"headerlink\" title=\"替换bash为zsh\"></a>替换bash为zsh</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">chsh -s /bin/zsh</div></pre></td></tr></table></figure>\n<h2 id=\"自动提示插件安装\"><a href=\"#自动提示插件安装\" class=\"headerlink\" title=\"自动提示插件安装\"></a>自动提示插件安装</h2><h3 id=\"下载插件\"><a href=\"#下载插件\" class=\"headerlink\" title=\"下载插件\"></a>下载插件</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">git clone git://github.com/zsh-users/zsh-autosuggestions ~/.zsh/zsh-autosuggestions</div><div class=\"line\"></div><div class=\"line\">#将下命令添加到你的 .zshrc:</div><div class=\"line\">source ~/.zsh/zsh-autosuggestions/zsh-autosuggestions.zsh</div></pre></td></tr></table></figure>\n<h2 id=\"git问题大全\"><a href=\"#git问题大全\" class=\"headerlink\" title=\"git问题大全\"></a>git问题大全</h2><h3 id=\"执行git-push错误时的解决方法\"><a href=\"#执行git-push错误时的解决方法\" class=\"headerlink\" title=\"执行git push错误时的解决方法\"></a>执行git push错误时的解决方法</h3><p>默认情况下在执行 <code>git push</code> 时，系统会提示error而无法成功推送。这是由于git默认拒绝了push操作，需要进行设置，修改远程仓库目录中的 .git/config 文件.</p>\n<p><strong>解决方法：</strong><br>在后面添加如下代码：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\">[receive]</div><div class=\"line\">       denyCurrentBranch = ignore</div><div class=\"line\">```       </div><div class=\"line\"></div><div class=\"line\">### 执行git push后，服务器端无法查看到推送内容的原因及解决方法</div><div class=\"line\">在初始化远程仓库时最好使用：`git --bare init`，而不要使用：`git init`</div><div class=\"line\">如果使用了`git init` 初始化，则远程仓库的目录下也包含 work tree。当本地仓库向远程仓库push时，如果远程仓库正在push的分支上（如果当时不在push的分支，就没有问题）, 那么push后的结果不会反应在work tree上，也即在远程仓库的目录下对应的文件还是之前的内容。</div><div class=\"line\"></div><div class=\"line\">**解决方法：**</div><div class=\"line\">远程端必须运行命令：`git reset --hard` 才能看到 push 后的内容。</div><div class=\"line\">### 解决因git源代码库路径发生变化，导致本地代码库无法同步的问题</div><div class=\"line\">如果执行git clone之后，源代码库的路径发生变化，导致无法与源代码保持一致，可以修改本地代码库的.git/config文件以更新源代码路径，例如：</div><div class=\"line\">vi .git/config</div><div class=\"line\">内容如下：</div></pre></td></tr></table></figure>\n<p>[core]<br>        repositoryformatversion = 0<br>        filemode = true<br>        bare = false<br>        logallrefupdates = true<br>[remote “origin”]<br>        fetch = +refs/heads/<em>:refs/remotes/origin/</em><br>        url = /home/android/gitTestSource<br>[branch “master”]<br>        remote = origin<br>        merge = refs/heads/master<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">**解决方法：**</div><div class=\"line\">如果现在/home/android/gitTestSource目录的文件被移动到了/home/android/project/gitTestSource目录，则可将其中的url = /home/android/gitTestSource改为：url = /home/android/project/gitTestSource。</div><div class=\"line\"></div><div class=\"line\">### git  Unable to create temporary file</div><div class=\"line\">1）出现 `Unable to create temporary file: Permission denied`</div><div class=\"line\">在Windows上使用TortoiseGit执行Push时出现以下错误</div></pre></td></tr></table></figure></p>\n<p>git.exe push –force –progress  “origin” master:master<br>Counting objects: 189, done.<br>Compressing objects: 100% (187/187)<br>Writing objects:   7% (14/189)<br>fatal: Unable to create temporary file: Permission denied<br>fatal: sha1 file ‘<stdout>‘ write error: Invalid argument<br>error: failed to push some refs to ‘git@110.73.4.46:channelv.git’<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"> </div><div class=\"line\">`git did not exit cleanly (exit code 1)`</div><div class=\"line\">原来是服务器上是用root账户建立的库目录，导致git账户无权写入，方法就是修改文件夹的所属用户和所属用户组</div></pre></td></tr></table></figure></stdout></p>\n<p>chown -R git <em><br>chgrp -R git </em><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">2）出现 `failed to push some refs to &apos;git@110.731.41.46:channelv.git&apos;`</div><div class=\"line\"></div><div class=\"line\">在Windows上使用TortoiseGit执行Push时出现以下错误</div></pre></td></tr></table></figure></p>\n<p>git.exe push –progress  “origin” master:master<br>Counting objects: 189, done.<br>Compressing objects: 100% (158/158)<br>Writing objects: 100% (189/189), 1016.00 KiB | 997 KiB/s<br>Writing objects: 100% (189/189), 1.12 MiB | 997 KiB/s, done.<br>remote: error: ‘receive.denyCurrentBranch’ configuration variable to ‘refuse’.<br>To git@101.713.4.46:channelv.git<br>! [remote rejected] master -&gt; master (branch is currently checked out)<br>error: failed to push some refs to ‘git@10.73.4.46:channelv.git’<br>git did not exit cleanly (exit code 1)<br>```</p>\n<p>在服务器对应的库目录下执行以下命令增加配置即可</p>\n<p><code>git config --bool core.bare true</code></p>"},{"title":"LINUX中常用操作命令","date":"2016-09-17T17:36:10.000Z","_content":"\n LINUX中常用操作命令\n \n# Linux简介及Ubuntu安装\nLinux，免费开源，多用户多任务系统。基于Linux有多个版本的衍生。RedHat、Ubuntu、Debian\n安装VMware或VirtualBox虚拟机。具体安装步骤，找百度。\n再安装Ubuntu。具体安装步骤，找百度。\n安装完后，可以看到Linux系统的目录结构，见链接[http://www.cnblogs.com/laov/p/3409875.html\n]()\n<!--more-->\n\n           #常用指令\nls　　        显示文件或目录\n\n     -l           列出文件详细信息l(list)\n\n     -a          列出当前目录下所有文件及目录，包括隐藏的a(all)\n\nmkdir         创建目录\n\n     -p           创建目录，若无父目录，则创建p(parent)\n\ncd              切换目录\n\ntouch           创建空文件\n\necho            创建带有内容的文件。\n\ncat              查看文件内容\n\ncp                拷贝\n\nmv               移动或重命名\n\nrm               删除文件\n\n    -r            递归删除，可删除子目录及文件\n    -f            强制删除\n\nfind              在文件系统中搜索某文件\n\nwc                统计文本中行数、字数、字符数\n\ngrep             在文本文件中查找某个字符串\n\nrmdir           删除空目录\n\ntree             树形结构显示目录，需要安装tree包\n\npwd              显示当前目录\n\nln                  创建链接文件\n\nmore、less  分页显示文本文件内容\n\nhead、tail    显示文件头、尾内容\n\nctrl+alt+F1  命令行全屏模式\n\n# 系统管理命令\nstat              显示指定文件的详细信息，比ls更详细\n\nwho               显示在线登陆用户\n\nwhoami          显示当前操作用户\n\nhostname      显示主机名\n\nuname           显示系统信息\n\ntop                动态显示当前耗费资源最多进程信息\n\nps                  显示瞬间进程状态 ps -aux\n\ndu                  查看目录大小 du -h /home带有单位显示目录信息\n\ndf                  查看磁盘大小 df -h 带有单位显示磁盘信息\n\nifconfig          查看网络情况\n\nping                测试网络连通\n\nnetstat          显示网络状态信息\n\nman                命令不会用了，找男人  如：man ls\n\nclear              清屏\n\nalias               对命令重命名 如：alias showmeit=\"ps -aux\" ，另外解除使用unaliax showmeit\n\nkill                 杀死进程，可以先用ps 或 top命令查看进程的id，然后再用kill命令杀死进程。\n\n# 打包压缩相关命令\ngzip：\n\nbzip2：\n\n```\ntar:                打包压缩\n\n     -c              归档文件\n\n     -x              压缩文件\n\n     -z              gzip压缩文件\n\n     -j              bzip2压缩文件\n\n     -v              显示压缩或解压缩过程 v(view)\n\n     -f              使用档名\n```\n\n例：\n\n`tar -cvf /home/abc.tar /home/abc `             只打包，不压缩\n\n`tar -zcvf /home/abc.tar.gz /home/abc`          打包，并用gzip压缩\n\n`tar -jcvf /home/abc.tar.bz2 /home/abc`         打包，并用bzip2压缩\n\n当然，如果想解压缩，就直接替换上面的命令  `tar -cvf  / tar -zcvf  / tar -jcvf` 中的“c” 换成“x” 就可以了。\n\n# 关机/重启机器\nshutdown\n\n```\n    -r             关机重启\n\n    -h             关机不重启\n\n    now            立刻关机\n\n    halt            关机\n\n    reboot          重启\n```\n\n# Linux管道\n将一个命令的标准输出作为另一个命令的标准输入。也就是把几个命令组合起来使用，后一个命令除以前一个命令的结果。\n\n例：`grep -r \"close\" /home/* | more`       在`home`目录下所有文件中查找，包括`close`的文件，并分页输出。\n\n# Linux软件包管理\ndpkg (Debian Package)管理工具，软件包名以.deb后缀。这种方法适合系统不能联网的情况下。\n\n比如安装tree命令的安装包，先将tree.deb传到Linux系统中。再使用如下命令安装。\n\n`sudo dpkg -i tree_1.5.3-1_i386.deb`         安装软件\n\n`sudo dpkg -r tree`                             卸载软件\n\n \n\n注：将tree.deb传到Linux系统中，有多种方式。VMwareTool，使用挂载方式；使用winSCP工具等；\n\nAPT（Advanced Packaging Tool）高级软件工具。这种方法适合系统能够连接互联网的情况。\n\n依然以tree为例\n\n`sudo apt-get install tree`                   安装tree\n\n`sudo apt-get remove tree`                    卸载tree\n\n`sudo apt-get update`\n\n更新软件                `sudo apt-get upgrade`\n\n \n\n将.rpm文件转为.deb文件\n\n.rpm为RedHat使用的软件格式。在Ubuntu下不能直接使用，所以需要转换一下。\n\n`sudo alien abc.rpm`\n\n# vim使用\nvim三种模式：命令模式、插入模式、编辑模式。使用ESC或i或：来切换模式。\n\n命令模式下：\n\n```\n:q                      退出\n\n:q!                     强制退出\n\n:wq                     保存并退出\n\n:set number             显示行号\n\n:set nonumber           隐藏行号\n\n/apache                 在文档中查找apache 按n跳到下一个，shift+n上一个\n\nyyp                     复制光标所在行，并粘贴\n\nh                       (左移一个字符←)、j(下一行↓)、k(上一行↑)、l(右移一个字符→)\n```\n\n#用户及用户组管理\n/etc/passwd    存储用户账号\n\n/etc/group       存储组账号\n\n/etc/shadow    存储用户账号的密码\n\n/etc/gshadow  存储用户组账号的密码\n\nuseradd 用户名\n\nuserdel 用户名\n\nadduser 用户名\n\ngroupadd 组名\n\ngroupdel 组名\n\npasswd root     给root设置密码\n\nsu root\n\nsu - root \n\n/etc/profile     系统环境变量\n\nbash_profile     用户环境变量\n\n.bashrc              用户环境变量\n\nsu user              切换用户，加载配置文件.bashrc\n\nsu - user            切换用户，加载配置文件/etc/profile ，加载bash_profile\n\n## 更改文件的用户及用户组\n\n`sudo chown [-R] owner[:group] {File|Directory}`\n\n例如：还以`jdk-7u21-linux-i586.tar.gz`为例。属于用户 「hadoop」 ，组 「hadoop」 \n\n要想切换此文件所属的用户及组。可以使用命令。\n\n`sudo chown root:root jdk-7u21-linux-i586.tar.gz`\n\n# 文件权限管理\n三种基本权限\n\nR           读         数值表示为4\n\nW          写         数值表示为2\n\nX           可执行  数值表示为1\n\n![](http://images.cnitblog.com/blog/352072/201402/091549405142313.png)\n\n如图所示，`jdk-7u21-linux-i586.tar.gz`文件的权限为`-rw-rw-r--`\n\n`-rw-rw-r--`一共十个字符，分成四段。\n\n第一个字符『-』表示普通文件；这个位置还可能会出现“l”链接；“d”表示目录\n\n第二三四个字符『rw-』表示当前所属用户的权限。   所以用数值表示为4+2=6\n\n第五六七个字符『rw-』表示当前所属组的权限。     所以用数值表示为4+2=6\n\n第八九十个字符『r--』表示其他用户权限。        所以用数值表示为2\n\n所以操作此文件的权限用数值表示为662 \n## 更改权限\n`sudo chmod` 「u所属用户  g所属组  o其他用户  a所有用户]  [+增加权限  -减少权限]  [r  w  x」   目录名 \n\n例如：有一个文件filename，权限为 「-rw-r----x」 ,将权限值改为 `-rwxrw-r-x` ，用数值表示为`765`\n\n`sudo chmod u+x g+w o+r  filename`\n\n上面的例子可以用数值表示\n\n`sudo chmod 765 filename`\n\n\n","source":"_posts/linuxComdLine.md","raw":"---\ntitle: LINUX中常用操作命令\ndate: 2016-09-18 01:36:10\ntags:\n    - Linux\n    - 常用操作命令\ncategories: Linux\n---\n\n LINUX中常用操作命令\n \n# Linux简介及Ubuntu安装\nLinux，免费开源，多用户多任务系统。基于Linux有多个版本的衍生。RedHat、Ubuntu、Debian\n安装VMware或VirtualBox虚拟机。具体安装步骤，找百度。\n再安装Ubuntu。具体安装步骤，找百度。\n安装完后，可以看到Linux系统的目录结构，见链接[http://www.cnblogs.com/laov/p/3409875.html\n]()\n<!--more-->\n\n           #常用指令\nls　　        显示文件或目录\n\n     -l           列出文件详细信息l(list)\n\n     -a          列出当前目录下所有文件及目录，包括隐藏的a(all)\n\nmkdir         创建目录\n\n     -p           创建目录，若无父目录，则创建p(parent)\n\ncd              切换目录\n\ntouch           创建空文件\n\necho            创建带有内容的文件。\n\ncat              查看文件内容\n\ncp                拷贝\n\nmv               移动或重命名\n\nrm               删除文件\n\n    -r            递归删除，可删除子目录及文件\n    -f            强制删除\n\nfind              在文件系统中搜索某文件\n\nwc                统计文本中行数、字数、字符数\n\ngrep             在文本文件中查找某个字符串\n\nrmdir           删除空目录\n\ntree             树形结构显示目录，需要安装tree包\n\npwd              显示当前目录\n\nln                  创建链接文件\n\nmore、less  分页显示文本文件内容\n\nhead、tail    显示文件头、尾内容\n\nctrl+alt+F1  命令行全屏模式\n\n# 系统管理命令\nstat              显示指定文件的详细信息，比ls更详细\n\nwho               显示在线登陆用户\n\nwhoami          显示当前操作用户\n\nhostname      显示主机名\n\nuname           显示系统信息\n\ntop                动态显示当前耗费资源最多进程信息\n\nps                  显示瞬间进程状态 ps -aux\n\ndu                  查看目录大小 du -h /home带有单位显示目录信息\n\ndf                  查看磁盘大小 df -h 带有单位显示磁盘信息\n\nifconfig          查看网络情况\n\nping                测试网络连通\n\nnetstat          显示网络状态信息\n\nman                命令不会用了，找男人  如：man ls\n\nclear              清屏\n\nalias               对命令重命名 如：alias showmeit=\"ps -aux\" ，另外解除使用unaliax showmeit\n\nkill                 杀死进程，可以先用ps 或 top命令查看进程的id，然后再用kill命令杀死进程。\n\n# 打包压缩相关命令\ngzip：\n\nbzip2：\n\n```\ntar:                打包压缩\n\n     -c              归档文件\n\n     -x              压缩文件\n\n     -z              gzip压缩文件\n\n     -j              bzip2压缩文件\n\n     -v              显示压缩或解压缩过程 v(view)\n\n     -f              使用档名\n```\n\n例：\n\n`tar -cvf /home/abc.tar /home/abc `             只打包，不压缩\n\n`tar -zcvf /home/abc.tar.gz /home/abc`          打包，并用gzip压缩\n\n`tar -jcvf /home/abc.tar.bz2 /home/abc`         打包，并用bzip2压缩\n\n当然，如果想解压缩，就直接替换上面的命令  `tar -cvf  / tar -zcvf  / tar -jcvf` 中的“c” 换成“x” 就可以了。\n\n# 关机/重启机器\nshutdown\n\n```\n    -r             关机重启\n\n    -h             关机不重启\n\n    now            立刻关机\n\n    halt            关机\n\n    reboot          重启\n```\n\n# Linux管道\n将一个命令的标准输出作为另一个命令的标准输入。也就是把几个命令组合起来使用，后一个命令除以前一个命令的结果。\n\n例：`grep -r \"close\" /home/* | more`       在`home`目录下所有文件中查找，包括`close`的文件，并分页输出。\n\n# Linux软件包管理\ndpkg (Debian Package)管理工具，软件包名以.deb后缀。这种方法适合系统不能联网的情况下。\n\n比如安装tree命令的安装包，先将tree.deb传到Linux系统中。再使用如下命令安装。\n\n`sudo dpkg -i tree_1.5.3-1_i386.deb`         安装软件\n\n`sudo dpkg -r tree`                             卸载软件\n\n \n\n注：将tree.deb传到Linux系统中，有多种方式。VMwareTool，使用挂载方式；使用winSCP工具等；\n\nAPT（Advanced Packaging Tool）高级软件工具。这种方法适合系统能够连接互联网的情况。\n\n依然以tree为例\n\n`sudo apt-get install tree`                   安装tree\n\n`sudo apt-get remove tree`                    卸载tree\n\n`sudo apt-get update`\n\n更新软件                `sudo apt-get upgrade`\n\n \n\n将.rpm文件转为.deb文件\n\n.rpm为RedHat使用的软件格式。在Ubuntu下不能直接使用，所以需要转换一下。\n\n`sudo alien abc.rpm`\n\n# vim使用\nvim三种模式：命令模式、插入模式、编辑模式。使用ESC或i或：来切换模式。\n\n命令模式下：\n\n```\n:q                      退出\n\n:q!                     强制退出\n\n:wq                     保存并退出\n\n:set number             显示行号\n\n:set nonumber           隐藏行号\n\n/apache                 在文档中查找apache 按n跳到下一个，shift+n上一个\n\nyyp                     复制光标所在行，并粘贴\n\nh                       (左移一个字符←)、j(下一行↓)、k(上一行↑)、l(右移一个字符→)\n```\n\n#用户及用户组管理\n/etc/passwd    存储用户账号\n\n/etc/group       存储组账号\n\n/etc/shadow    存储用户账号的密码\n\n/etc/gshadow  存储用户组账号的密码\n\nuseradd 用户名\n\nuserdel 用户名\n\nadduser 用户名\n\ngroupadd 组名\n\ngroupdel 组名\n\npasswd root     给root设置密码\n\nsu root\n\nsu - root \n\n/etc/profile     系统环境变量\n\nbash_profile     用户环境变量\n\n.bashrc              用户环境变量\n\nsu user              切换用户，加载配置文件.bashrc\n\nsu - user            切换用户，加载配置文件/etc/profile ，加载bash_profile\n\n## 更改文件的用户及用户组\n\n`sudo chown [-R] owner[:group] {File|Directory}`\n\n例如：还以`jdk-7u21-linux-i586.tar.gz`为例。属于用户 「hadoop」 ，组 「hadoop」 \n\n要想切换此文件所属的用户及组。可以使用命令。\n\n`sudo chown root:root jdk-7u21-linux-i586.tar.gz`\n\n# 文件权限管理\n三种基本权限\n\nR           读         数值表示为4\n\nW          写         数值表示为2\n\nX           可执行  数值表示为1\n\n![](http://images.cnitblog.com/blog/352072/201402/091549405142313.png)\n\n如图所示，`jdk-7u21-linux-i586.tar.gz`文件的权限为`-rw-rw-r--`\n\n`-rw-rw-r--`一共十个字符，分成四段。\n\n第一个字符『-』表示普通文件；这个位置还可能会出现“l”链接；“d”表示目录\n\n第二三四个字符『rw-』表示当前所属用户的权限。   所以用数值表示为4+2=6\n\n第五六七个字符『rw-』表示当前所属组的权限。     所以用数值表示为4+2=6\n\n第八九十个字符『r--』表示其他用户权限。        所以用数值表示为2\n\n所以操作此文件的权限用数值表示为662 \n## 更改权限\n`sudo chmod` 「u所属用户  g所属组  o其他用户  a所有用户]  [+增加权限  -减少权限]  [r  w  x」   目录名 \n\n例如：有一个文件filename，权限为 「-rw-r----x」 ,将权限值改为 `-rwxrw-r-x` ，用数值表示为`765`\n\n`sudo chmod u+x g+w o+r  filename`\n\n上面的例子可以用数值表示\n\n`sudo chmod 765 filename`\n\n\n","slug":"linuxComdLine","published":1,"updated":"2017-09-24T21:08:09.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj7zrohqo000er1s6znlpxjpn","content":"<p> LINUX中常用操作命令</p>\n<h1 id=\"Linux简介及Ubuntu安装\"><a href=\"#Linux简介及Ubuntu安装\" class=\"headerlink\" title=\"Linux简介及Ubuntu安装\"></a>Linux简介及Ubuntu安装</h1><p>Linux，免费开源，多用户多任务系统。基于Linux有多个版本的衍生。RedHat、Ubuntu、Debian<br>安装VMware或VirtualBox虚拟机。具体安装步骤，找百度。<br>再安装Ubuntu。具体安装步骤，找百度。<br>安装完后，可以看到Linux系统的目录结构，见链接<a href=\"\">http://www.cnblogs.com/laov/p/3409875.html\n</a><br><a id=\"more\"></a></p>\n<pre><code>#常用指令\n</code></pre><p>ls　　        显示文件或目录</p>\n<pre><code>-l           列出文件详细信息l(list)\n\n-a          列出当前目录下所有文件及目录，包括隐藏的a(all)\n</code></pre><p>mkdir         创建目录</p>\n<pre><code>-p           创建目录，若无父目录，则创建p(parent)\n</code></pre><p>cd              切换目录</p>\n<p>touch           创建空文件</p>\n<p>echo            创建带有内容的文件。</p>\n<p>cat              查看文件内容</p>\n<p>cp                拷贝</p>\n<p>mv               移动或重命名</p>\n<p>rm               删除文件</p>\n<pre><code>-r            递归删除，可删除子目录及文件\n-f            强制删除\n</code></pre><p>find              在文件系统中搜索某文件</p>\n<p>wc                统计文本中行数、字数、字符数</p>\n<p>grep             在文本文件中查找某个字符串</p>\n<p>rmdir           删除空目录</p>\n<p>tree             树形结构显示目录，需要安装tree包</p>\n<p>pwd              显示当前目录</p>\n<p>ln                  创建链接文件</p>\n<p>more、less  分页显示文本文件内容</p>\n<p>head、tail    显示文件头、尾内容</p>\n<p>ctrl+alt+F1  命令行全屏模式</p>\n<h1 id=\"系统管理命令\"><a href=\"#系统管理命令\" class=\"headerlink\" title=\"系统管理命令\"></a>系统管理命令</h1><p>stat              显示指定文件的详细信息，比ls更详细</p>\n<p>who               显示在线登陆用户</p>\n<p>whoami          显示当前操作用户</p>\n<p>hostname      显示主机名</p>\n<p>uname           显示系统信息</p>\n<p>top                动态显示当前耗费资源最多进程信息</p>\n<p>ps                  显示瞬间进程状态 ps -aux</p>\n<p>du                  查看目录大小 du -h /home带有单位显示目录信息</p>\n<p>df                  查看磁盘大小 df -h 带有单位显示磁盘信息</p>\n<p>ifconfig          查看网络情况</p>\n<p>ping                测试网络连通</p>\n<p>netstat          显示网络状态信息</p>\n<p>man                命令不会用了，找男人  如：man ls</p>\n<p>clear              清屏</p>\n<p>alias               对命令重命名 如：alias showmeit=”ps -aux” ，另外解除使用unaliax showmeit</p>\n<p>kill                 杀死进程，可以先用ps 或 top命令查看进程的id，然后再用kill命令杀死进程。</p>\n<h1 id=\"打包压缩相关命令\"><a href=\"#打包压缩相关命令\" class=\"headerlink\" title=\"打包压缩相关命令\"></a>打包压缩相关命令</h1><p>gzip：</p>\n<p>bzip2：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">tar:                打包压缩</div><div class=\"line\"></div><div class=\"line\">     -c              归档文件</div><div class=\"line\"></div><div class=\"line\">     -x              压缩文件</div><div class=\"line\"></div><div class=\"line\">     -z              gzip压缩文件</div><div class=\"line\"></div><div class=\"line\">     -j              bzip2压缩文件</div><div class=\"line\"></div><div class=\"line\">     -v              显示压缩或解压缩过程 v(view)</div><div class=\"line\"></div><div class=\"line\">     -f              使用档名</div></pre></td></tr></table></figure>\n<p>例：</p>\n<p><code>tar -cvf /home/abc.tar /home/abc</code>             只打包，不压缩</p>\n<p><code>tar -zcvf /home/abc.tar.gz /home/abc</code>          打包，并用gzip压缩</p>\n<p><code>tar -jcvf /home/abc.tar.bz2 /home/abc</code>         打包，并用bzip2压缩</p>\n<p>当然，如果想解压缩，就直接替换上面的命令  <code>tar -cvf  / tar -zcvf  / tar -jcvf</code> 中的“c” 换成“x” 就可以了。</p>\n<h1 id=\"关机-重启机器\"><a href=\"#关机-重启机器\" class=\"headerlink\" title=\"关机/重启机器\"></a>关机/重启机器</h1><p>shutdown</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">-r             关机重启</div><div class=\"line\"></div><div class=\"line\">-h             关机不重启</div><div class=\"line\"></div><div class=\"line\">now            立刻关机</div><div class=\"line\"></div><div class=\"line\">halt            关机</div><div class=\"line\"></div><div class=\"line\">reboot          重启</div></pre></td></tr></table></figure>\n<h1 id=\"Linux管道\"><a href=\"#Linux管道\" class=\"headerlink\" title=\"Linux管道\"></a>Linux管道</h1><p>将一个命令的标准输出作为另一个命令的标准输入。也就是把几个命令组合起来使用，后一个命令除以前一个命令的结果。</p>\n<p>例：<code>grep -r &quot;close&quot; /home/* | more</code>       在<code>home</code>目录下所有文件中查找，包括<code>close</code>的文件，并分页输出。</p>\n<h1 id=\"Linux软件包管理\"><a href=\"#Linux软件包管理\" class=\"headerlink\" title=\"Linux软件包管理\"></a>Linux软件包管理</h1><p>dpkg (Debian Package)管理工具，软件包名以.deb后缀。这种方法适合系统不能联网的情况下。</p>\n<p>比如安装tree命令的安装包，先将tree.deb传到Linux系统中。再使用如下命令安装。</p>\n<p><code>sudo dpkg -i tree_1.5.3-1_i386.deb</code>         安装软件</p>\n<p><code>sudo dpkg -r tree</code>                             卸载软件</p>\n<p>注：将tree.deb传到Linux系统中，有多种方式。VMwareTool，使用挂载方式；使用winSCP工具等；</p>\n<p>APT（Advanced Packaging Tool）高级软件工具。这种方法适合系统能够连接互联网的情况。</p>\n<p>依然以tree为例</p>\n<p><code>sudo apt-get install tree</code>                   安装tree</p>\n<p><code>sudo apt-get remove tree</code>                    卸载tree</p>\n<p><code>sudo apt-get update</code></p>\n<p>更新软件                <code>sudo apt-get upgrade</code></p>\n<p>将.rpm文件转为.deb文件</p>\n<p>.rpm为RedHat使用的软件格式。在Ubuntu下不能直接使用，所以需要转换一下。</p>\n<p><code>sudo alien abc.rpm</code></p>\n<h1 id=\"vim使用\"><a href=\"#vim使用\" class=\"headerlink\" title=\"vim使用\"></a>vim使用</h1><p>vim三种模式：命令模式、插入模式、编辑模式。使用ESC或i或：来切换模式。</p>\n<p>命令模式下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\">:q                      退出</div><div class=\"line\"></div><div class=\"line\">:q!                     强制退出</div><div class=\"line\"></div><div class=\"line\">:wq                     保存并退出</div><div class=\"line\"></div><div class=\"line\">:set number             显示行号</div><div class=\"line\"></div><div class=\"line\">:set nonumber           隐藏行号</div><div class=\"line\"></div><div class=\"line\">/apache                 在文档中查找apache 按n跳到下一个，shift+n上一个</div><div class=\"line\"></div><div class=\"line\">yyp                     复制光标所在行，并粘贴</div><div class=\"line\"></div><div class=\"line\">h                       (左移一个字符←)、j(下一行↓)、k(上一行↑)、l(右移一个字符→)</div></pre></td></tr></table></figure>\n<p>#用户及用户组管理<br>/etc/passwd    存储用户账号</p>\n<p>/etc/group       存储组账号</p>\n<p>/etc/shadow    存储用户账号的密码</p>\n<p>/etc/gshadow  存储用户组账号的密码</p>\n<p>useradd 用户名</p>\n<p>userdel 用户名</p>\n<p>adduser 用户名</p>\n<p>groupadd 组名</p>\n<p>groupdel 组名</p>\n<p>passwd root     给root设置密码</p>\n<p>su root</p>\n<p>su - root </p>\n<p>/etc/profile     系统环境变量</p>\n<p>bash_profile     用户环境变量</p>\n<p>.bashrc              用户环境变量</p>\n<p>su user              切换用户，加载配置文件.bashrc</p>\n<p>su - user            切换用户，加载配置文件/etc/profile ，加载bash_profile</p>\n<h2 id=\"更改文件的用户及用户组\"><a href=\"#更改文件的用户及用户组\" class=\"headerlink\" title=\"更改文件的用户及用户组\"></a>更改文件的用户及用户组</h2><p><code>sudo chown [-R] owner[:group] {File|Directory}</code></p>\n<p>例如：还以<code>jdk-7u21-linux-i586.tar.gz</code>为例。属于用户 「hadoop」 ，组 「hadoop」 </p>\n<p>要想切换此文件所属的用户及组。可以使用命令。</p>\n<p><code>sudo chown root:root jdk-7u21-linux-i586.tar.gz</code></p>\n<h1 id=\"文件权限管理\"><a href=\"#文件权限管理\" class=\"headerlink\" title=\"文件权限管理\"></a>文件权限管理</h1><p>三种基本权限</p>\n<p>R           读         数值表示为4</p>\n<p>W          写         数值表示为2</p>\n<p>X           可执行  数值表示为1</p>\n<p><img src=\"http://images.cnitblog.com/blog/352072/201402/091549405142313.png\" alt=\"\"></p>\n<p>如图所示，<code>jdk-7u21-linux-i586.tar.gz</code>文件的权限为<code>-rw-rw-r--</code></p>\n<p><code>-rw-rw-r--</code>一共十个字符，分成四段。</p>\n<p>第一个字符『-』表示普通文件；这个位置还可能会出现“l”链接；“d”表示目录</p>\n<p>第二三四个字符『rw-』表示当前所属用户的权限。   所以用数值表示为4+2=6</p>\n<p>第五六七个字符『rw-』表示当前所属组的权限。     所以用数值表示为4+2=6</p>\n<p>第八九十个字符『r–』表示其他用户权限。        所以用数值表示为2</p>\n<p>所以操作此文件的权限用数值表示为662 </p>\n<h2 id=\"更改权限\"><a href=\"#更改权限\" class=\"headerlink\" title=\"更改权限\"></a>更改权限</h2><p><code>sudo chmod</code> 「u所属用户  g所属组  o其他用户  a所有用户]  [+增加权限  -减少权限]  [r  w  x」   目录名 </p>\n<p>例如：有一个文件filename，权限为 「-rw-r—-x」 ,将权限值改为 <code>-rwxrw-r-x</code> ，用数值表示为<code>765</code></p>\n<p><code>sudo chmod u+x g+w o+r  filename</code></p>\n<p>上面的例子可以用数值表示</p>\n<p><code>sudo chmod 765 filename</code></p>\n","site":{"data":{}},"excerpt":"<p> LINUX中常用操作命令</p>\n<h1 id=\"Linux简介及Ubuntu安装\"><a href=\"#Linux简介及Ubuntu安装\" class=\"headerlink\" title=\"Linux简介及Ubuntu安装\"></a>Linux简介及Ubuntu安装</h1><p>Linux，免费开源，多用户多任务系统。基于Linux有多个版本的衍生。RedHat、Ubuntu、Debian<br>安装VMware或VirtualBox虚拟机。具体安装步骤，找百度。<br>再安装Ubuntu。具体安装步骤，找百度。<br>安装完后，可以看到Linux系统的目录结构，见链接<a href=\"\">http://www.cnblogs.com/laov/p/3409875.html\n</a><br>","more":"</p>\n<pre><code>#常用指令\n</code></pre><p>ls　　        显示文件或目录</p>\n<pre><code>-l           列出文件详细信息l(list)\n\n-a          列出当前目录下所有文件及目录，包括隐藏的a(all)\n</code></pre><p>mkdir         创建目录</p>\n<pre><code>-p           创建目录，若无父目录，则创建p(parent)\n</code></pre><p>cd              切换目录</p>\n<p>touch           创建空文件</p>\n<p>echo            创建带有内容的文件。</p>\n<p>cat              查看文件内容</p>\n<p>cp                拷贝</p>\n<p>mv               移动或重命名</p>\n<p>rm               删除文件</p>\n<pre><code>-r            递归删除，可删除子目录及文件\n-f            强制删除\n</code></pre><p>find              在文件系统中搜索某文件</p>\n<p>wc                统计文本中行数、字数、字符数</p>\n<p>grep             在文本文件中查找某个字符串</p>\n<p>rmdir           删除空目录</p>\n<p>tree             树形结构显示目录，需要安装tree包</p>\n<p>pwd              显示当前目录</p>\n<p>ln                  创建链接文件</p>\n<p>more、less  分页显示文本文件内容</p>\n<p>head、tail    显示文件头、尾内容</p>\n<p>ctrl+alt+F1  命令行全屏模式</p>\n<h1 id=\"系统管理命令\"><a href=\"#系统管理命令\" class=\"headerlink\" title=\"系统管理命令\"></a>系统管理命令</h1><p>stat              显示指定文件的详细信息，比ls更详细</p>\n<p>who               显示在线登陆用户</p>\n<p>whoami          显示当前操作用户</p>\n<p>hostname      显示主机名</p>\n<p>uname           显示系统信息</p>\n<p>top                动态显示当前耗费资源最多进程信息</p>\n<p>ps                  显示瞬间进程状态 ps -aux</p>\n<p>du                  查看目录大小 du -h /home带有单位显示目录信息</p>\n<p>df                  查看磁盘大小 df -h 带有单位显示磁盘信息</p>\n<p>ifconfig          查看网络情况</p>\n<p>ping                测试网络连通</p>\n<p>netstat          显示网络状态信息</p>\n<p>man                命令不会用了，找男人  如：man ls</p>\n<p>clear              清屏</p>\n<p>alias               对命令重命名 如：alias showmeit=”ps -aux” ，另外解除使用unaliax showmeit</p>\n<p>kill                 杀死进程，可以先用ps 或 top命令查看进程的id，然后再用kill命令杀死进程。</p>\n<h1 id=\"打包压缩相关命令\"><a href=\"#打包压缩相关命令\" class=\"headerlink\" title=\"打包压缩相关命令\"></a>打包压缩相关命令</h1><p>gzip：</p>\n<p>bzip2：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">tar:                打包压缩</div><div class=\"line\"></div><div class=\"line\">     -c              归档文件</div><div class=\"line\"></div><div class=\"line\">     -x              压缩文件</div><div class=\"line\"></div><div class=\"line\">     -z              gzip压缩文件</div><div class=\"line\"></div><div class=\"line\">     -j              bzip2压缩文件</div><div class=\"line\"></div><div class=\"line\">     -v              显示压缩或解压缩过程 v(view)</div><div class=\"line\"></div><div class=\"line\">     -f              使用档名</div></pre></td></tr></table></figure>\n<p>例：</p>\n<p><code>tar -cvf /home/abc.tar /home/abc</code>             只打包，不压缩</p>\n<p><code>tar -zcvf /home/abc.tar.gz /home/abc</code>          打包，并用gzip压缩</p>\n<p><code>tar -jcvf /home/abc.tar.bz2 /home/abc</code>         打包，并用bzip2压缩</p>\n<p>当然，如果想解压缩，就直接替换上面的命令  <code>tar -cvf  / tar -zcvf  / tar -jcvf</code> 中的“c” 换成“x” 就可以了。</p>\n<h1 id=\"关机-重启机器\"><a href=\"#关机-重启机器\" class=\"headerlink\" title=\"关机/重启机器\"></a>关机/重启机器</h1><p>shutdown</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">-r             关机重启</div><div class=\"line\"></div><div class=\"line\">-h             关机不重启</div><div class=\"line\"></div><div class=\"line\">now            立刻关机</div><div class=\"line\"></div><div class=\"line\">halt            关机</div><div class=\"line\"></div><div class=\"line\">reboot          重启</div></pre></td></tr></table></figure>\n<h1 id=\"Linux管道\"><a href=\"#Linux管道\" class=\"headerlink\" title=\"Linux管道\"></a>Linux管道</h1><p>将一个命令的标准输出作为另一个命令的标准输入。也就是把几个命令组合起来使用，后一个命令除以前一个命令的结果。</p>\n<p>例：<code>grep -r &quot;close&quot; /home/* | more</code>       在<code>home</code>目录下所有文件中查找，包括<code>close</code>的文件，并分页输出。</p>\n<h1 id=\"Linux软件包管理\"><a href=\"#Linux软件包管理\" class=\"headerlink\" title=\"Linux软件包管理\"></a>Linux软件包管理</h1><p>dpkg (Debian Package)管理工具，软件包名以.deb后缀。这种方法适合系统不能联网的情况下。</p>\n<p>比如安装tree命令的安装包，先将tree.deb传到Linux系统中。再使用如下命令安装。</p>\n<p><code>sudo dpkg -i tree_1.5.3-1_i386.deb</code>         安装软件</p>\n<p><code>sudo dpkg -r tree</code>                             卸载软件</p>\n<p>注：将tree.deb传到Linux系统中，有多种方式。VMwareTool，使用挂载方式；使用winSCP工具等；</p>\n<p>APT（Advanced Packaging Tool）高级软件工具。这种方法适合系统能够连接互联网的情况。</p>\n<p>依然以tree为例</p>\n<p><code>sudo apt-get install tree</code>                   安装tree</p>\n<p><code>sudo apt-get remove tree</code>                    卸载tree</p>\n<p><code>sudo apt-get update</code></p>\n<p>更新软件                <code>sudo apt-get upgrade</code></p>\n<p>将.rpm文件转为.deb文件</p>\n<p>.rpm为RedHat使用的软件格式。在Ubuntu下不能直接使用，所以需要转换一下。</p>\n<p><code>sudo alien abc.rpm</code></p>\n<h1 id=\"vim使用\"><a href=\"#vim使用\" class=\"headerlink\" title=\"vim使用\"></a>vim使用</h1><p>vim三种模式：命令模式、插入模式、编辑模式。使用ESC或i或：来切换模式。</p>\n<p>命令模式下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\">:q                      退出</div><div class=\"line\"></div><div class=\"line\">:q!                     强制退出</div><div class=\"line\"></div><div class=\"line\">:wq                     保存并退出</div><div class=\"line\"></div><div class=\"line\">:set number             显示行号</div><div class=\"line\"></div><div class=\"line\">:set nonumber           隐藏行号</div><div class=\"line\"></div><div class=\"line\">/apache                 在文档中查找apache 按n跳到下一个，shift+n上一个</div><div class=\"line\"></div><div class=\"line\">yyp                     复制光标所在行，并粘贴</div><div class=\"line\"></div><div class=\"line\">h                       (左移一个字符←)、j(下一行↓)、k(上一行↑)、l(右移一个字符→)</div></pre></td></tr></table></figure>\n<p>#用户及用户组管理<br>/etc/passwd    存储用户账号</p>\n<p>/etc/group       存储组账号</p>\n<p>/etc/shadow    存储用户账号的密码</p>\n<p>/etc/gshadow  存储用户组账号的密码</p>\n<p>useradd 用户名</p>\n<p>userdel 用户名</p>\n<p>adduser 用户名</p>\n<p>groupadd 组名</p>\n<p>groupdel 组名</p>\n<p>passwd root     给root设置密码</p>\n<p>su root</p>\n<p>su - root </p>\n<p>/etc/profile     系统环境变量</p>\n<p>bash_profile     用户环境变量</p>\n<p>.bashrc              用户环境变量</p>\n<p>su user              切换用户，加载配置文件.bashrc</p>\n<p>su - user            切换用户，加载配置文件/etc/profile ，加载bash_profile</p>\n<h2 id=\"更改文件的用户及用户组\"><a href=\"#更改文件的用户及用户组\" class=\"headerlink\" title=\"更改文件的用户及用户组\"></a>更改文件的用户及用户组</h2><p><code>sudo chown [-R] owner[:group] {File|Directory}</code></p>\n<p>例如：还以<code>jdk-7u21-linux-i586.tar.gz</code>为例。属于用户 「hadoop」 ，组 「hadoop」 </p>\n<p>要想切换此文件所属的用户及组。可以使用命令。</p>\n<p><code>sudo chown root:root jdk-7u21-linux-i586.tar.gz</code></p>\n<h1 id=\"文件权限管理\"><a href=\"#文件权限管理\" class=\"headerlink\" title=\"文件权限管理\"></a>文件权限管理</h1><p>三种基本权限</p>\n<p>R           读         数值表示为4</p>\n<p>W          写         数值表示为2</p>\n<p>X           可执行  数值表示为1</p>\n<p><img src=\"http://images.cnitblog.com/blog/352072/201402/091549405142313.png\" alt=\"\"></p>\n<p>如图所示，<code>jdk-7u21-linux-i586.tar.gz</code>文件的权限为<code>-rw-rw-r--</code></p>\n<p><code>-rw-rw-r--</code>一共十个字符，分成四段。</p>\n<p>第一个字符『-』表示普通文件；这个位置还可能会出现“l”链接；“d”表示目录</p>\n<p>第二三四个字符『rw-』表示当前所属用户的权限。   所以用数值表示为4+2=6</p>\n<p>第五六七个字符『rw-』表示当前所属组的权限。     所以用数值表示为4+2=6</p>\n<p>第八九十个字符『r–』表示其他用户权限。        所以用数值表示为2</p>\n<p>所以操作此文件的权限用数值表示为662 </p>\n<h2 id=\"更改权限\"><a href=\"#更改权限\" class=\"headerlink\" title=\"更改权限\"></a>更改权限</h2><p><code>sudo chmod</code> 「u所属用户  g所属组  o其他用户  a所有用户]  [+增加权限  -减少权限]  [r  w  x」   目录名 </p>\n<p>例如：有一个文件filename，权限为 「-rw-r—-x」 ,将权限值改为 <code>-rwxrw-r-x</code> ，用数值表示为<code>765</code></p>\n<p><code>sudo chmod u+x g+w o+r  filename</code></p>\n<p>上面的例子可以用数值表示</p>\n<p><code>sudo chmod 765 filename</code></p>"},{"title":"LINUX 目录结构","date":"2016-09-21T17:35:04.000Z","_content":"\n# LINUX 目录结构\n装完Linux，首先需要弄清Linux 标准目录结构\n![](http://www.daniubiji.cn/wp-content/uploads/2015/02/06095713-85c1021200224bcc8c5ff0f2275260c5.png)\n/\n<!--more-->\n* root —?启动Linux时使用的一些核心文件。如操作系统内核、引导程序Grub等。\n* home —?存储普通用户的个人文件\n* ftp — 用户所有服务\n    * httpd\n    * samba\n    * user1\n    * user2\n* bin —?系统启动时需要的执行文件（二进制）\n* sbin —?可执行程序的目录，但大多存放涉及系统管理的命令。只有root权限才能执行\n* proc — 虚拟，存在linux内核镜像；保存所有内核参数以及系统配置信息\n    * 1 — 进程编号\n* usr — 用户目录，存放用户级的文件\n    * bin — 几乎所有用户所用命令，另外存在与/bin，/usr/local/bin\n    * sbin — 系统管理员命令，与用户相关，例如，大部分服务器程序\n    * include —??存放C/C++头文件的目录\n    * lib — 固定的程序数据\n    * local — 本地安装软件保存位置\n    * man — 手工生成的目录\n    * info — 信息文档\n    * doc — 不同包文档信息\n    * tmp\n    * X11R6 —??该目录用于保存运行X-Window所需的所有文件。该目录中还包含用于运行GUI要的配置文件和二进制文件。\n    * X386　— 功能同X11R6，X11 发行版5 的系统文件\n* boot — 引导加载器所需文件，系统所需图片保存于此\n* lib —?根文件系统目录下程序和核心模块的公共库\n    * modules — 可加载模块，系统崩溃后重启所需模块\n* dev —?设备文件目录\n* etc — 配置文件\n    * skel — home目录建立，该目录初始化\n    * sysconfig — 网络，时间，键盘等配置目录\n* var\n    * file\n    * lib — 该目录下的文件在系统运行时，会改变\n    * local — 安装在/usr/local的程序数据，变化的\n    * lock — 文件使用特定外设或文件，为其上锁，其他文件暂时不能访问\n    * log — 记录日志\n    * run — 系统运行合法信息\n    * spool —?打印机、邮件、代理服务器等假脱机目录\n    * tmp\n    * catman — 缓存目录\n* mnt —?临时用于挂载文件系统的地方。一般情况下这个目录是空的，而在我们将要挂载分区时在这个目录下建立目录，再将我们将要访问的设备挂载在这个目录上，这样我们就可访问文件了。\n* tmp — 临时文件目录，系统启动后的临时文件存放在/var/tmp\n* lost+found — 在文件系统修复时恢复的文件\n\n# /：\n根目录，一般根目录下只存放目录，不要存放文件，/etc、/bin、/dev、/lib、/sbin应该和根目录放置在一个分区中\n\n# /bin:/usr/bin:\n可执行二进制文件的目录，如常用的命令ls、tar、mv、cat等。\n\n# /boot：\n放置linux系统启动时用到的一些文件。/boot/vmlinuz为linux的内核文件，以及/boot/gurb。建议单独分区，分区大小100M即可\n\n# /dev：\n存放linux系统下的设备文件，访问该目录下某个文件，相当于访问某个设备，常用的是挂载光驱mount /dev/cdrom /mnt。\n\n# /etc：\n系统配置文件存放的目录，不建议在此目录下存放可执行文件，重要的配置文件有/etc/inittab、/etc/fstab、/etc/init.d、/etc/X11、/etc/sysconfig、/etc/xinetd.d修改配置文件之前记得备份。\n\n注：/etc/X11存放与x windows有关的设置。\n\n# /home：\n系统默认的用户家目录，新增用户账号时，用户的家目录都存放在此目录下，~表示当前用户的家目录，~test表示用户test的家目录。建议单独分区，并设置较大的磁盘空间，方便用户存放数据\n\n/lib:/usr/lib:/usr/local/lib：系统使用的函数库的目录，程序在执行过程中，需要调用一些额外的参数时需要函数库的协助，比较重要的目录为/lib/modules。\n\n# /lost+fount：\n系统异常产生错误时，会将一些遗失的片段放置于此目录下，通常这个目录会自动出现在装置目录下。如加载硬盘于/disk 中，此目录下就会自动产生目录/disk/lost+found\n\n# /mnt:/media：\n光盘默认挂载点，通常光盘挂载于/mnt/cdrom下，也不一定，可以选择任意位置进行挂载。\n\n# /opt：\n给主机额外安装软件所摆放的目录。如：FC4使用的Fedora 社群开发软件，如果想要自行安装新的KDE 桌面软件，可以将该软件安装在该目录下。以前的 Linux 系统中，习惯放置在 /usr/local 目录下\n\n# /proc：\n此目录的数据都在内存中，如系统核心，外部设备，网络状态，由于数据都存放于内存中，所以不占用磁盘空间，比较重要的目录有/proc/cpuinfo、/proc/interrupts、/proc/dma、/proc/ioports、/proc/net/*等\n\n# /root：\n系统管理员root的家目录，系统第一个启动的分区为/，所以最好将/root和/放置在一个分区下。\n\n# /sbin:/usr/sbin:/usr/local/sbin：\n放置系统管理员使用的可执行命令，如fdisk、shutdown、mount等。与/bin不同的是，这几个目录是给系统管理员root使用的命令，一般用户只能”查看”而不能设置和使用。\n\n# /tmp：\n一般用户或正在执行的程序临时存放文件的目录,任何人都可以访问,重要数据不可放置在此目录下\n\n# /srv：\n服务启动之后需要访问的数据目录，如www服务需要访问的网页数据存放在/srv/www内\n\n# /usr：\n应用程序存放目录，/usr/bin存放应用程序，/usr/share存放共享数据，/usr/lib存放不能直接运行的，却是许多程序运行所必需的一些函数库文件。/usr/local:存放软件升级包。/usr/share/doc:系统说明文件存放目录。/usr/share/man:?程序说明文件存放目录，使用 man ls时会查询/usr/share/man/man1/ls.1.gz的内容建议单独分区，设置较大的磁盘空间\n\n# /var：\n放置系统执行过程中经常变化的文件，如随时更改的日志文件/var/log，/var/log/message：所有的登录文件存放目录，/var/spool/mail：邮件存放的目录，/var/run:程序或服务启动后，其PID存放在该目录下。建议单独分区，设置较大的磁盘空间\n\n","source":"_posts/linuxDir.md","raw":"---\ntitle: LINUX 目录结构\ndate: 2016-09-22 01:35:04\ntags:\n    - Linux\ncategories: Linux\n---\n\n# LINUX 目录结构\n装完Linux，首先需要弄清Linux 标准目录结构\n![](http://www.daniubiji.cn/wp-content/uploads/2015/02/06095713-85c1021200224bcc8c5ff0f2275260c5.png)\n/\n<!--more-->\n* root —?启动Linux时使用的一些核心文件。如操作系统内核、引导程序Grub等。\n* home —?存储普通用户的个人文件\n* ftp — 用户所有服务\n    * httpd\n    * samba\n    * user1\n    * user2\n* bin —?系统启动时需要的执行文件（二进制）\n* sbin —?可执行程序的目录，但大多存放涉及系统管理的命令。只有root权限才能执行\n* proc — 虚拟，存在linux内核镜像；保存所有内核参数以及系统配置信息\n    * 1 — 进程编号\n* usr — 用户目录，存放用户级的文件\n    * bin — 几乎所有用户所用命令，另外存在与/bin，/usr/local/bin\n    * sbin — 系统管理员命令，与用户相关，例如，大部分服务器程序\n    * include —??存放C/C++头文件的目录\n    * lib — 固定的程序数据\n    * local — 本地安装软件保存位置\n    * man — 手工生成的目录\n    * info — 信息文档\n    * doc — 不同包文档信息\n    * tmp\n    * X11R6 —??该目录用于保存运行X-Window所需的所有文件。该目录中还包含用于运行GUI要的配置文件和二进制文件。\n    * X386　— 功能同X11R6，X11 发行版5 的系统文件\n* boot — 引导加载器所需文件，系统所需图片保存于此\n* lib —?根文件系统目录下程序和核心模块的公共库\n    * modules — 可加载模块，系统崩溃后重启所需模块\n* dev —?设备文件目录\n* etc — 配置文件\n    * skel — home目录建立，该目录初始化\n    * sysconfig — 网络，时间，键盘等配置目录\n* var\n    * file\n    * lib — 该目录下的文件在系统运行时，会改变\n    * local — 安装在/usr/local的程序数据，变化的\n    * lock — 文件使用特定外设或文件，为其上锁，其他文件暂时不能访问\n    * log — 记录日志\n    * run — 系统运行合法信息\n    * spool —?打印机、邮件、代理服务器等假脱机目录\n    * tmp\n    * catman — 缓存目录\n* mnt —?临时用于挂载文件系统的地方。一般情况下这个目录是空的，而在我们将要挂载分区时在这个目录下建立目录，再将我们将要访问的设备挂载在这个目录上，这样我们就可访问文件了。\n* tmp — 临时文件目录，系统启动后的临时文件存放在/var/tmp\n* lost+found — 在文件系统修复时恢复的文件\n\n# /：\n根目录，一般根目录下只存放目录，不要存放文件，/etc、/bin、/dev、/lib、/sbin应该和根目录放置在一个分区中\n\n# /bin:/usr/bin:\n可执行二进制文件的目录，如常用的命令ls、tar、mv、cat等。\n\n# /boot：\n放置linux系统启动时用到的一些文件。/boot/vmlinuz为linux的内核文件，以及/boot/gurb。建议单独分区，分区大小100M即可\n\n# /dev：\n存放linux系统下的设备文件，访问该目录下某个文件，相当于访问某个设备，常用的是挂载光驱mount /dev/cdrom /mnt。\n\n# /etc：\n系统配置文件存放的目录，不建议在此目录下存放可执行文件，重要的配置文件有/etc/inittab、/etc/fstab、/etc/init.d、/etc/X11、/etc/sysconfig、/etc/xinetd.d修改配置文件之前记得备份。\n\n注：/etc/X11存放与x windows有关的设置。\n\n# /home：\n系统默认的用户家目录，新增用户账号时，用户的家目录都存放在此目录下，~表示当前用户的家目录，~test表示用户test的家目录。建议单独分区，并设置较大的磁盘空间，方便用户存放数据\n\n/lib:/usr/lib:/usr/local/lib：系统使用的函数库的目录，程序在执行过程中，需要调用一些额外的参数时需要函数库的协助，比较重要的目录为/lib/modules。\n\n# /lost+fount：\n系统异常产生错误时，会将一些遗失的片段放置于此目录下，通常这个目录会自动出现在装置目录下。如加载硬盘于/disk 中，此目录下就会自动产生目录/disk/lost+found\n\n# /mnt:/media：\n光盘默认挂载点，通常光盘挂载于/mnt/cdrom下，也不一定，可以选择任意位置进行挂载。\n\n# /opt：\n给主机额外安装软件所摆放的目录。如：FC4使用的Fedora 社群开发软件，如果想要自行安装新的KDE 桌面软件，可以将该软件安装在该目录下。以前的 Linux 系统中，习惯放置在 /usr/local 目录下\n\n# /proc：\n此目录的数据都在内存中，如系统核心，外部设备，网络状态，由于数据都存放于内存中，所以不占用磁盘空间，比较重要的目录有/proc/cpuinfo、/proc/interrupts、/proc/dma、/proc/ioports、/proc/net/*等\n\n# /root：\n系统管理员root的家目录，系统第一个启动的分区为/，所以最好将/root和/放置在一个分区下。\n\n# /sbin:/usr/sbin:/usr/local/sbin：\n放置系统管理员使用的可执行命令，如fdisk、shutdown、mount等。与/bin不同的是，这几个目录是给系统管理员root使用的命令，一般用户只能”查看”而不能设置和使用。\n\n# /tmp：\n一般用户或正在执行的程序临时存放文件的目录,任何人都可以访问,重要数据不可放置在此目录下\n\n# /srv：\n服务启动之后需要访问的数据目录，如www服务需要访问的网页数据存放在/srv/www内\n\n# /usr：\n应用程序存放目录，/usr/bin存放应用程序，/usr/share存放共享数据，/usr/lib存放不能直接运行的，却是许多程序运行所必需的一些函数库文件。/usr/local:存放软件升级包。/usr/share/doc:系统说明文件存放目录。/usr/share/man:?程序说明文件存放目录，使用 man ls时会查询/usr/share/man/man1/ls.1.gz的内容建议单独分区，设置较大的磁盘空间\n\n# /var：\n放置系统执行过程中经常变化的文件，如随时更改的日志文件/var/log，/var/log/message：所有的登录文件存放目录，/var/spool/mail：邮件存放的目录，/var/run:程序或服务启动后，其PID存放在该目录下。建议单独分区，设置较大的磁盘空间\n\n","slug":"linuxDir","published":1,"updated":"2017-09-24T21:06:11.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj7zrohqs000ir1s6mmx5e3pj","content":"<h1 id=\"LINUX-目录结构\"><a href=\"#LINUX-目录结构\" class=\"headerlink\" title=\"LINUX 目录结构\"></a>LINUX 目录结构</h1><p>装完Linux，首先需要弄清Linux 标准目录结构<br><img src=\"http://www.daniubiji.cn/wp-content/uploads/2015/02/06095713-85c1021200224bcc8c5ff0f2275260c5.png\" alt=\"\"><br>/<br><a id=\"more\"></a></p>\n<ul>\n<li>root —?启动Linux时使用的一些核心文件。如操作系统内核、引导程序Grub等。</li>\n<li>home —?存储普通用户的个人文件</li>\n<li>ftp — 用户所有服务<ul>\n<li>httpd</li>\n<li>samba</li>\n<li>user1</li>\n<li>user2</li>\n</ul>\n</li>\n<li>bin —?系统启动时需要的执行文件（二进制）</li>\n<li>sbin —?可执行程序的目录，但大多存放涉及系统管理的命令。只有root权限才能执行</li>\n<li>proc — 虚拟，存在linux内核镜像；保存所有内核参数以及系统配置信息<ul>\n<li>1 — 进程编号</li>\n</ul>\n</li>\n<li>usr — 用户目录，存放用户级的文件<ul>\n<li>bin — 几乎所有用户所用命令，另外存在与/bin，/usr/local/bin</li>\n<li>sbin — 系统管理员命令，与用户相关，例如，大部分服务器程序</li>\n<li>include —??存放C/C++头文件的目录</li>\n<li>lib — 固定的程序数据</li>\n<li>local — 本地安装软件保存位置</li>\n<li>man — 手工生成的目录</li>\n<li>info — 信息文档</li>\n<li>doc — 不同包文档信息</li>\n<li>tmp</li>\n<li>X11R6 —??该目录用于保存运行X-Window所需的所有文件。该目录中还包含用于运行GUI要的配置文件和二进制文件。</li>\n<li>X386　— 功能同X11R6，X11 发行版5 的系统文件</li>\n</ul>\n</li>\n<li>boot — 引导加载器所需文件，系统所需图片保存于此</li>\n<li>lib —?根文件系统目录下程序和核心模块的公共库<ul>\n<li>modules — 可加载模块，系统崩溃后重启所需模块</li>\n</ul>\n</li>\n<li>dev —?设备文件目录</li>\n<li>etc — 配置文件<ul>\n<li>skel — home目录建立，该目录初始化</li>\n<li>sysconfig — 网络，时间，键盘等配置目录</li>\n</ul>\n</li>\n<li>var<ul>\n<li>file</li>\n<li>lib — 该目录下的文件在系统运行时，会改变</li>\n<li>local — 安装在/usr/local的程序数据，变化的</li>\n<li>lock — 文件使用特定外设或文件，为其上锁，其他文件暂时不能访问</li>\n<li>log — 记录日志</li>\n<li>run — 系统运行合法信息</li>\n<li>spool —?打印机、邮件、代理服务器等假脱机目录</li>\n<li>tmp</li>\n<li>catman — 缓存目录</li>\n</ul>\n</li>\n<li>mnt —?临时用于挂载文件系统的地方。一般情况下这个目录是空的，而在我们将要挂载分区时在这个目录下建立目录，再将我们将要访问的设备挂载在这个目录上，这样我们就可访问文件了。</li>\n<li>tmp — 临时文件目录，系统启动后的临时文件存放在/var/tmp</li>\n<li>lost+found — 在文件系统修复时恢复的文件</li>\n</ul>\n<h1 id=\"：\"><a href=\"#：\" class=\"headerlink\" title=\"/：\"></a>/：</h1><p>根目录，一般根目录下只存放目录，不要存放文件，/etc、/bin、/dev、/lib、/sbin应该和根目录放置在一个分区中</p>\n<h1 id=\"bin-usr-bin\"><a href=\"#bin-usr-bin\" class=\"headerlink\" title=\"/bin:/usr/bin:\"></a>/bin:/usr/bin:</h1><p>可执行二进制文件的目录，如常用的命令ls、tar、mv、cat等。</p>\n<h1 id=\"boot：\"><a href=\"#boot：\" class=\"headerlink\" title=\"/boot：\"></a>/boot：</h1><p>放置linux系统启动时用到的一些文件。/boot/vmlinuz为linux的内核文件，以及/boot/gurb。建议单独分区，分区大小100M即可</p>\n<h1 id=\"dev：\"><a href=\"#dev：\" class=\"headerlink\" title=\"/dev：\"></a>/dev：</h1><p>存放linux系统下的设备文件，访问该目录下某个文件，相当于访问某个设备，常用的是挂载光驱mount /dev/cdrom /mnt。</p>\n<h1 id=\"etc：\"><a href=\"#etc：\" class=\"headerlink\" title=\"/etc：\"></a>/etc：</h1><p>系统配置文件存放的目录，不建议在此目录下存放可执行文件，重要的配置文件有/etc/inittab、/etc/fstab、/etc/init.d、/etc/X11、/etc/sysconfig、/etc/xinetd.d修改配置文件之前记得备份。</p>\n<p>注：/etc/X11存放与x windows有关的设置。</p>\n<h1 id=\"home：\"><a href=\"#home：\" class=\"headerlink\" title=\"/home：\"></a>/home：</h1><p>系统默认的用户家目录，新增用户账号时，用户的家目录都存放在此目录下，~表示当前用户的家目录，~test表示用户test的家目录。建议单独分区，并设置较大的磁盘空间，方便用户存放数据</p>\n<p>/lib:/usr/lib:/usr/local/lib：系统使用的函数库的目录，程序在执行过程中，需要调用一些额外的参数时需要函数库的协助，比较重要的目录为/lib/modules。</p>\n<h1 id=\"lost-fount：\"><a href=\"#lost-fount：\" class=\"headerlink\" title=\"/lost+fount：\"></a>/lost+fount：</h1><p>系统异常产生错误时，会将一些遗失的片段放置于此目录下，通常这个目录会自动出现在装置目录下。如加载硬盘于/disk 中，此目录下就会自动产生目录/disk/lost+found</p>\n<h1 id=\"mnt-media：\"><a href=\"#mnt-media：\" class=\"headerlink\" title=\"/mnt:/media：\"></a>/mnt:/media：</h1><p>光盘默认挂载点，通常光盘挂载于/mnt/cdrom下，也不一定，可以选择任意位置进行挂载。</p>\n<h1 id=\"opt：\"><a href=\"#opt：\" class=\"headerlink\" title=\"/opt：\"></a>/opt：</h1><p>给主机额外安装软件所摆放的目录。如：FC4使用的Fedora 社群开发软件，如果想要自行安装新的KDE 桌面软件，可以将该软件安装在该目录下。以前的 Linux 系统中，习惯放置在 /usr/local 目录下</p>\n<h1 id=\"proc：\"><a href=\"#proc：\" class=\"headerlink\" title=\"/proc：\"></a>/proc：</h1><p>此目录的数据都在内存中，如系统核心，外部设备，网络状态，由于数据都存放于内存中，所以不占用磁盘空间，比较重要的目录有/proc/cpuinfo、/proc/interrupts、/proc/dma、/proc/ioports、/proc/net/*等</p>\n<h1 id=\"root：\"><a href=\"#root：\" class=\"headerlink\" title=\"/root：\"></a>/root：</h1><p>系统管理员root的家目录，系统第一个启动的分区为/，所以最好将/root和/放置在一个分区下。</p>\n<h1 id=\"sbin-usr-sbin-usr-local-sbin：\"><a href=\"#sbin-usr-sbin-usr-local-sbin：\" class=\"headerlink\" title=\"/sbin:/usr/sbin:/usr/local/sbin：\"></a>/sbin:/usr/sbin:/usr/local/sbin：</h1><p>放置系统管理员使用的可执行命令，如fdisk、shutdown、mount等。与/bin不同的是，这几个目录是给系统管理员root使用的命令，一般用户只能”查看”而不能设置和使用。</p>\n<h1 id=\"tmp：\"><a href=\"#tmp：\" class=\"headerlink\" title=\"/tmp：\"></a>/tmp：</h1><p>一般用户或正在执行的程序临时存放文件的目录,任何人都可以访问,重要数据不可放置在此目录下</p>\n<h1 id=\"srv：\"><a href=\"#srv：\" class=\"headerlink\" title=\"/srv：\"></a>/srv：</h1><p>服务启动之后需要访问的数据目录，如www服务需要访问的网页数据存放在/srv/www内</p>\n<h1 id=\"usr：\"><a href=\"#usr：\" class=\"headerlink\" title=\"/usr：\"></a>/usr：</h1><p>应用程序存放目录，/usr/bin存放应用程序，/usr/share存放共享数据，/usr/lib存放不能直接运行的，却是许多程序运行所必需的一些函数库文件。/usr/local:存放软件升级包。/usr/share/doc:系统说明文件存放目录。/usr/share/man:?程序说明文件存放目录，使用 man ls时会查询/usr/share/man/man1/ls.1.gz的内容建议单独分区，设置较大的磁盘空间</p>\n<h1 id=\"var：\"><a href=\"#var：\" class=\"headerlink\" title=\"/var：\"></a>/var：</h1><p>放置系统执行过程中经常变化的文件，如随时更改的日志文件/var/log，/var/log/message：所有的登录文件存放目录，/var/spool/mail：邮件存放的目录，/var/run:程序或服务启动后，其PID存放在该目录下。建议单独分区，设置较大的磁盘空间</p>\n","site":{"data":{}},"excerpt":"<h1 id=\"LINUX-目录结构\"><a href=\"#LINUX-目录结构\" class=\"headerlink\" title=\"LINUX 目录结构\"></a>LINUX 目录结构</h1><p>装完Linux，首先需要弄清Linux 标准目录结构<br><img src=\"http://www.daniubiji.cn/wp-content/uploads/2015/02/06095713-85c1021200224bcc8c5ff0f2275260c5.png\" alt=\"\"><br>/<br>","more":"</p>\n<ul>\n<li>root —?启动Linux时使用的一些核心文件。如操作系统内核、引导程序Grub等。</li>\n<li>home —?存储普通用户的个人文件</li>\n<li>ftp — 用户所有服务<ul>\n<li>httpd</li>\n<li>samba</li>\n<li>user1</li>\n<li>user2</li>\n</ul>\n</li>\n<li>bin —?系统启动时需要的执行文件（二进制）</li>\n<li>sbin —?可执行程序的目录，但大多存放涉及系统管理的命令。只有root权限才能执行</li>\n<li>proc — 虚拟，存在linux内核镜像；保存所有内核参数以及系统配置信息<ul>\n<li>1 — 进程编号</li>\n</ul>\n</li>\n<li>usr — 用户目录，存放用户级的文件<ul>\n<li>bin — 几乎所有用户所用命令，另外存在与/bin，/usr/local/bin</li>\n<li>sbin — 系统管理员命令，与用户相关，例如，大部分服务器程序</li>\n<li>include —??存放C/C++头文件的目录</li>\n<li>lib — 固定的程序数据</li>\n<li>local — 本地安装软件保存位置</li>\n<li>man — 手工生成的目录</li>\n<li>info — 信息文档</li>\n<li>doc — 不同包文档信息</li>\n<li>tmp</li>\n<li>X11R6 —??该目录用于保存运行X-Window所需的所有文件。该目录中还包含用于运行GUI要的配置文件和二进制文件。</li>\n<li>X386　— 功能同X11R6，X11 发行版5 的系统文件</li>\n</ul>\n</li>\n<li>boot — 引导加载器所需文件，系统所需图片保存于此</li>\n<li>lib —?根文件系统目录下程序和核心模块的公共库<ul>\n<li>modules — 可加载模块，系统崩溃后重启所需模块</li>\n</ul>\n</li>\n<li>dev —?设备文件目录</li>\n<li>etc — 配置文件<ul>\n<li>skel — home目录建立，该目录初始化</li>\n<li>sysconfig — 网络，时间，键盘等配置目录</li>\n</ul>\n</li>\n<li>var<ul>\n<li>file</li>\n<li>lib — 该目录下的文件在系统运行时，会改变</li>\n<li>local — 安装在/usr/local的程序数据，变化的</li>\n<li>lock — 文件使用特定外设或文件，为其上锁，其他文件暂时不能访问</li>\n<li>log — 记录日志</li>\n<li>run — 系统运行合法信息</li>\n<li>spool —?打印机、邮件、代理服务器等假脱机目录</li>\n<li>tmp</li>\n<li>catman — 缓存目录</li>\n</ul>\n</li>\n<li>mnt —?临时用于挂载文件系统的地方。一般情况下这个目录是空的，而在我们将要挂载分区时在这个目录下建立目录，再将我们将要访问的设备挂载在这个目录上，这样我们就可访问文件了。</li>\n<li>tmp — 临时文件目录，系统启动后的临时文件存放在/var/tmp</li>\n<li>lost+found — 在文件系统修复时恢复的文件</li>\n</ul>\n<h1 id=\"：\"><a href=\"#：\" class=\"headerlink\" title=\"/：\"></a>/：</h1><p>根目录，一般根目录下只存放目录，不要存放文件，/etc、/bin、/dev、/lib、/sbin应该和根目录放置在一个分区中</p>\n<h1 id=\"bin-usr-bin\"><a href=\"#bin-usr-bin\" class=\"headerlink\" title=\"/bin:/usr/bin:\"></a>/bin:/usr/bin:</h1><p>可执行二进制文件的目录，如常用的命令ls、tar、mv、cat等。</p>\n<h1 id=\"boot：\"><a href=\"#boot：\" class=\"headerlink\" title=\"/boot：\"></a>/boot：</h1><p>放置linux系统启动时用到的一些文件。/boot/vmlinuz为linux的内核文件，以及/boot/gurb。建议单独分区，分区大小100M即可</p>\n<h1 id=\"dev：\"><a href=\"#dev：\" class=\"headerlink\" title=\"/dev：\"></a>/dev：</h1><p>存放linux系统下的设备文件，访问该目录下某个文件，相当于访问某个设备，常用的是挂载光驱mount /dev/cdrom /mnt。</p>\n<h1 id=\"etc：\"><a href=\"#etc：\" class=\"headerlink\" title=\"/etc：\"></a>/etc：</h1><p>系统配置文件存放的目录，不建议在此目录下存放可执行文件，重要的配置文件有/etc/inittab、/etc/fstab、/etc/init.d、/etc/X11、/etc/sysconfig、/etc/xinetd.d修改配置文件之前记得备份。</p>\n<p>注：/etc/X11存放与x windows有关的设置。</p>\n<h1 id=\"home：\"><a href=\"#home：\" class=\"headerlink\" title=\"/home：\"></a>/home：</h1><p>系统默认的用户家目录，新增用户账号时，用户的家目录都存放在此目录下，~表示当前用户的家目录，~test表示用户test的家目录。建议单独分区，并设置较大的磁盘空间，方便用户存放数据</p>\n<p>/lib:/usr/lib:/usr/local/lib：系统使用的函数库的目录，程序在执行过程中，需要调用一些额外的参数时需要函数库的协助，比较重要的目录为/lib/modules。</p>\n<h1 id=\"lost-fount：\"><a href=\"#lost-fount：\" class=\"headerlink\" title=\"/lost+fount：\"></a>/lost+fount：</h1><p>系统异常产生错误时，会将一些遗失的片段放置于此目录下，通常这个目录会自动出现在装置目录下。如加载硬盘于/disk 中，此目录下就会自动产生目录/disk/lost+found</p>\n<h1 id=\"mnt-media：\"><a href=\"#mnt-media：\" class=\"headerlink\" title=\"/mnt:/media：\"></a>/mnt:/media：</h1><p>光盘默认挂载点，通常光盘挂载于/mnt/cdrom下，也不一定，可以选择任意位置进行挂载。</p>\n<h1 id=\"opt：\"><a href=\"#opt：\" class=\"headerlink\" title=\"/opt：\"></a>/opt：</h1><p>给主机额外安装软件所摆放的目录。如：FC4使用的Fedora 社群开发软件，如果想要自行安装新的KDE 桌面软件，可以将该软件安装在该目录下。以前的 Linux 系统中，习惯放置在 /usr/local 目录下</p>\n<h1 id=\"proc：\"><a href=\"#proc：\" class=\"headerlink\" title=\"/proc：\"></a>/proc：</h1><p>此目录的数据都在内存中，如系统核心，外部设备，网络状态，由于数据都存放于内存中，所以不占用磁盘空间，比较重要的目录有/proc/cpuinfo、/proc/interrupts、/proc/dma、/proc/ioports、/proc/net/*等</p>\n<h1 id=\"root：\"><a href=\"#root：\" class=\"headerlink\" title=\"/root：\"></a>/root：</h1><p>系统管理员root的家目录，系统第一个启动的分区为/，所以最好将/root和/放置在一个分区下。</p>\n<h1 id=\"sbin-usr-sbin-usr-local-sbin：\"><a href=\"#sbin-usr-sbin-usr-local-sbin：\" class=\"headerlink\" title=\"/sbin:/usr/sbin:/usr/local/sbin：\"></a>/sbin:/usr/sbin:/usr/local/sbin：</h1><p>放置系统管理员使用的可执行命令，如fdisk、shutdown、mount等。与/bin不同的是，这几个目录是给系统管理员root使用的命令，一般用户只能”查看”而不能设置和使用。</p>\n<h1 id=\"tmp：\"><a href=\"#tmp：\" class=\"headerlink\" title=\"/tmp：\"></a>/tmp：</h1><p>一般用户或正在执行的程序临时存放文件的目录,任何人都可以访问,重要数据不可放置在此目录下</p>\n<h1 id=\"srv：\"><a href=\"#srv：\" class=\"headerlink\" title=\"/srv：\"></a>/srv：</h1><p>服务启动之后需要访问的数据目录，如www服务需要访问的网页数据存放在/srv/www内</p>\n<h1 id=\"usr：\"><a href=\"#usr：\" class=\"headerlink\" title=\"/usr：\"></a>/usr：</h1><p>应用程序存放目录，/usr/bin存放应用程序，/usr/share存放共享数据，/usr/lib存放不能直接运行的，却是许多程序运行所必需的一些函数库文件。/usr/local:存放软件升级包。/usr/share/doc:系统说明文件存放目录。/usr/share/man:?程序说明文件存放目录，使用 man ls时会查询/usr/share/man/man1/ls.1.gz的内容建议单独分区，设置较大的磁盘空间</p>\n<h1 id=\"var：\"><a href=\"#var：\" class=\"headerlink\" title=\"/var：\"></a>/var：</h1><p>放置系统执行过程中经常变化的文件，如随时更改的日志文件/var/log，/var/log/message：所有的登录文件存放目录，/var/spool/mail：邮件存放的目录，/var/run:程序或服务启动后，其PID存放在该目录下。建议单独分区，设置较大的磁盘空间</p>"},{"title":"Linux LNMP服务器搭建教程","date":"2016-09-20T17:30:14.000Z","_content":"# 安装NGINX\n## 下载nginx源码包\n1.官网下载地址：http://nginx.org/en/download.html\n\n2.通过wget|apt-get：wget http://nginx.org/download/nginx-1.13.0.tar.gz\n\n3.[点我下载](http://nginx.org/download/nginx-1.13.0.tar.gz)\n\n## 解压安装包并安装\n\n```\ntar -xzf nginx-1.13.0.tar.gz\n\ncd nginx-1.13.0\n\nyum -y install pcre-devel openssl openssl-devel\n\n./configure - -prefix=/usr/local/nginx \n\nmake && make install\n```\n\n可以参看这篇文章：http://www.linuxidc.com/Linux/2016-03/129303.htm  \n执行完后会得到这样表示安装成功\n![](media/14955282000741/14955289656087.jpg)\n这里提示安装路径为:/usr/local/nginx\n这时候访问网站是没有任何效果的因为服务还没有启动：\n## 启动NGINX\n\n```\nnginx -c /usr/local/nginx/conf/nginx.conf\n```\n\n## 停止NGINX\n通过进程\n\n> ```\n查看进程     ：   ps -ef | grep nginx\n快速停止Nginx：   kill -QUIT 主进程号\n            或\n强制停止Nginx：   kill -TERM 主进程号\n```\n\n## 重启NGINX\n如果更改了配置就要重启Nginx，要先关闭Nginx再打开？不是的，可以向Nginx 发送信号，平滑重启。\n平滑重启命令：\n\n```\nkill -HUP 住进称号或进程号文件路径\n```\n\n或者使用\n\n```\n/usr/nginx/sbin/nginx -s reload\n```\n\n##nginx只能访问主页其他页面404问题\n\n```\nlocation / {\n  root   D:/WWW/Lifes/public;\n  index  index.html index.htm index.php;\n\n  try_files $uri $uri/ /index.php?$query_string;\n  if (!-e $request_filename){  \n      rewrite ^/(.*) /index.php last;  \n  } \n}\n```\n\n----------------------------------华丽的分割线-----------------------------------\n\n**⚠️注意**，修改了配置文件后最好先检查一下修改过的配置文件是否正 确，以免重启后Nginx出现错误影响服务器稳定运行。判断Nginx配置是否正确命令如下：\n\n```\nnginx -t -c /usr/nginx/conf/nginx.conf\n```\n\n或者\n\n```\n/usr/nginx/sbin/nginx -t\n```\n\n# 安装PHP\n## 下载php\n[下载php url在php官网中复制]\n`wget url`\n\n[安装编译器 依赖工具]\n`yum install  gcc gcc-c++ libxml2-devel`\t\n下载PHP 选择相对于的版本\n[PHP官网下载](http://www.php.net/downloads.php)\n注意：Linux 下载失败是下载的URL被加密了需要修改下URL方法如下：\n1.先将文件加入下载列表\n2.打开下载列表找到对应PHP文件-》右击拷贝地址将它粘贴到浏览器地址栏中不要回车，你会看到类似这样的链接\n`http://124.205.69.131/files/2088000005848DB0/cn2.php.net/distributions/php-7.0.19.tar.gz`  \n将URL中的 `124.205.69.131/files/2088000005848DB0/` 删除掉，拷贝URL 即可在 「Linux」 中使用 「wget」 下载了。\n\n\n[php文件夹下编译php \"--enable-fpm\"：nginx需要它解析php]\n./configure --prefix=/usr/local/php7 --enable-fpm \n\n> --with-mysqli=/usr/local/mysql/bin/mysql_config  指定mysqli位置\n  --with-mysql=/usr/local/mysql/  指定mysql位置\n  --with-config-file-path=/usr/local/php/etc/  指定配置文件目录\n\n\n\n[编译&安装]\n->make && make install\t\n\n拷贝文件：\n1.进入 `/usr/local/php/etc/` 目录\n\n```\ncp php-fpm.conf.default php-fpm.conf\ncd php-fpm.d\ncp www.conf.default www.conf\ncd /usr/local/php/sbin\n./php-fpm\n```\n\n全局PHP ：\nexport PATH=$PATH:/usr/local/php7/bin   \n## 安装php\n## 启动\n## 停止\n## 重启\n/usr/local/php/sbin/php-fpm &\n## 扩展问题\n`/php/bin/phpize` 报错\n![](media/14955282000741/14966714379954.jpg)\n\n```\nwget http://ftp.gnu.org/gnu/m4/m4-1.4.9.tar.gz\ntar -zvxf m4-1.4.9.tar.gz\ncd m4-1.4.9/\n./configure && make && make install\n\ncd ../\n\nwget http://ftp.gnu.org/gnu/autoconf/autoconf-2.62.tar.gz\ntar -zvxf autoconf-2.62.tar.gz\ncd autoconf-2.62/\n./configure && make && make install\n```\n### 安装步骤\n1.进入PHP源码包「etc」 目录下 进入相应的扩展目录\n\n```\n/usr/local/php/bin/phpize   #这里为你自己的phpize路径，如果找不到，使用whereis phpize查找\n\n#执行后，发现错误 无法找到config.m4 ，config0.m4就是config.m4。直接重命名\n\nmv config0.m4 config.m4\n\n/usr/local/php/bin/phpize\n\n./configure --with-openssl --with-php-config=/usr/local/php/bin/php-config\n\nmake\n\nmake install\n```\n安装完成后，会返回一个 .so 文件（openssl.so）的目录。在此目录下把 openssl.so 文件拷贝到你在php.ini 中指定的 extension_dir 下（在php.ini文件中查找：extension_dir =），我这里的目录是 \n`/usr/local/php/lib/php/extensions`\n编辑php.ini文件，在文件添加\n\n```\nextension=openssl.so\n```\n\n重启Apache/Nginx即可\n\n# mysql的安装\n首先使用yum或apt-get下载依赖管理：\n\n```\nyum -y install gcc gcc-c++ ncurses-devel cmake\n```\n⚠️注意：MySQL从5.5开始，使用cmake 进行编译设置；因此，我们还要安装cmake编译工具\n\n装MySQL需要依赖 Boost  的C++扩展，而且只能是 1.59.0 版本\nBoost 下载地址： http://www.boost.org/users/history  ；\n选择1.59.0版本下载，在编译是填写相应参数，指定Boost源码位置即可,我这里放装到了 /usr/local/ 下；\n\n```\nwget https://jaist.dl.sourceforge.net/project/boost/boost/1.59.0/boost_1_59_0.tar.gz\n\nboost_1_59_0.tar.gz\n\ntar xzvf boost_1_59_0.tar.gz      # 解压扩展\n\nmv boost_1_59_0 /usr/local/boost     # 将扩展源码剪切到/usr/local下\n```\n## 下载mysql\n前往[mysql官网](https://dev.mysql.com/downloads/mysql/)下载linux通用版本源码包。或 [点我下载mysql-5.7.18源码版本](https://dev.mysql.com/get/Downloads/MySQL-5.7/mysql-5.7.18.tar.gz)\n\n## 安装mysql\n\n```\nwget https://dev.mysql.com/get/Downloads/MySQL-5.7/mysql-5.7.18.tar.gz\n\ntar xzvf mysql-5.7.18.tar.gz\n\ncd mysql-5.7.18     # 切换目录到刚解压的文件夹中\n\ncmake  -DCMAKE_INSTALL_PREFIX=/usr/local/mysql  -DMYSQL_DATADIR=/usr/local/mysql/data  -DMYSQL_UNIX_ADDR=/tmp/mysql.sock  -DDEFAULT_CHARSET=utf8  -DDEFAULT_COLLATION=utf8_general_ci -DMYSQL_TCP_PORT=3306 -DWITH_BOOST=/usr/local/boost\n\nmake && make install.  #此过程很漫长，请耐心等待\n```\n⚠️注意：这里的 -DWITH_BOOST 要改成你的路径否则会出错 我这里路径是 /usr/local/boost\n\n> **cmake 参数解释**：\n-DCMAKE_INSTALL_PREFIX： 指定安装路径\n-DMYSQL_DATADIR ： 指定数据存放路径\n-DMYSQL_UNIX_ADDR ：指定套间字路径\n-DDEFAULT_CHARSET ： 设置字符集\n-DDEFAULT_COLLATION ： 设置字符校验集\n-DWITH_BOOST ： 指定Boost扩展源码路径  \n-DMYSQL_USER=mysql ： 指定mysql运行用户 \n-DMYSQL_TCP_PORT=3306 ：指定mysql端口\n-DWITH_INNOBASE_STORAGE_ENGINE=1 ： 安装innodb存储引擎\n-DWITH_MEMORY_STORAGE_ENGINE=1 ： 安装memory存储引擎\n-DWITH_READLINE=1 ： 支持readline库\n-DENABLED_LOCAL_INFILE=1 ： 启用加载本地数据\n\nmysql安装成功后查看/etc/my.cnf 文件是否存在，如果没有的话执行以下命令有的话则跳过。\n\n```\ncp /usr/local/mysql/support-files/my-default.cnf /etc/my.cnf   #复制配置文件\n```\n\n修改配置文件 /etc/my.cnf  修改内容如下\n\n```\nbasedir = /usr/local/mysql/         # 这里是mysql的安装路径\n\ndatadir = /usr/local/mysql/data     # 这里是 mysql的数据存放路径\n\nsocket = /tmp/mysql.sock            # 这个我忘了\n```\n\n\n添加mysql用户和创建数据存放目录，并修改权限\n\n```\ngroupadd  mysql\n\nuseradd -r -g mysql -s /bin/false mysql  # 创建不可登录用户\n\nmkdir -p /usr/local/mysql/data\n\ncd /usr/local/mysql  #切换至安装目录\n\nbin/mysqld --defaults-file=/etc/my.cnf --initialize --user=mysql   # 初始化数据库\n\nchown -R mysql:mysql /usr/local/mysql # 修改权限\n```\n\n>初始化数据库命令参数解释：\n--defaults-file ： 制定MySQL配置文件路径\n--initialize ： 初始化随机密码，注意，初始化的密码是一个过期密码，登录后需要修改密码\n--user： 指定账户\n上一个命令执行完之后，会在命令提示符的最后给出随机密码，\n一定记住 将此密码记录下来\n\n到这里mysql 安装完毕接下来让我们启动mysql吧！\n\n```\ncd /usr/local/mysql  #切换到mysql安装目录\n\nsupport-files/mysql.server start  # 启动mysql 服务器\n\nbin/mysql -u root -p    \n\nEnter password：   # 输入刚刚的随机密码链接数据库\n```\n\n进入数据库必须修改密码否侧无法使用\n\n```\nALTER USER 'root'@'localhost' IDENTIFIED BY  'NewPassWord';\n```\n\n⚠️注意：这里修改密码必须且只能使用「ALTER」 命令修改\n\n## 启动\n```\ncd /usr/local/mysql/support-files\ncp mysql.server /etc/init.d/mysqld  #添加mysql启动命令\ncd /usr/local/mysql/bin\nvim /root/.bash_profile #将mysql添加到系统的环境变量里\nPATH=$PATH:$HOME/bin:/usr/local/lnmp/mysql/bin\nsource /root/.bash_profile  #刷新环境变量文件\necho $PATH                  #查看mysql添加到环境变量\nwhich mysql        #测试\n/usr/local/lnmp/mysql/bin/mysql\n```\n\n## 停止\n## 重启\n\n# NGINX全局设置\n\n```\nvi /etc/init.d/nginx  (输入下面的代码)\n\n#!/bin/bash\n# nginx Startup script for the Nginx HTTP Server\n# it is v.0.0.2 version.\n# chkconfig: - 85 15\n# description: Nginx is a high-performance web and proxy server.\n#              It has a lot of features, but it's not for everyone.\n# processname: nginx\n# pidfile: /var/run/nginx.pid\n# config: /usr/local/nginx/conf/nginx.conf\n\n#nginx程序路径\nnginxd=/usr/local/nginx/sbin/nginx\n\n#nginx配置文件路径\nnginx_config=/usr/local/nginx/conf/nginx.conf\n\nnginx pid文件的路径，可以在nginx的配置文件中找到\nnginx_pid=/var/run/nginx.pid\nRETVAL=0\nprog=\"nginx\"\n# Source function library.\n. /etc/rc.d/init.d/functions\n# Source networking configuration.\n. /etc/sysconfig/network\n# Check that networking is up.\n[ ${NETWORKING} = \"no\" ] && exit 0\n[ -x $nginxd ] || exit 0\n# Start nginx daemons functions.\nstart() {\nif [ -e $nginx_pid ];then\n   echo \"nginx already running....\"\n   exit 1\nfi\n   echo -n $\"Starting $prog: \"\n   daemon $nginxd -c ${nginx_config}\n   RETVAL=$?\n   echo\n   [ $RETVAL = 0 ] && touch /var/lock/subsys/nginx\n   return $RETVAL\n}\n# Stop nginx daemons functions.\nstop() {\n        echo -n $\"Stopping $prog: \"\n        killproc $nginxd\n        RETVAL=$?\n        echo\n        [ $RETVAL = 0 ] && rm -f /var/lock/subsys/nginx /var/run/nginx.pid\n}\n# reload nginx service functions.\nreload() {\n    echo -n $\"Reloading $prog: \"\n    #kill -HUP `cat ${nginx_pid}`\n    killproc $nginxd -HUP\n    RETVAL=$?\n    echo\n}\n# See how we were called.\ncase \"$1\" in\nstart)\n        start\n        ;;\nstop)\n        stop\n        ;;\nreload)\n        reload\n        ;;\nrestart)\n        stop\n        start\n        ;;\nstatus)\n        status $prog\n        RETVAL=$?\n        ;;\n*)\n        echo $\"Usage: $prog {start|stop|restart|reload|status|help}\"\n        exit 1\nesac\nexit $RETVAL\n```\n\n同样的修改了nginx的配置文件nginx.conf，也可以使用上面的命令重新加载新的配置文件并运行，可以将此命令加入到rc.local文件中，这样开机的时候nginx就默认启动了\n\n在 rc.local 加入一行如下代码： \n\n```\nvi /etc/rc.local \n\n/etc/init.d/nginx start\n```\n\n保存并退出，下次重启会生效。\n\n## 将nginx添加为系统服务\n\n```\nchkconfig --add nginx\n\nchkconfig nginx on\n```\n\n对于其他服务也同样适用，比如Mysql,php-fpm等等\n\n# Laravel 安装\n下载composer [官网下载地址](https://getcomposer.org/download/)\n\n```\nphp -r \"copy('https://getcomposer.org/installer', 'composer-setup.php');\"\n\nphp -r \"if (hash_file('SHA384', 'composer-setup.php') === '669656bab3166a7aff8a7506b8cb2d1c292f042046c5a994c43155c0be6190fa0355160742ab2e1c88d40d5be660b410') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;\"\n```\n\n```\nphp composer-setup.php\n\nphp -r \"unlink('composer-setup.php');\"\n```\n\n上述命令执行完毕后当前目录会有一个名为 「composer.par」 文件\n\n给文件可执行权限并剪切到 `/usr/local/bin/` 目录下重命名为 「composer」\n\n```\nchmod +x composer.pre\nmv composer.pre /usr/local/bin/composer\n```\n\n现在可以全局运行composr 命令 ，如果不行则运行一下命令；\n\n```\nvim /etc/profile\n\nexport PATH=\"$PATH:/usr/local/bin/\"\n```\n\n`Esc    :wq` 保存\n\n\n## laravel安装\n>首先，使用 Composer 下载 Laravel 安装包：\n\n```\ncomposer global require \"laravel/installer\"\n```\n\n注意：下载速度慢可以使用下面镜像地址 打开命令行窗口（windows用户）或控制台（Linux、Mac 用户）并执行如下命令：\n`composer config -g repo.packagist composer https://packagist.phpcomposer.com`\n\n>将 `~/.composer/vendor/bin` 路径加到 PATH,只有这样系统才能找到 `laravel` 的执行文件,安装完成，就可以使用 `laravel new` 命令在指定目录创建一个新的 Laravel 项目.\n\n\n```\nvim  ~/.bashrc\n\nalias laravel='~/.composer/vendor/bin/laravel'  \n\nsource ~/.bashrc\n\nchmod -R +x  /root/.composer/vendor/laravel/    #增加Laravel执行权限\n```\n\n开始你的Laravel的旅程吧～。\n\n>执行遇到`/usr/bin/env: php: No such file or directory` 怎么办？\n主要是php安装文件不在 `/usr/local/bin` 。安装在 `/usr/local/php`中\n\n找到php的可执行文件，`/usr/local/php5513/bin/php`\n\n\n`ln -s /usr/local/php5513/bin/php /usr/local/bin/php`\n\n\n把可执行文件连接过去就可以了。\n\n⚠️注意：下载laravel项目访问时候会出现空白页面是因为「bootstrap」 和 「storage」需要读写权限 \n\n```\nchmod -R 777 bootstrap/\n\nchmod -R 777 storage/\n```\n\n\n","source":"_posts/lnmpInstall.md","raw":"---\ntitle: Linux LNMP服务器搭建教程\ndate: 2016-09-21 01:30:14\ntags:\n    - Linux\n    - LNMP\ncategories: 服务器\n---\n# 安装NGINX\n## 下载nginx源码包\n1.官网下载地址：http://nginx.org/en/download.html\n\n2.通过wget|apt-get：wget http://nginx.org/download/nginx-1.13.0.tar.gz\n\n3.[点我下载](http://nginx.org/download/nginx-1.13.0.tar.gz)\n\n## 解压安装包并安装\n\n```\ntar -xzf nginx-1.13.0.tar.gz\n\ncd nginx-1.13.0\n\nyum -y install pcre-devel openssl openssl-devel\n\n./configure - -prefix=/usr/local/nginx \n\nmake && make install\n```\n\n可以参看这篇文章：http://www.linuxidc.com/Linux/2016-03/129303.htm  \n执行完后会得到这样表示安装成功\n![](media/14955282000741/14955289656087.jpg)\n这里提示安装路径为:/usr/local/nginx\n这时候访问网站是没有任何效果的因为服务还没有启动：\n## 启动NGINX\n\n```\nnginx -c /usr/local/nginx/conf/nginx.conf\n```\n\n## 停止NGINX\n通过进程\n\n> ```\n查看进程     ：   ps -ef | grep nginx\n快速停止Nginx：   kill -QUIT 主进程号\n            或\n强制停止Nginx：   kill -TERM 主进程号\n```\n\n## 重启NGINX\n如果更改了配置就要重启Nginx，要先关闭Nginx再打开？不是的，可以向Nginx 发送信号，平滑重启。\n平滑重启命令：\n\n```\nkill -HUP 住进称号或进程号文件路径\n```\n\n或者使用\n\n```\n/usr/nginx/sbin/nginx -s reload\n```\n\n##nginx只能访问主页其他页面404问题\n\n```\nlocation / {\n  root   D:/WWW/Lifes/public;\n  index  index.html index.htm index.php;\n\n  try_files $uri $uri/ /index.php?$query_string;\n  if (!-e $request_filename){  \n      rewrite ^/(.*) /index.php last;  \n  } \n}\n```\n\n----------------------------------华丽的分割线-----------------------------------\n\n**⚠️注意**，修改了配置文件后最好先检查一下修改过的配置文件是否正 确，以免重启后Nginx出现错误影响服务器稳定运行。判断Nginx配置是否正确命令如下：\n\n```\nnginx -t -c /usr/nginx/conf/nginx.conf\n```\n\n或者\n\n```\n/usr/nginx/sbin/nginx -t\n```\n\n# 安装PHP\n## 下载php\n[下载php url在php官网中复制]\n`wget url`\n\n[安装编译器 依赖工具]\n`yum install  gcc gcc-c++ libxml2-devel`\t\n下载PHP 选择相对于的版本\n[PHP官网下载](http://www.php.net/downloads.php)\n注意：Linux 下载失败是下载的URL被加密了需要修改下URL方法如下：\n1.先将文件加入下载列表\n2.打开下载列表找到对应PHP文件-》右击拷贝地址将它粘贴到浏览器地址栏中不要回车，你会看到类似这样的链接\n`http://124.205.69.131/files/2088000005848DB0/cn2.php.net/distributions/php-7.0.19.tar.gz`  \n将URL中的 `124.205.69.131/files/2088000005848DB0/` 删除掉，拷贝URL 即可在 「Linux」 中使用 「wget」 下载了。\n\n\n[php文件夹下编译php \"--enable-fpm\"：nginx需要它解析php]\n./configure --prefix=/usr/local/php7 --enable-fpm \n\n> --with-mysqli=/usr/local/mysql/bin/mysql_config  指定mysqli位置\n  --with-mysql=/usr/local/mysql/  指定mysql位置\n  --with-config-file-path=/usr/local/php/etc/  指定配置文件目录\n\n\n\n[编译&安装]\n->make && make install\t\n\n拷贝文件：\n1.进入 `/usr/local/php/etc/` 目录\n\n```\ncp php-fpm.conf.default php-fpm.conf\ncd php-fpm.d\ncp www.conf.default www.conf\ncd /usr/local/php/sbin\n./php-fpm\n```\n\n全局PHP ：\nexport PATH=$PATH:/usr/local/php7/bin   \n## 安装php\n## 启动\n## 停止\n## 重启\n/usr/local/php/sbin/php-fpm &\n## 扩展问题\n`/php/bin/phpize` 报错\n![](media/14955282000741/14966714379954.jpg)\n\n```\nwget http://ftp.gnu.org/gnu/m4/m4-1.4.9.tar.gz\ntar -zvxf m4-1.4.9.tar.gz\ncd m4-1.4.9/\n./configure && make && make install\n\ncd ../\n\nwget http://ftp.gnu.org/gnu/autoconf/autoconf-2.62.tar.gz\ntar -zvxf autoconf-2.62.tar.gz\ncd autoconf-2.62/\n./configure && make && make install\n```\n### 安装步骤\n1.进入PHP源码包「etc」 目录下 进入相应的扩展目录\n\n```\n/usr/local/php/bin/phpize   #这里为你自己的phpize路径，如果找不到，使用whereis phpize查找\n\n#执行后，发现错误 无法找到config.m4 ，config0.m4就是config.m4。直接重命名\n\nmv config0.m4 config.m4\n\n/usr/local/php/bin/phpize\n\n./configure --with-openssl --with-php-config=/usr/local/php/bin/php-config\n\nmake\n\nmake install\n```\n安装完成后，会返回一个 .so 文件（openssl.so）的目录。在此目录下把 openssl.so 文件拷贝到你在php.ini 中指定的 extension_dir 下（在php.ini文件中查找：extension_dir =），我这里的目录是 \n`/usr/local/php/lib/php/extensions`\n编辑php.ini文件，在文件添加\n\n```\nextension=openssl.so\n```\n\n重启Apache/Nginx即可\n\n# mysql的安装\n首先使用yum或apt-get下载依赖管理：\n\n```\nyum -y install gcc gcc-c++ ncurses-devel cmake\n```\n⚠️注意：MySQL从5.5开始，使用cmake 进行编译设置；因此，我们还要安装cmake编译工具\n\n装MySQL需要依赖 Boost  的C++扩展，而且只能是 1.59.0 版本\nBoost 下载地址： http://www.boost.org/users/history  ；\n选择1.59.0版本下载，在编译是填写相应参数，指定Boost源码位置即可,我这里放装到了 /usr/local/ 下；\n\n```\nwget https://jaist.dl.sourceforge.net/project/boost/boost/1.59.0/boost_1_59_0.tar.gz\n\nboost_1_59_0.tar.gz\n\ntar xzvf boost_1_59_0.tar.gz      # 解压扩展\n\nmv boost_1_59_0 /usr/local/boost     # 将扩展源码剪切到/usr/local下\n```\n## 下载mysql\n前往[mysql官网](https://dev.mysql.com/downloads/mysql/)下载linux通用版本源码包。或 [点我下载mysql-5.7.18源码版本](https://dev.mysql.com/get/Downloads/MySQL-5.7/mysql-5.7.18.tar.gz)\n\n## 安装mysql\n\n```\nwget https://dev.mysql.com/get/Downloads/MySQL-5.7/mysql-5.7.18.tar.gz\n\ntar xzvf mysql-5.7.18.tar.gz\n\ncd mysql-5.7.18     # 切换目录到刚解压的文件夹中\n\ncmake  -DCMAKE_INSTALL_PREFIX=/usr/local/mysql  -DMYSQL_DATADIR=/usr/local/mysql/data  -DMYSQL_UNIX_ADDR=/tmp/mysql.sock  -DDEFAULT_CHARSET=utf8  -DDEFAULT_COLLATION=utf8_general_ci -DMYSQL_TCP_PORT=3306 -DWITH_BOOST=/usr/local/boost\n\nmake && make install.  #此过程很漫长，请耐心等待\n```\n⚠️注意：这里的 -DWITH_BOOST 要改成你的路径否则会出错 我这里路径是 /usr/local/boost\n\n> **cmake 参数解释**：\n-DCMAKE_INSTALL_PREFIX： 指定安装路径\n-DMYSQL_DATADIR ： 指定数据存放路径\n-DMYSQL_UNIX_ADDR ：指定套间字路径\n-DDEFAULT_CHARSET ： 设置字符集\n-DDEFAULT_COLLATION ： 设置字符校验集\n-DWITH_BOOST ： 指定Boost扩展源码路径  \n-DMYSQL_USER=mysql ： 指定mysql运行用户 \n-DMYSQL_TCP_PORT=3306 ：指定mysql端口\n-DWITH_INNOBASE_STORAGE_ENGINE=1 ： 安装innodb存储引擎\n-DWITH_MEMORY_STORAGE_ENGINE=1 ： 安装memory存储引擎\n-DWITH_READLINE=1 ： 支持readline库\n-DENABLED_LOCAL_INFILE=1 ： 启用加载本地数据\n\nmysql安装成功后查看/etc/my.cnf 文件是否存在，如果没有的话执行以下命令有的话则跳过。\n\n```\ncp /usr/local/mysql/support-files/my-default.cnf /etc/my.cnf   #复制配置文件\n```\n\n修改配置文件 /etc/my.cnf  修改内容如下\n\n```\nbasedir = /usr/local/mysql/         # 这里是mysql的安装路径\n\ndatadir = /usr/local/mysql/data     # 这里是 mysql的数据存放路径\n\nsocket = /tmp/mysql.sock            # 这个我忘了\n```\n\n\n添加mysql用户和创建数据存放目录，并修改权限\n\n```\ngroupadd  mysql\n\nuseradd -r -g mysql -s /bin/false mysql  # 创建不可登录用户\n\nmkdir -p /usr/local/mysql/data\n\ncd /usr/local/mysql  #切换至安装目录\n\nbin/mysqld --defaults-file=/etc/my.cnf --initialize --user=mysql   # 初始化数据库\n\nchown -R mysql:mysql /usr/local/mysql # 修改权限\n```\n\n>初始化数据库命令参数解释：\n--defaults-file ： 制定MySQL配置文件路径\n--initialize ： 初始化随机密码，注意，初始化的密码是一个过期密码，登录后需要修改密码\n--user： 指定账户\n上一个命令执行完之后，会在命令提示符的最后给出随机密码，\n一定记住 将此密码记录下来\n\n到这里mysql 安装完毕接下来让我们启动mysql吧！\n\n```\ncd /usr/local/mysql  #切换到mysql安装目录\n\nsupport-files/mysql.server start  # 启动mysql 服务器\n\nbin/mysql -u root -p    \n\nEnter password：   # 输入刚刚的随机密码链接数据库\n```\n\n进入数据库必须修改密码否侧无法使用\n\n```\nALTER USER 'root'@'localhost' IDENTIFIED BY  'NewPassWord';\n```\n\n⚠️注意：这里修改密码必须且只能使用「ALTER」 命令修改\n\n## 启动\n```\ncd /usr/local/mysql/support-files\ncp mysql.server /etc/init.d/mysqld  #添加mysql启动命令\ncd /usr/local/mysql/bin\nvim /root/.bash_profile #将mysql添加到系统的环境变量里\nPATH=$PATH:$HOME/bin:/usr/local/lnmp/mysql/bin\nsource /root/.bash_profile  #刷新环境变量文件\necho $PATH                  #查看mysql添加到环境变量\nwhich mysql        #测试\n/usr/local/lnmp/mysql/bin/mysql\n```\n\n## 停止\n## 重启\n\n# NGINX全局设置\n\n```\nvi /etc/init.d/nginx  (输入下面的代码)\n\n#!/bin/bash\n# nginx Startup script for the Nginx HTTP Server\n# it is v.0.0.2 version.\n# chkconfig: - 85 15\n# description: Nginx is a high-performance web and proxy server.\n#              It has a lot of features, but it's not for everyone.\n# processname: nginx\n# pidfile: /var/run/nginx.pid\n# config: /usr/local/nginx/conf/nginx.conf\n\n#nginx程序路径\nnginxd=/usr/local/nginx/sbin/nginx\n\n#nginx配置文件路径\nnginx_config=/usr/local/nginx/conf/nginx.conf\n\nnginx pid文件的路径，可以在nginx的配置文件中找到\nnginx_pid=/var/run/nginx.pid\nRETVAL=0\nprog=\"nginx\"\n# Source function library.\n. /etc/rc.d/init.d/functions\n# Source networking configuration.\n. /etc/sysconfig/network\n# Check that networking is up.\n[ ${NETWORKING} = \"no\" ] && exit 0\n[ -x $nginxd ] || exit 0\n# Start nginx daemons functions.\nstart() {\nif [ -e $nginx_pid ];then\n   echo \"nginx already running....\"\n   exit 1\nfi\n   echo -n $\"Starting $prog: \"\n   daemon $nginxd -c ${nginx_config}\n   RETVAL=$?\n   echo\n   [ $RETVAL = 0 ] && touch /var/lock/subsys/nginx\n   return $RETVAL\n}\n# Stop nginx daemons functions.\nstop() {\n        echo -n $\"Stopping $prog: \"\n        killproc $nginxd\n        RETVAL=$?\n        echo\n        [ $RETVAL = 0 ] && rm -f /var/lock/subsys/nginx /var/run/nginx.pid\n}\n# reload nginx service functions.\nreload() {\n    echo -n $\"Reloading $prog: \"\n    #kill -HUP `cat ${nginx_pid}`\n    killproc $nginxd -HUP\n    RETVAL=$?\n    echo\n}\n# See how we were called.\ncase \"$1\" in\nstart)\n        start\n        ;;\nstop)\n        stop\n        ;;\nreload)\n        reload\n        ;;\nrestart)\n        stop\n        start\n        ;;\nstatus)\n        status $prog\n        RETVAL=$?\n        ;;\n*)\n        echo $\"Usage: $prog {start|stop|restart|reload|status|help}\"\n        exit 1\nesac\nexit $RETVAL\n```\n\n同样的修改了nginx的配置文件nginx.conf，也可以使用上面的命令重新加载新的配置文件并运行，可以将此命令加入到rc.local文件中，这样开机的时候nginx就默认启动了\n\n在 rc.local 加入一行如下代码： \n\n```\nvi /etc/rc.local \n\n/etc/init.d/nginx start\n```\n\n保存并退出，下次重启会生效。\n\n## 将nginx添加为系统服务\n\n```\nchkconfig --add nginx\n\nchkconfig nginx on\n```\n\n对于其他服务也同样适用，比如Mysql,php-fpm等等\n\n# Laravel 安装\n下载composer [官网下载地址](https://getcomposer.org/download/)\n\n```\nphp -r \"copy('https://getcomposer.org/installer', 'composer-setup.php');\"\n\nphp -r \"if (hash_file('SHA384', 'composer-setup.php') === '669656bab3166a7aff8a7506b8cb2d1c292f042046c5a994c43155c0be6190fa0355160742ab2e1c88d40d5be660b410') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;\"\n```\n\n```\nphp composer-setup.php\n\nphp -r \"unlink('composer-setup.php');\"\n```\n\n上述命令执行完毕后当前目录会有一个名为 「composer.par」 文件\n\n给文件可执行权限并剪切到 `/usr/local/bin/` 目录下重命名为 「composer」\n\n```\nchmod +x composer.pre\nmv composer.pre /usr/local/bin/composer\n```\n\n现在可以全局运行composr 命令 ，如果不行则运行一下命令；\n\n```\nvim /etc/profile\n\nexport PATH=\"$PATH:/usr/local/bin/\"\n```\n\n`Esc    :wq` 保存\n\n\n## laravel安装\n>首先，使用 Composer 下载 Laravel 安装包：\n\n```\ncomposer global require \"laravel/installer\"\n```\n\n注意：下载速度慢可以使用下面镜像地址 打开命令行窗口（windows用户）或控制台（Linux、Mac 用户）并执行如下命令：\n`composer config -g repo.packagist composer https://packagist.phpcomposer.com`\n\n>将 `~/.composer/vendor/bin` 路径加到 PATH,只有这样系统才能找到 `laravel` 的执行文件,安装完成，就可以使用 `laravel new` 命令在指定目录创建一个新的 Laravel 项目.\n\n\n```\nvim  ~/.bashrc\n\nalias laravel='~/.composer/vendor/bin/laravel'  \n\nsource ~/.bashrc\n\nchmod -R +x  /root/.composer/vendor/laravel/    #增加Laravel执行权限\n```\n\n开始你的Laravel的旅程吧～。\n\n>执行遇到`/usr/bin/env: php: No such file or directory` 怎么办？\n主要是php安装文件不在 `/usr/local/bin` 。安装在 `/usr/local/php`中\n\n找到php的可执行文件，`/usr/local/php5513/bin/php`\n\n\n`ln -s /usr/local/php5513/bin/php /usr/local/bin/php`\n\n\n把可执行文件连接过去就可以了。\n\n⚠️注意：下载laravel项目访问时候会出现空白页面是因为「bootstrap」 和 「storage」需要读写权限 \n\n```\nchmod -R 777 bootstrap/\n\nchmod -R 777 storage/\n```\n\n\n","slug":"lnmpInstall","published":1,"updated":"2017-09-24T21:05:56.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj7zrohqw000jr1s6g7gqpy57","content":"<h1 id=\"安装NGINX\"><a href=\"#安装NGINX\" class=\"headerlink\" title=\"安装NGINX\"></a>安装NGINX</h1><h2 id=\"下载nginx源码包\"><a href=\"#下载nginx源码包\" class=\"headerlink\" title=\"下载nginx源码包\"></a>下载nginx源码包</h2><p>1.官网下载地址：<a href=\"http://nginx.org/en/download.html\" target=\"_blank\" rel=\"external\">http://nginx.org/en/download.html</a></p>\n<p>2.通过wget|apt-get：wget <a href=\"http://nginx.org/download/nginx-1.13.0.tar.gz\" target=\"_blank\" rel=\"external\">http://nginx.org/download/nginx-1.13.0.tar.gz</a></p>\n<p>3.<a href=\"http://nginx.org/download/nginx-1.13.0.tar.gz\" target=\"_blank\" rel=\"external\">点我下载</a></p>\n<h2 id=\"解压安装包并安装\"><a href=\"#解压安装包并安装\" class=\"headerlink\" title=\"解压安装包并安装\"></a>解压安装包并安装</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">tar -xzf nginx-1.13.0.tar.gz</div><div class=\"line\"></div><div class=\"line\">cd nginx-1.13.0</div><div class=\"line\"></div><div class=\"line\">yum -y install pcre-devel openssl openssl-devel</div><div class=\"line\"></div><div class=\"line\">./configure - -prefix=/usr/local/nginx </div><div class=\"line\"></div><div class=\"line\">make &amp;&amp; make install</div></pre></td></tr></table></figure>\n<p>可以参看这篇文章：<a href=\"http://www.linuxidc.com/Linux/2016-03/129303.htm\" target=\"_blank\" rel=\"external\">http://www.linuxidc.com/Linux/2016-03/129303.htm</a><br>执行完后会得到这样表示安装成功<br><img src=\"media/14955282000741/14955289656087.jpg\" alt=\"\"><br>这里提示安装路径为:/usr/local/nginx<br>这时候访问网站是没有任何效果的因为服务还没有启动：</p>\n<h2 id=\"启动NGINX\"><a href=\"#启动NGINX\" class=\"headerlink\" title=\"启动NGINX\"></a>启动NGINX</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">nginx -c /usr/local/nginx/conf/nginx.conf</div></pre></td></tr></table></figure>\n<h2 id=\"停止NGINX\"><a href=\"#停止NGINX\" class=\"headerlink\" title=\"停止NGINX\"></a>停止NGINX</h2><p>通过进程</p>\n<blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">查看进程     ：   ps -ef | grep nginx</div><div class=\"line\">快速停止Nginx：   kill -QUIT 主进程号</div><div class=\"line\">            或</div><div class=\"line\">强制停止Nginx：   kill -TERM 主进程号</div></pre></td></tr></table></figure>\n</blockquote>\n<h2 id=\"重启NGINX\"><a href=\"#重启NGINX\" class=\"headerlink\" title=\"重启NGINX\"></a>重启NGINX</h2><p>如果更改了配置就要重启Nginx，要先关闭Nginx再打开？不是的，可以向Nginx 发送信号，平滑重启。<br>平滑重启命令：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">kill -HUP 住进称号或进程号文件路径</div></pre></td></tr></table></figure>\n<p>或者使用</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">/usr/nginx/sbin/nginx -s reload</div></pre></td></tr></table></figure>\n<p>##nginx只能访问主页其他页面404问题</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">location / &#123;</div><div class=\"line\">  root   D:/WWW/Lifes/public;</div><div class=\"line\">  index  index.html index.htm index.php;</div><div class=\"line\"></div><div class=\"line\">  try_files $uri $uri/ /index.php?$query_string;</div><div class=\"line\">  if (!-e $request_filename)&#123;  </div><div class=\"line\">      rewrite ^/(.*) /index.php last;  </div><div class=\"line\">  &#125; </div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>———————————-华丽的分割线———————————–</p>\n<p><strong>⚠️注意</strong>，修改了配置文件后最好先检查一下修改过的配置文件是否正 确，以免重启后Nginx出现错误影响服务器稳定运行。判断Nginx配置是否正确命令如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">nginx -t -c /usr/nginx/conf/nginx.conf</div></pre></td></tr></table></figure>\n<p>或者</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">/usr/nginx/sbin/nginx -t</div></pre></td></tr></table></figure>\n<h1 id=\"安装PHP\"><a href=\"#安装PHP\" class=\"headerlink\" title=\"安装PHP\"></a>安装PHP</h1><h2 id=\"下载php\"><a href=\"#下载php\" class=\"headerlink\" title=\"下载php\"></a>下载php</h2><p>[下载php url在php官网中复制]<br><code>wget url</code></p>\n<p>[安装编译器 依赖工具]<br><code>yum install  gcc gcc-c++ libxml2-devel</code><br>下载PHP 选择相对于的版本<br><a href=\"http://www.php.net/downloads.php\" target=\"_blank\" rel=\"external\">PHP官网下载</a><br>注意：Linux 下载失败是下载的URL被加密了需要修改下URL方法如下：<br>1.先将文件加入下载列表<br>2.打开下载列表找到对应PHP文件-》右击拷贝地址将它粘贴到浏览器地址栏中不要回车，你会看到类似这样的链接<br><code>http://124.205.69.131/files/2088000005848DB0/cn2.php.net/distributions/php-7.0.19.tar.gz</code><br>将URL中的 <code>124.205.69.131/files/2088000005848DB0/</code> 删除掉，拷贝URL 即可在 「Linux」 中使用 「wget」 下载了。</p>\n<p>[php文件夹下编译php “–enable-fpm”：nginx需要它解析php]<br>./configure –prefix=/usr/local/php7 –enable-fpm </p>\n<blockquote>\n<p>–with-mysqli=/usr/local/mysql/bin/mysql_config  指定mysqli位置<br>  –with-mysql=/usr/local/mysql/  指定mysql位置<br>  –with-config-file-path=/usr/local/php/etc/  指定配置文件目录</p>\n</blockquote>\n<p>[编译&amp;安装]<br>-&gt;make &amp;&amp; make install    </p>\n<p>拷贝文件：<br>1.进入 <code>/usr/local/php/etc/</code> 目录</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">cp php-fpm.conf.default php-fpm.conf</div><div class=\"line\">cd php-fpm.d</div><div class=\"line\">cp www.conf.default www.conf</div><div class=\"line\">cd /usr/local/php/sbin</div><div class=\"line\">./php-fpm</div></pre></td></tr></table></figure>\n<p>全局PHP ：<br>export PATH=$PATH:/usr/local/php7/bin   </p>\n<h2 id=\"安装php\"><a href=\"#安装php\" class=\"headerlink\" title=\"安装php\"></a>安装php</h2><h2 id=\"启动\"><a href=\"#启动\" class=\"headerlink\" title=\"启动\"></a>启动</h2><h2 id=\"停止\"><a href=\"#停止\" class=\"headerlink\" title=\"停止\"></a>停止</h2><h2 id=\"重启\"><a href=\"#重启\" class=\"headerlink\" title=\"重启\"></a>重启</h2><p>/usr/local/php/sbin/php-fpm &amp;</p>\n<h2 id=\"扩展问题\"><a href=\"#扩展问题\" class=\"headerlink\" title=\"扩展问题\"></a>扩展问题</h2><p><code>/php/bin/phpize</code> 报错<br><img src=\"media/14955282000741/14966714379954.jpg\" alt=\"\"></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">wget http://ftp.gnu.org/gnu/m4/m4-1.4.9.tar.gz</div><div class=\"line\">tar -zvxf m4-1.4.9.tar.gz</div><div class=\"line\">cd m4-1.4.9/</div><div class=\"line\">./configure &amp;&amp; make &amp;&amp; make install</div><div class=\"line\"></div><div class=\"line\">cd ../</div><div class=\"line\"></div><div class=\"line\">wget http://ftp.gnu.org/gnu/autoconf/autoconf-2.62.tar.gz</div><div class=\"line\">tar -zvxf autoconf-2.62.tar.gz</div><div class=\"line\">cd autoconf-2.62/</div><div class=\"line\">./configure &amp;&amp; make &amp;&amp; make install</div></pre></td></tr></table></figure>\n<h3 id=\"安装步骤\"><a href=\"#安装步骤\" class=\"headerlink\" title=\"安装步骤\"></a>安装步骤</h3><p>1.进入PHP源码包「etc」 目录下 进入相应的扩展目录</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">/usr/local/php/bin/phpize   #这里为你自己的phpize路径，如果找不到，使用whereis phpize查找</div><div class=\"line\"></div><div class=\"line\">#执行后，发现错误 无法找到config.m4 ，config0.m4就是config.m4。直接重命名</div><div class=\"line\"></div><div class=\"line\">mv config0.m4 config.m4</div><div class=\"line\"></div><div class=\"line\">/usr/local/php/bin/phpize</div><div class=\"line\"></div><div class=\"line\">./configure --with-openssl --with-php-config=/usr/local/php/bin/php-config</div><div class=\"line\"></div><div class=\"line\">make</div><div class=\"line\"></div><div class=\"line\">make install</div></pre></td></tr></table></figure>\n<p>安装完成后，会返回一个 .so 文件（openssl.so）的目录。在此目录下把 openssl.so 文件拷贝到你在php.ini 中指定的 extension_dir 下（在php.ini文件中查找：extension_dir =），我这里的目录是<br><code>/usr/local/php/lib/php/extensions</code><br>编辑php.ini文件，在文件添加</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">extension=openssl.so</div></pre></td></tr></table></figure>\n<p>重启Apache/Nginx即可</p>\n<h1 id=\"mysql的安装\"><a href=\"#mysql的安装\" class=\"headerlink\" title=\"mysql的安装\"></a>mysql的安装</h1><p>首先使用yum或apt-get下载依赖管理：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">yum -y install gcc gcc-c++ ncurses-devel cmake</div></pre></td></tr></table></figure>\n<p>⚠️注意：MySQL从5.5开始，使用cmake 进行编译设置；因此，我们还要安装cmake编译工具</p>\n<p>装MySQL需要依赖 Boost  的C++扩展，而且只能是 1.59.0 版本<br>Boost 下载地址： <a href=\"http://www.boost.org/users/history\" target=\"_blank\" rel=\"external\">http://www.boost.org/users/history</a>  ；<br>选择1.59.0版本下载，在编译是填写相应参数，指定Boost源码位置即可,我这里放装到了 /usr/local/ 下；</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">wget https://jaist.dl.sourceforge.net/project/boost/boost/1.59.0/boost_1_59_0.tar.gz</div><div class=\"line\"></div><div class=\"line\">boost_1_59_0.tar.gz</div><div class=\"line\"></div><div class=\"line\">tar xzvf boost_1_59_0.tar.gz      # 解压扩展</div><div class=\"line\"></div><div class=\"line\">mv boost_1_59_0 /usr/local/boost     # 将扩展源码剪切到/usr/local下</div></pre></td></tr></table></figure>\n<h2 id=\"下载mysql\"><a href=\"#下载mysql\" class=\"headerlink\" title=\"下载mysql\"></a>下载mysql</h2><p>前往<a href=\"https://dev.mysql.com/downloads/mysql/\" target=\"_blank\" rel=\"external\">mysql官网</a>下载linux通用版本源码包。或 <a href=\"https://dev.mysql.com/get/Downloads/MySQL-5.7/mysql-5.7.18.tar.gz\" target=\"_blank\" rel=\"external\">点我下载mysql-5.7.18源码版本</a></p>\n<h2 id=\"安装mysql\"><a href=\"#安装mysql\" class=\"headerlink\" title=\"安装mysql\"></a>安装mysql</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">wget https://dev.mysql.com/get/Downloads/MySQL-5.7/mysql-5.7.18.tar.gz</div><div class=\"line\"></div><div class=\"line\">tar xzvf mysql-5.7.18.tar.gz</div><div class=\"line\"></div><div class=\"line\">cd mysql-5.7.18     # 切换目录到刚解压的文件夹中</div><div class=\"line\"></div><div class=\"line\">cmake  -DCMAKE_INSTALL_PREFIX=/usr/local/mysql  -DMYSQL_DATADIR=/usr/local/mysql/data  -DMYSQL_UNIX_ADDR=/tmp/mysql.sock  -DDEFAULT_CHARSET=utf8  -DDEFAULT_COLLATION=utf8_general_ci -DMYSQL_TCP_PORT=3306 -DWITH_BOOST=/usr/local/boost</div><div class=\"line\"></div><div class=\"line\">make &amp;&amp; make install.  #此过程很漫长，请耐心等待</div></pre></td></tr></table></figure>\n<p>⚠️注意：这里的 -DWITH_BOOST 要改成你的路径否则会出错 我这里路径是 /usr/local/boost</p>\n<blockquote>\n<p><strong>cmake 参数解释</strong>：<br>-DCMAKE_INSTALL_PREFIX： 指定安装路径<br>-DMYSQL_DATADIR ： 指定数据存放路径<br>-DMYSQL_UNIX_ADDR ：指定套间字路径<br>-DDEFAULT_CHARSET ： 设置字符集<br>-DDEFAULT_COLLATION ： 设置字符校验集<br>-DWITH_BOOST ： 指定Boost扩展源码路径<br>-DMYSQL_USER=mysql ： 指定mysql运行用户<br>-DMYSQL_TCP_PORT=3306 ：指定mysql端口<br>-DWITH_INNOBASE_STORAGE_ENGINE=1 ： 安装innodb存储引擎<br>-DWITH_MEMORY_STORAGE_ENGINE=1 ： 安装memory存储引擎<br>-DWITH_READLINE=1 ： 支持readline库<br>-DENABLED_LOCAL_INFILE=1 ： 启用加载本地数据</p>\n</blockquote>\n<p>mysql安装成功后查看/etc/my.cnf 文件是否存在，如果没有的话执行以下命令有的话则跳过。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">cp /usr/local/mysql/support-files/my-default.cnf /etc/my.cnf   #复制配置文件</div></pre></td></tr></table></figure>\n<p>修改配置文件 /etc/my.cnf  修改内容如下</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">basedir = /usr/local/mysql/         # 这里是mysql的安装路径</div><div class=\"line\"></div><div class=\"line\">datadir = /usr/local/mysql/data     # 这里是 mysql的数据存放路径</div><div class=\"line\"></div><div class=\"line\">socket = /tmp/mysql.sock            # 这个我忘了</div></pre></td></tr></table></figure>\n<p>添加mysql用户和创建数据存放目录，并修改权限</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">groupadd  mysql</div><div class=\"line\"></div><div class=\"line\">useradd -r -g mysql -s /bin/false mysql  # 创建不可登录用户</div><div class=\"line\"></div><div class=\"line\">mkdir -p /usr/local/mysql/data</div><div class=\"line\"></div><div class=\"line\">cd /usr/local/mysql  #切换至安装目录</div><div class=\"line\"></div><div class=\"line\">bin/mysqld --defaults-file=/etc/my.cnf --initialize --user=mysql   # 初始化数据库</div><div class=\"line\"></div><div class=\"line\">chown -R mysql:mysql /usr/local/mysql # 修改权限</div></pre></td></tr></table></figure>\n<blockquote>\n<p>初始化数据库命令参数解释：<br>–defaults-file ： 制定MySQL配置文件路径<br>–initialize ： 初始化随机密码，注意，初始化的密码是一个过期密码，登录后需要修改密码<br>–user： 指定账户<br>上一个命令执行完之后，会在命令提示符的最后给出随机密码，<br>一定记住 将此密码记录下来</p>\n</blockquote>\n<p>到这里mysql 安装完毕接下来让我们启动mysql吧！</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">cd /usr/local/mysql  #切换到mysql安装目录</div><div class=\"line\"></div><div class=\"line\">support-files/mysql.server start  # 启动mysql 服务器</div><div class=\"line\"></div><div class=\"line\">bin/mysql -u root -p    </div><div class=\"line\"></div><div class=\"line\">Enter password：   # 输入刚刚的随机密码链接数据库</div></pre></td></tr></table></figure>\n<p>进入数据库必须修改密码否侧无法使用</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">ALTER USER &apos;root&apos;@&apos;localhost&apos; IDENTIFIED BY  &apos;NewPassWord&apos;;</div></pre></td></tr></table></figure>\n<p>⚠️注意：这里修改密码必须且只能使用「ALTER」 命令修改</p>\n<h2 id=\"启动-1\"><a href=\"#启动-1\" class=\"headerlink\" title=\"启动\"></a>启动</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">cd /usr/local/mysql/support-files</div><div class=\"line\">cp mysql.server /etc/init.d/mysqld  #添加mysql启动命令</div><div class=\"line\">cd /usr/local/mysql/bin</div><div class=\"line\">vim /root/.bash_profile #将mysql添加到系统的环境变量里</div><div class=\"line\">PATH=$PATH:$HOME/bin:/usr/local/lnmp/mysql/bin</div><div class=\"line\">source /root/.bash_profile  #刷新环境变量文件</div><div class=\"line\">echo $PATH                  #查看mysql添加到环境变量</div><div class=\"line\">which mysql        #测试</div><div class=\"line\">/usr/local/lnmp/mysql/bin/mysql</div></pre></td></tr></table></figure>\n<h2 id=\"停止-1\"><a href=\"#停止-1\" class=\"headerlink\" title=\"停止\"></a>停止</h2><h2 id=\"重启-1\"><a href=\"#重启-1\" class=\"headerlink\" title=\"重启\"></a>重启</h2><h1 id=\"NGINX全局设置\"><a href=\"#NGINX全局设置\" class=\"headerlink\" title=\"NGINX全局设置\"></a>NGINX全局设置</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div></pre></td><td class=\"code\"><pre><div class=\"line\">vi /etc/init.d/nginx  (输入下面的代码)</div><div class=\"line\"></div><div class=\"line\">#!/bin/bash</div><div class=\"line\"># nginx Startup script for the Nginx HTTP Server</div><div class=\"line\"># it is v.0.0.2 version.</div><div class=\"line\"># chkconfig: - 85 15</div><div class=\"line\"># description: Nginx is a high-performance web and proxy server.</div><div class=\"line\">#              It has a lot of features, but it&apos;s not for everyone.</div><div class=\"line\"># processname: nginx</div><div class=\"line\"># pidfile: /var/run/nginx.pid</div><div class=\"line\"># config: /usr/local/nginx/conf/nginx.conf</div><div class=\"line\"></div><div class=\"line\">#nginx程序路径</div><div class=\"line\">nginxd=/usr/local/nginx/sbin/nginx</div><div class=\"line\"></div><div class=\"line\">#nginx配置文件路径</div><div class=\"line\">nginx_config=/usr/local/nginx/conf/nginx.conf</div><div class=\"line\"></div><div class=\"line\">nginx pid文件的路径，可以在nginx的配置文件中找到</div><div class=\"line\">nginx_pid=/var/run/nginx.pid</div><div class=\"line\">RETVAL=0</div><div class=\"line\">prog=&quot;nginx&quot;</div><div class=\"line\"># Source function library.</div><div class=\"line\">. /etc/rc.d/init.d/functions</div><div class=\"line\"># Source networking configuration.</div><div class=\"line\">. /etc/sysconfig/network</div><div class=\"line\"># Check that networking is up.</div><div class=\"line\">[ $&#123;NETWORKING&#125; = &quot;no&quot; ] &amp;&amp; exit 0</div><div class=\"line\">[ -x $nginxd ] || exit 0</div><div class=\"line\"># Start nginx daemons functions.</div><div class=\"line\">start() &#123;</div><div class=\"line\">if [ -e $nginx_pid ];then</div><div class=\"line\">   echo &quot;nginx already running....&quot;</div><div class=\"line\">   exit 1</div><div class=\"line\">fi</div><div class=\"line\">   echo -n $&quot;Starting $prog: &quot;</div><div class=\"line\">   daemon $nginxd -c $&#123;nginx_config&#125;</div><div class=\"line\">   RETVAL=$?</div><div class=\"line\">   echo</div><div class=\"line\">   [ $RETVAL = 0 ] &amp;&amp; touch /var/lock/subsys/nginx</div><div class=\"line\">   return $RETVAL</div><div class=\"line\">&#125;</div><div class=\"line\"># Stop nginx daemons functions.</div><div class=\"line\">stop() &#123;</div><div class=\"line\">        echo -n $&quot;Stopping $prog: &quot;</div><div class=\"line\">        killproc $nginxd</div><div class=\"line\">        RETVAL=$?</div><div class=\"line\">        echo</div><div class=\"line\">        [ $RETVAL = 0 ] &amp;&amp; rm -f /var/lock/subsys/nginx /var/run/nginx.pid</div><div class=\"line\">&#125;</div><div class=\"line\"># reload nginx service functions.</div><div class=\"line\">reload() &#123;</div><div class=\"line\">    echo -n $&quot;Reloading $prog: &quot;</div><div class=\"line\">    #kill -HUP `cat $&#123;nginx_pid&#125;`</div><div class=\"line\">    killproc $nginxd -HUP</div><div class=\"line\">    RETVAL=$?</div><div class=\"line\">    echo</div><div class=\"line\">&#125;</div><div class=\"line\"># See how we were called.</div><div class=\"line\">case &quot;$1&quot; in</div><div class=\"line\">start)</div><div class=\"line\">        start</div><div class=\"line\">        ;;</div><div class=\"line\">stop)</div><div class=\"line\">        stop</div><div class=\"line\">        ;;</div><div class=\"line\">reload)</div><div class=\"line\">        reload</div><div class=\"line\">        ;;</div><div class=\"line\">restart)</div><div class=\"line\">        stop</div><div class=\"line\">        start</div><div class=\"line\">        ;;</div><div class=\"line\">status)</div><div class=\"line\">        status $prog</div><div class=\"line\">        RETVAL=$?</div><div class=\"line\">        ;;</div><div class=\"line\">*)</div><div class=\"line\">        echo $&quot;Usage: $prog &#123;start|stop|restart|reload|status|help&#125;&quot;</div><div class=\"line\">        exit 1</div><div class=\"line\">esac</div><div class=\"line\">exit $RETVAL</div></pre></td></tr></table></figure>\n<p>同样的修改了nginx的配置文件nginx.conf，也可以使用上面的命令重新加载新的配置文件并运行，可以将此命令加入到rc.local文件中，这样开机的时候nginx就默认启动了</p>\n<p>在 rc.local 加入一行如下代码： </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">vi /etc/rc.local </div><div class=\"line\"></div><div class=\"line\">/etc/init.d/nginx start</div></pre></td></tr></table></figure>\n<p>保存并退出，下次重启会生效。</p>\n<h2 id=\"将nginx添加为系统服务\"><a href=\"#将nginx添加为系统服务\" class=\"headerlink\" title=\"将nginx添加为系统服务\"></a>将nginx添加为系统服务</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">chkconfig --add nginx</div><div class=\"line\"></div><div class=\"line\">chkconfig nginx on</div></pre></td></tr></table></figure>\n<p>对于其他服务也同样适用，比如Mysql,php-fpm等等</p>\n<h1 id=\"Laravel-安装\"><a href=\"#Laravel-安装\" class=\"headerlink\" title=\"Laravel 安装\"></a>Laravel 安装</h1><p>下载composer <a href=\"https://getcomposer.org/download/\" target=\"_blank\" rel=\"external\">官网下载地址</a></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">php -r &quot;copy(&apos;https://getcomposer.org/installer&apos;, &apos;composer-setup.php&apos;);&quot;</div><div class=\"line\"></div><div class=\"line\">php -r &quot;if (hash_file(&apos;SHA384&apos;, &apos;composer-setup.php&apos;) === &apos;669656bab3166a7aff8a7506b8cb2d1c292f042046c5a994c43155c0be6190fa0355160742ab2e1c88d40d5be660b410&apos;) &#123; echo &apos;Installer verified&apos;; &#125; else &#123; echo &apos;Installer corrupt&apos;; unlink(&apos;composer-setup.php&apos;); &#125; echo PHP_EOL;&quot;</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">php composer-setup.php</div><div class=\"line\"></div><div class=\"line\">php -r &quot;unlink(&apos;composer-setup.php&apos;);&quot;</div></pre></td></tr></table></figure>\n<p>上述命令执行完毕后当前目录会有一个名为 「composer.par」 文件</p>\n<p>给文件可执行权限并剪切到 <code>/usr/local/bin/</code> 目录下重命名为 「composer」</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">chmod +x composer.pre</div><div class=\"line\">mv composer.pre /usr/local/bin/composer</div></pre></td></tr></table></figure>\n<p>现在可以全局运行composr 命令 ，如果不行则运行一下命令；</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">vim /etc/profile</div><div class=\"line\"></div><div class=\"line\">export PATH=&quot;$PATH:/usr/local/bin/&quot;</div></pre></td></tr></table></figure>\n<p><code>Esc    :wq</code> 保存</p>\n<h2 id=\"laravel安装\"><a href=\"#laravel安装\" class=\"headerlink\" title=\"laravel安装\"></a>laravel安装</h2><blockquote>\n<p>首先，使用 Composer 下载 Laravel 安装包：</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">composer global require &quot;laravel/installer&quot;</div></pre></td></tr></table></figure>\n<p>注意：下载速度慢可以使用下面镜像地址 打开命令行窗口（windows用户）或控制台（Linux、Mac 用户）并执行如下命令：<br><code>composer config -g repo.packagist composer https://packagist.phpcomposer.com</code></p>\n<blockquote>\n<p>将 <code>~/.composer/vendor/bin</code> 路径加到 PATH,只有这样系统才能找到 <code>laravel</code> 的执行文件,安装完成，就可以使用 <code>laravel new</code> 命令在指定目录创建一个新的 Laravel 项目.</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">vim  ~/.bashrc</div><div class=\"line\"></div><div class=\"line\">alias laravel=&apos;~/.composer/vendor/bin/laravel&apos;  </div><div class=\"line\"></div><div class=\"line\">source ~/.bashrc</div><div class=\"line\"></div><div class=\"line\">chmod -R +x  /root/.composer/vendor/laravel/    #增加Laravel执行权限</div></pre></td></tr></table></figure>\n<p>开始你的Laravel的旅程吧～。</p>\n<blockquote>\n<p>执行遇到<code>/usr/bin/env: php: No such file or directory</code> 怎么办？<br>主要是php安装文件不在 <code>/usr/local/bin</code> 。安装在 <code>/usr/local/php</code>中</p>\n</blockquote>\n<p>找到php的可执行文件，<code>/usr/local/php5513/bin/php</code></p>\n<p><code>ln -s /usr/local/php5513/bin/php /usr/local/bin/php</code></p>\n<p>把可执行文件连接过去就可以了。</p>\n<p>⚠️注意：下载laravel项目访问时候会出现空白页面是因为「bootstrap」 和 「storage」需要读写权限 </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">chmod -R 777 bootstrap/</div><div class=\"line\"></div><div class=\"line\">chmod -R 777 storage/</div></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"安装NGINX\"><a href=\"#安装NGINX\" class=\"headerlink\" title=\"安装NGINX\"></a>安装NGINX</h1><h2 id=\"下载nginx源码包\"><a href=\"#下载nginx源码包\" class=\"headerlink\" title=\"下载nginx源码包\"></a>下载nginx源码包</h2><p>1.官网下载地址：<a href=\"http://nginx.org/en/download.html\" target=\"_blank\" rel=\"external\">http://nginx.org/en/download.html</a></p>\n<p>2.通过wget|apt-get：wget <a href=\"http://nginx.org/download/nginx-1.13.0.tar.gz\" target=\"_blank\" rel=\"external\">http://nginx.org/download/nginx-1.13.0.tar.gz</a></p>\n<p>3.<a href=\"http://nginx.org/download/nginx-1.13.0.tar.gz\" target=\"_blank\" rel=\"external\">点我下载</a></p>\n<h2 id=\"解压安装包并安装\"><a href=\"#解压安装包并安装\" class=\"headerlink\" title=\"解压安装包并安装\"></a>解压安装包并安装</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">tar -xzf nginx-1.13.0.tar.gz</div><div class=\"line\"></div><div class=\"line\">cd nginx-1.13.0</div><div class=\"line\"></div><div class=\"line\">yum -y install pcre-devel openssl openssl-devel</div><div class=\"line\"></div><div class=\"line\">./configure - -prefix=/usr/local/nginx </div><div class=\"line\"></div><div class=\"line\">make &amp;&amp; make install</div></pre></td></tr></table></figure>\n<p>可以参看这篇文章：<a href=\"http://www.linuxidc.com/Linux/2016-03/129303.htm\" target=\"_blank\" rel=\"external\">http://www.linuxidc.com/Linux/2016-03/129303.htm</a><br>执行完后会得到这样表示安装成功<br><img src=\"media/14955282000741/14955289656087.jpg\" alt=\"\"><br>这里提示安装路径为:/usr/local/nginx<br>这时候访问网站是没有任何效果的因为服务还没有启动：</p>\n<h2 id=\"启动NGINX\"><a href=\"#启动NGINX\" class=\"headerlink\" title=\"启动NGINX\"></a>启动NGINX</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">nginx -c /usr/local/nginx/conf/nginx.conf</div></pre></td></tr></table></figure>\n<h2 id=\"停止NGINX\"><a href=\"#停止NGINX\" class=\"headerlink\" title=\"停止NGINX\"></a>停止NGINX</h2><p>通过进程</p>\n<blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">查看进程     ：   ps -ef | grep nginx</div><div class=\"line\">快速停止Nginx：   kill -QUIT 主进程号</div><div class=\"line\">            或</div><div class=\"line\">强制停止Nginx：   kill -TERM 主进程号</div></pre></td></tr></table></figure>\n</blockquote>\n<h2 id=\"重启NGINX\"><a href=\"#重启NGINX\" class=\"headerlink\" title=\"重启NGINX\"></a>重启NGINX</h2><p>如果更改了配置就要重启Nginx，要先关闭Nginx再打开？不是的，可以向Nginx 发送信号，平滑重启。<br>平滑重启命令：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">kill -HUP 住进称号或进程号文件路径</div></pre></td></tr></table></figure>\n<p>或者使用</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">/usr/nginx/sbin/nginx -s reload</div></pre></td></tr></table></figure>\n<p>##nginx只能访问主页其他页面404问题</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">location / &#123;</div><div class=\"line\">  root   D:/WWW/Lifes/public;</div><div class=\"line\">  index  index.html index.htm index.php;</div><div class=\"line\"></div><div class=\"line\">  try_files $uri $uri/ /index.php?$query_string;</div><div class=\"line\">  if (!-e $request_filename)&#123;  </div><div class=\"line\">      rewrite ^/(.*) /index.php last;  </div><div class=\"line\">  &#125; </div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>———————————-华丽的分割线———————————–</p>\n<p><strong>⚠️注意</strong>，修改了配置文件后最好先检查一下修改过的配置文件是否正 确，以免重启后Nginx出现错误影响服务器稳定运行。判断Nginx配置是否正确命令如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">nginx -t -c /usr/nginx/conf/nginx.conf</div></pre></td></tr></table></figure>\n<p>或者</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">/usr/nginx/sbin/nginx -t</div></pre></td></tr></table></figure>\n<h1 id=\"安装PHP\"><a href=\"#安装PHP\" class=\"headerlink\" title=\"安装PHP\"></a>安装PHP</h1><h2 id=\"下载php\"><a href=\"#下载php\" class=\"headerlink\" title=\"下载php\"></a>下载php</h2><p>[下载php url在php官网中复制]<br><code>wget url</code></p>\n<p>[安装编译器 依赖工具]<br><code>yum install  gcc gcc-c++ libxml2-devel</code><br>下载PHP 选择相对于的版本<br><a href=\"http://www.php.net/downloads.php\" target=\"_blank\" rel=\"external\">PHP官网下载</a><br>注意：Linux 下载失败是下载的URL被加密了需要修改下URL方法如下：<br>1.先将文件加入下载列表<br>2.打开下载列表找到对应PHP文件-》右击拷贝地址将它粘贴到浏览器地址栏中不要回车，你会看到类似这样的链接<br><code>http://124.205.69.131/files/2088000005848DB0/cn2.php.net/distributions/php-7.0.19.tar.gz</code><br>将URL中的 <code>124.205.69.131/files/2088000005848DB0/</code> 删除掉，拷贝URL 即可在 「Linux」 中使用 「wget」 下载了。</p>\n<p>[php文件夹下编译php “–enable-fpm”：nginx需要它解析php]<br>./configure –prefix=/usr/local/php7 –enable-fpm </p>\n<blockquote>\n<p>–with-mysqli=/usr/local/mysql/bin/mysql_config  指定mysqli位置<br>  –with-mysql=/usr/local/mysql/  指定mysql位置<br>  –with-config-file-path=/usr/local/php/etc/  指定配置文件目录</p>\n</blockquote>\n<p>[编译&amp;安装]<br>-&gt;make &amp;&amp; make install    </p>\n<p>拷贝文件：<br>1.进入 <code>/usr/local/php/etc/</code> 目录</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">cp php-fpm.conf.default php-fpm.conf</div><div class=\"line\">cd php-fpm.d</div><div class=\"line\">cp www.conf.default www.conf</div><div class=\"line\">cd /usr/local/php/sbin</div><div class=\"line\">./php-fpm</div></pre></td></tr></table></figure>\n<p>全局PHP ：<br>export PATH=$PATH:/usr/local/php7/bin   </p>\n<h2 id=\"安装php\"><a href=\"#安装php\" class=\"headerlink\" title=\"安装php\"></a>安装php</h2><h2 id=\"启动\"><a href=\"#启动\" class=\"headerlink\" title=\"启动\"></a>启动</h2><h2 id=\"停止\"><a href=\"#停止\" class=\"headerlink\" title=\"停止\"></a>停止</h2><h2 id=\"重启\"><a href=\"#重启\" class=\"headerlink\" title=\"重启\"></a>重启</h2><p>/usr/local/php/sbin/php-fpm &amp;</p>\n<h2 id=\"扩展问题\"><a href=\"#扩展问题\" class=\"headerlink\" title=\"扩展问题\"></a>扩展问题</h2><p><code>/php/bin/phpize</code> 报错<br><img src=\"media/14955282000741/14966714379954.jpg\" alt=\"\"></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">wget http://ftp.gnu.org/gnu/m4/m4-1.4.9.tar.gz</div><div class=\"line\">tar -zvxf m4-1.4.9.tar.gz</div><div class=\"line\">cd m4-1.4.9/</div><div class=\"line\">./configure &amp;&amp; make &amp;&amp; make install</div><div class=\"line\"></div><div class=\"line\">cd ../</div><div class=\"line\"></div><div class=\"line\">wget http://ftp.gnu.org/gnu/autoconf/autoconf-2.62.tar.gz</div><div class=\"line\">tar -zvxf autoconf-2.62.tar.gz</div><div class=\"line\">cd autoconf-2.62/</div><div class=\"line\">./configure &amp;&amp; make &amp;&amp; make install</div></pre></td></tr></table></figure>\n<h3 id=\"安装步骤\"><a href=\"#安装步骤\" class=\"headerlink\" title=\"安装步骤\"></a>安装步骤</h3><p>1.进入PHP源码包「etc」 目录下 进入相应的扩展目录</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">/usr/local/php/bin/phpize   #这里为你自己的phpize路径，如果找不到，使用whereis phpize查找</div><div class=\"line\"></div><div class=\"line\">#执行后，发现错误 无法找到config.m4 ，config0.m4就是config.m4。直接重命名</div><div class=\"line\"></div><div class=\"line\">mv config0.m4 config.m4</div><div class=\"line\"></div><div class=\"line\">/usr/local/php/bin/phpize</div><div class=\"line\"></div><div class=\"line\">./configure --with-openssl --with-php-config=/usr/local/php/bin/php-config</div><div class=\"line\"></div><div class=\"line\">make</div><div class=\"line\"></div><div class=\"line\">make install</div></pre></td></tr></table></figure>\n<p>安装完成后，会返回一个 .so 文件（openssl.so）的目录。在此目录下把 openssl.so 文件拷贝到你在php.ini 中指定的 extension_dir 下（在php.ini文件中查找：extension_dir =），我这里的目录是<br><code>/usr/local/php/lib/php/extensions</code><br>编辑php.ini文件，在文件添加</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">extension=openssl.so</div></pre></td></tr></table></figure>\n<p>重启Apache/Nginx即可</p>\n<h1 id=\"mysql的安装\"><a href=\"#mysql的安装\" class=\"headerlink\" title=\"mysql的安装\"></a>mysql的安装</h1><p>首先使用yum或apt-get下载依赖管理：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">yum -y install gcc gcc-c++ ncurses-devel cmake</div></pre></td></tr></table></figure>\n<p>⚠️注意：MySQL从5.5开始，使用cmake 进行编译设置；因此，我们还要安装cmake编译工具</p>\n<p>装MySQL需要依赖 Boost  的C++扩展，而且只能是 1.59.0 版本<br>Boost 下载地址： <a href=\"http://www.boost.org/users/history\" target=\"_blank\" rel=\"external\">http://www.boost.org/users/history</a>  ；<br>选择1.59.0版本下载，在编译是填写相应参数，指定Boost源码位置即可,我这里放装到了 /usr/local/ 下；</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">wget https://jaist.dl.sourceforge.net/project/boost/boost/1.59.0/boost_1_59_0.tar.gz</div><div class=\"line\"></div><div class=\"line\">boost_1_59_0.tar.gz</div><div class=\"line\"></div><div class=\"line\">tar xzvf boost_1_59_0.tar.gz      # 解压扩展</div><div class=\"line\"></div><div class=\"line\">mv boost_1_59_0 /usr/local/boost     # 将扩展源码剪切到/usr/local下</div></pre></td></tr></table></figure>\n<h2 id=\"下载mysql\"><a href=\"#下载mysql\" class=\"headerlink\" title=\"下载mysql\"></a>下载mysql</h2><p>前往<a href=\"https://dev.mysql.com/downloads/mysql/\" target=\"_blank\" rel=\"external\">mysql官网</a>下载linux通用版本源码包。或 <a href=\"https://dev.mysql.com/get/Downloads/MySQL-5.7/mysql-5.7.18.tar.gz\" target=\"_blank\" rel=\"external\">点我下载mysql-5.7.18源码版本</a></p>\n<h2 id=\"安装mysql\"><a href=\"#安装mysql\" class=\"headerlink\" title=\"安装mysql\"></a>安装mysql</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">wget https://dev.mysql.com/get/Downloads/MySQL-5.7/mysql-5.7.18.tar.gz</div><div class=\"line\"></div><div class=\"line\">tar xzvf mysql-5.7.18.tar.gz</div><div class=\"line\"></div><div class=\"line\">cd mysql-5.7.18     # 切换目录到刚解压的文件夹中</div><div class=\"line\"></div><div class=\"line\">cmake  -DCMAKE_INSTALL_PREFIX=/usr/local/mysql  -DMYSQL_DATADIR=/usr/local/mysql/data  -DMYSQL_UNIX_ADDR=/tmp/mysql.sock  -DDEFAULT_CHARSET=utf8  -DDEFAULT_COLLATION=utf8_general_ci -DMYSQL_TCP_PORT=3306 -DWITH_BOOST=/usr/local/boost</div><div class=\"line\"></div><div class=\"line\">make &amp;&amp; make install.  #此过程很漫长，请耐心等待</div></pre></td></tr></table></figure>\n<p>⚠️注意：这里的 -DWITH_BOOST 要改成你的路径否则会出错 我这里路径是 /usr/local/boost</p>\n<blockquote>\n<p><strong>cmake 参数解释</strong>：<br>-DCMAKE_INSTALL_PREFIX： 指定安装路径<br>-DMYSQL_DATADIR ： 指定数据存放路径<br>-DMYSQL_UNIX_ADDR ：指定套间字路径<br>-DDEFAULT_CHARSET ： 设置字符集<br>-DDEFAULT_COLLATION ： 设置字符校验集<br>-DWITH_BOOST ： 指定Boost扩展源码路径<br>-DMYSQL_USER=mysql ： 指定mysql运行用户<br>-DMYSQL_TCP_PORT=3306 ：指定mysql端口<br>-DWITH_INNOBASE_STORAGE_ENGINE=1 ： 安装innodb存储引擎<br>-DWITH_MEMORY_STORAGE_ENGINE=1 ： 安装memory存储引擎<br>-DWITH_READLINE=1 ： 支持readline库<br>-DENABLED_LOCAL_INFILE=1 ： 启用加载本地数据</p>\n</blockquote>\n<p>mysql安装成功后查看/etc/my.cnf 文件是否存在，如果没有的话执行以下命令有的话则跳过。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">cp /usr/local/mysql/support-files/my-default.cnf /etc/my.cnf   #复制配置文件</div></pre></td></tr></table></figure>\n<p>修改配置文件 /etc/my.cnf  修改内容如下</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">basedir = /usr/local/mysql/         # 这里是mysql的安装路径</div><div class=\"line\"></div><div class=\"line\">datadir = /usr/local/mysql/data     # 这里是 mysql的数据存放路径</div><div class=\"line\"></div><div class=\"line\">socket = /tmp/mysql.sock            # 这个我忘了</div></pre></td></tr></table></figure>\n<p>添加mysql用户和创建数据存放目录，并修改权限</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">groupadd  mysql</div><div class=\"line\"></div><div class=\"line\">useradd -r -g mysql -s /bin/false mysql  # 创建不可登录用户</div><div class=\"line\"></div><div class=\"line\">mkdir -p /usr/local/mysql/data</div><div class=\"line\"></div><div class=\"line\">cd /usr/local/mysql  #切换至安装目录</div><div class=\"line\"></div><div class=\"line\">bin/mysqld --defaults-file=/etc/my.cnf --initialize --user=mysql   # 初始化数据库</div><div class=\"line\"></div><div class=\"line\">chown -R mysql:mysql /usr/local/mysql # 修改权限</div></pre></td></tr></table></figure>\n<blockquote>\n<p>初始化数据库命令参数解释：<br>–defaults-file ： 制定MySQL配置文件路径<br>–initialize ： 初始化随机密码，注意，初始化的密码是一个过期密码，登录后需要修改密码<br>–user： 指定账户<br>上一个命令执行完之后，会在命令提示符的最后给出随机密码，<br>一定记住 将此密码记录下来</p>\n</blockquote>\n<p>到这里mysql 安装完毕接下来让我们启动mysql吧！</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">cd /usr/local/mysql  #切换到mysql安装目录</div><div class=\"line\"></div><div class=\"line\">support-files/mysql.server start  # 启动mysql 服务器</div><div class=\"line\"></div><div class=\"line\">bin/mysql -u root -p    </div><div class=\"line\"></div><div class=\"line\">Enter password：   # 输入刚刚的随机密码链接数据库</div></pre></td></tr></table></figure>\n<p>进入数据库必须修改密码否侧无法使用</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">ALTER USER &apos;root&apos;@&apos;localhost&apos; IDENTIFIED BY  &apos;NewPassWord&apos;;</div></pre></td></tr></table></figure>\n<p>⚠️注意：这里修改密码必须且只能使用「ALTER」 命令修改</p>\n<h2 id=\"启动-1\"><a href=\"#启动-1\" class=\"headerlink\" title=\"启动\"></a>启动</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">cd /usr/local/mysql/support-files</div><div class=\"line\">cp mysql.server /etc/init.d/mysqld  #添加mysql启动命令</div><div class=\"line\">cd /usr/local/mysql/bin</div><div class=\"line\">vim /root/.bash_profile #将mysql添加到系统的环境变量里</div><div class=\"line\">PATH=$PATH:$HOME/bin:/usr/local/lnmp/mysql/bin</div><div class=\"line\">source /root/.bash_profile  #刷新环境变量文件</div><div class=\"line\">echo $PATH                  #查看mysql添加到环境变量</div><div class=\"line\">which mysql        #测试</div><div class=\"line\">/usr/local/lnmp/mysql/bin/mysql</div></pre></td></tr></table></figure>\n<h2 id=\"停止-1\"><a href=\"#停止-1\" class=\"headerlink\" title=\"停止\"></a>停止</h2><h2 id=\"重启-1\"><a href=\"#重启-1\" class=\"headerlink\" title=\"重启\"></a>重启</h2><h1 id=\"NGINX全局设置\"><a href=\"#NGINX全局设置\" class=\"headerlink\" title=\"NGINX全局设置\"></a>NGINX全局设置</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div></pre></td><td class=\"code\"><pre><div class=\"line\">vi /etc/init.d/nginx  (输入下面的代码)</div><div class=\"line\"></div><div class=\"line\">#!/bin/bash</div><div class=\"line\"># nginx Startup script for the Nginx HTTP Server</div><div class=\"line\"># it is v.0.0.2 version.</div><div class=\"line\"># chkconfig: - 85 15</div><div class=\"line\"># description: Nginx is a high-performance web and proxy server.</div><div class=\"line\">#              It has a lot of features, but it&apos;s not for everyone.</div><div class=\"line\"># processname: nginx</div><div class=\"line\"># pidfile: /var/run/nginx.pid</div><div class=\"line\"># config: /usr/local/nginx/conf/nginx.conf</div><div class=\"line\"></div><div class=\"line\">#nginx程序路径</div><div class=\"line\">nginxd=/usr/local/nginx/sbin/nginx</div><div class=\"line\"></div><div class=\"line\">#nginx配置文件路径</div><div class=\"line\">nginx_config=/usr/local/nginx/conf/nginx.conf</div><div class=\"line\"></div><div class=\"line\">nginx pid文件的路径，可以在nginx的配置文件中找到</div><div class=\"line\">nginx_pid=/var/run/nginx.pid</div><div class=\"line\">RETVAL=0</div><div class=\"line\">prog=&quot;nginx&quot;</div><div class=\"line\"># Source function library.</div><div class=\"line\">. /etc/rc.d/init.d/functions</div><div class=\"line\"># Source networking configuration.</div><div class=\"line\">. /etc/sysconfig/network</div><div class=\"line\"># Check that networking is up.</div><div class=\"line\">[ $&#123;NETWORKING&#125; = &quot;no&quot; ] &amp;&amp; exit 0</div><div class=\"line\">[ -x $nginxd ] || exit 0</div><div class=\"line\"># Start nginx daemons functions.</div><div class=\"line\">start() &#123;</div><div class=\"line\">if [ -e $nginx_pid ];then</div><div class=\"line\">   echo &quot;nginx already running....&quot;</div><div class=\"line\">   exit 1</div><div class=\"line\">fi</div><div class=\"line\">   echo -n $&quot;Starting $prog: &quot;</div><div class=\"line\">   daemon $nginxd -c $&#123;nginx_config&#125;</div><div class=\"line\">   RETVAL=$?</div><div class=\"line\">   echo</div><div class=\"line\">   [ $RETVAL = 0 ] &amp;&amp; touch /var/lock/subsys/nginx</div><div class=\"line\">   return $RETVAL</div><div class=\"line\">&#125;</div><div class=\"line\"># Stop nginx daemons functions.</div><div class=\"line\">stop() &#123;</div><div class=\"line\">        echo -n $&quot;Stopping $prog: &quot;</div><div class=\"line\">        killproc $nginxd</div><div class=\"line\">        RETVAL=$?</div><div class=\"line\">        echo</div><div class=\"line\">        [ $RETVAL = 0 ] &amp;&amp; rm -f /var/lock/subsys/nginx /var/run/nginx.pid</div><div class=\"line\">&#125;</div><div class=\"line\"># reload nginx service functions.</div><div class=\"line\">reload() &#123;</div><div class=\"line\">    echo -n $&quot;Reloading $prog: &quot;</div><div class=\"line\">    #kill -HUP `cat $&#123;nginx_pid&#125;`</div><div class=\"line\">    killproc $nginxd -HUP</div><div class=\"line\">    RETVAL=$?</div><div class=\"line\">    echo</div><div class=\"line\">&#125;</div><div class=\"line\"># See how we were called.</div><div class=\"line\">case &quot;$1&quot; in</div><div class=\"line\">start)</div><div class=\"line\">        start</div><div class=\"line\">        ;;</div><div class=\"line\">stop)</div><div class=\"line\">        stop</div><div class=\"line\">        ;;</div><div class=\"line\">reload)</div><div class=\"line\">        reload</div><div class=\"line\">        ;;</div><div class=\"line\">restart)</div><div class=\"line\">        stop</div><div class=\"line\">        start</div><div class=\"line\">        ;;</div><div class=\"line\">status)</div><div class=\"line\">        status $prog</div><div class=\"line\">        RETVAL=$?</div><div class=\"line\">        ;;</div><div class=\"line\">*)</div><div class=\"line\">        echo $&quot;Usage: $prog &#123;start|stop|restart|reload|status|help&#125;&quot;</div><div class=\"line\">        exit 1</div><div class=\"line\">esac</div><div class=\"line\">exit $RETVAL</div></pre></td></tr></table></figure>\n<p>同样的修改了nginx的配置文件nginx.conf，也可以使用上面的命令重新加载新的配置文件并运行，可以将此命令加入到rc.local文件中，这样开机的时候nginx就默认启动了</p>\n<p>在 rc.local 加入一行如下代码： </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">vi /etc/rc.local </div><div class=\"line\"></div><div class=\"line\">/etc/init.d/nginx start</div></pre></td></tr></table></figure>\n<p>保存并退出，下次重启会生效。</p>\n<h2 id=\"将nginx添加为系统服务\"><a href=\"#将nginx添加为系统服务\" class=\"headerlink\" title=\"将nginx添加为系统服务\"></a>将nginx添加为系统服务</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">chkconfig --add nginx</div><div class=\"line\"></div><div class=\"line\">chkconfig nginx on</div></pre></td></tr></table></figure>\n<p>对于其他服务也同样适用，比如Mysql,php-fpm等等</p>\n<h1 id=\"Laravel-安装\"><a href=\"#Laravel-安装\" class=\"headerlink\" title=\"Laravel 安装\"></a>Laravel 安装</h1><p>下载composer <a href=\"https://getcomposer.org/download/\" target=\"_blank\" rel=\"external\">官网下载地址</a></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">php -r &quot;copy(&apos;https://getcomposer.org/installer&apos;, &apos;composer-setup.php&apos;);&quot;</div><div class=\"line\"></div><div class=\"line\">php -r &quot;if (hash_file(&apos;SHA384&apos;, &apos;composer-setup.php&apos;) === &apos;669656bab3166a7aff8a7506b8cb2d1c292f042046c5a994c43155c0be6190fa0355160742ab2e1c88d40d5be660b410&apos;) &#123; echo &apos;Installer verified&apos;; &#125; else &#123; echo &apos;Installer corrupt&apos;; unlink(&apos;composer-setup.php&apos;); &#125; echo PHP_EOL;&quot;</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">php composer-setup.php</div><div class=\"line\"></div><div class=\"line\">php -r &quot;unlink(&apos;composer-setup.php&apos;);&quot;</div></pre></td></tr></table></figure>\n<p>上述命令执行完毕后当前目录会有一个名为 「composer.par」 文件</p>\n<p>给文件可执行权限并剪切到 <code>/usr/local/bin/</code> 目录下重命名为 「composer」</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">chmod +x composer.pre</div><div class=\"line\">mv composer.pre /usr/local/bin/composer</div></pre></td></tr></table></figure>\n<p>现在可以全局运行composr 命令 ，如果不行则运行一下命令；</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">vim /etc/profile</div><div class=\"line\"></div><div class=\"line\">export PATH=&quot;$PATH:/usr/local/bin/&quot;</div></pre></td></tr></table></figure>\n<p><code>Esc    :wq</code> 保存</p>\n<h2 id=\"laravel安装\"><a href=\"#laravel安装\" class=\"headerlink\" title=\"laravel安装\"></a>laravel安装</h2><blockquote>\n<p>首先，使用 Composer 下载 Laravel 安装包：</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">composer global require &quot;laravel/installer&quot;</div></pre></td></tr></table></figure>\n<p>注意：下载速度慢可以使用下面镜像地址 打开命令行窗口（windows用户）或控制台（Linux、Mac 用户）并执行如下命令：<br><code>composer config -g repo.packagist composer https://packagist.phpcomposer.com</code></p>\n<blockquote>\n<p>将 <code>~/.composer/vendor/bin</code> 路径加到 PATH,只有这样系统才能找到 <code>laravel</code> 的执行文件,安装完成，就可以使用 <code>laravel new</code> 命令在指定目录创建一个新的 Laravel 项目.</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">vim  ~/.bashrc</div><div class=\"line\"></div><div class=\"line\">alias laravel=&apos;~/.composer/vendor/bin/laravel&apos;  </div><div class=\"line\"></div><div class=\"line\">source ~/.bashrc</div><div class=\"line\"></div><div class=\"line\">chmod -R +x  /root/.composer/vendor/laravel/    #增加Laravel执行权限</div></pre></td></tr></table></figure>\n<p>开始你的Laravel的旅程吧～。</p>\n<blockquote>\n<p>执行遇到<code>/usr/bin/env: php: No such file or directory</code> 怎么办？<br>主要是php安装文件不在 <code>/usr/local/bin</code> 。安装在 <code>/usr/local/php</code>中</p>\n</blockquote>\n<p>找到php的可执行文件，<code>/usr/local/php5513/bin/php</code></p>\n<p><code>ln -s /usr/local/php5513/bin/php /usr/local/bin/php</code></p>\n<p>把可执行文件连接过去就可以了。</p>\n<p>⚠️注意：下载laravel项目访问时候会出现空白页面是因为「bootstrap」 和 「storage」需要读写权限 </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">chmod -R 777 bootstrap/</div><div class=\"line\"></div><div class=\"line\">chmod -R 777 storage/</div></pre></td></tr></table></figure>\n"},{"title":"PHP 数组合并方法","date":"2016-10-15T16:59:21.000Z","_content":"# +运算符\n## 介绍\n>当两个数组的键名是索引数组或关联数组可以直接 「+」，`$c = $a + $b` ，在 `$a` 后追加键名和值(`$b`在`$a`中不存在的键名)。\n## 读我快速理解特点：\n不覆盖，只是追加不存在的键名和对应的值。\n键名不重新索引\n无论是全部索引数字还是混合，都只是追加键名和值，如果键名相同则不进行追加，即把最先出现的值作为最终结果返回。\n\n# array_merge函数\n## 介绍\narray_merge() 将一个或多个数组的单元合并起来，一个数组中的值附加在前一个数组的后面。返回作为结果的数组。如果输入的数组中有相同的关联数组，则该键名后面的值将覆盖前一个值。然而，如果数组包含索引数组，后面的值将不会覆盖原来的值，而是附加到后面。 如果只给了一个数组并且该数组是索引数组，则键名会以连续方式重新索引。\n## 读我快速理解特点：\n数字索引，不会覆盖，值合并后，键名会连续方式重新索引\n字符串键名，则该键名后面的值将覆盖前一个值\n\n# array_merge_recursive函数\n## 介绍\narray_merge_recursive() 将一个或多个数组的单元合并起来，一个数组中的值附加在前一个数组的后面。返回作为结果的数组。   \n\n如果输入的数组中有相同的关联数组，则这些值会被合并到一个数组中去，这将递归下去，因此如果一个值本身是一个数组，本函数将按照相应的条目把它合并为另一个数组。  \n\n然而，如果数组具有相同的数组键名，后一个值将不会覆盖原来的值，而是附加到后面。 \n## 读我快速理解特点\n规则跟array_merge基本相同，只是在处理相同字符键名的时候，采用递归追加。\n\n\n","source":"_posts/phpArrayINArr.md","raw":"---\ntitle: PHP 数组合并方法\ndate: 2016-10-16 00:59:21\ntags:\n    - 数组\ncategories: php奇淫技巧\n---\n# +运算符\n## 介绍\n>当两个数组的键名是索引数组或关联数组可以直接 「+」，`$c = $a + $b` ，在 `$a` 后追加键名和值(`$b`在`$a`中不存在的键名)。\n## 读我快速理解特点：\n不覆盖，只是追加不存在的键名和对应的值。\n键名不重新索引\n无论是全部索引数字还是混合，都只是追加键名和值，如果键名相同则不进行追加，即把最先出现的值作为最终结果返回。\n\n# array_merge函数\n## 介绍\narray_merge() 将一个或多个数组的单元合并起来，一个数组中的值附加在前一个数组的后面。返回作为结果的数组。如果输入的数组中有相同的关联数组，则该键名后面的值将覆盖前一个值。然而，如果数组包含索引数组，后面的值将不会覆盖原来的值，而是附加到后面。 如果只给了一个数组并且该数组是索引数组，则键名会以连续方式重新索引。\n## 读我快速理解特点：\n数字索引，不会覆盖，值合并后，键名会连续方式重新索引\n字符串键名，则该键名后面的值将覆盖前一个值\n\n# array_merge_recursive函数\n## 介绍\narray_merge_recursive() 将一个或多个数组的单元合并起来，一个数组中的值附加在前一个数组的后面。返回作为结果的数组。   \n\n如果输入的数组中有相同的关联数组，则这些值会被合并到一个数组中去，这将递归下去，因此如果一个值本身是一个数组，本函数将按照相应的条目把它合并为另一个数组。  \n\n然而，如果数组具有相同的数组键名，后一个值将不会覆盖原来的值，而是附加到后面。 \n## 读我快速理解特点\n规则跟array_merge基本相同，只是在处理相同字符键名的时候，采用递归追加。\n\n\n","slug":"phpArrayINArr","published":1,"updated":"2017-09-24T21:07:43.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj7zrohr1000nr1s6hjjw01n7","content":"<h1 id=\"运算符\"><a href=\"#运算符\" class=\"headerlink\" title=\"+运算符\"></a>+运算符</h1><h2 id=\"介绍\"><a href=\"#介绍\" class=\"headerlink\" title=\"介绍\"></a>介绍</h2><blockquote>\n<p>当两个数组的键名是索引数组或关联数组可以直接 「+」，<code>$c = $a + $b</code> ，在 <code>$a</code> 后追加键名和值(<code>$b</code>在<code>$a</code>中不存在的键名)。</p>\n<h2 id=\"读我快速理解特点：\"><a href=\"#读我快速理解特点：\" class=\"headerlink\" title=\"读我快速理解特点：\"></a>读我快速理解特点：</h2><p>不覆盖，只是追加不存在的键名和对应的值。<br>键名不重新索引<br>无论是全部索引数字还是混合，都只是追加键名和值，如果键名相同则不进行追加，即把最先出现的值作为最终结果返回。</p>\n</blockquote>\n<h1 id=\"array-merge函数\"><a href=\"#array-merge函数\" class=\"headerlink\" title=\"array_merge函数\"></a>array_merge函数</h1><h2 id=\"介绍-1\"><a href=\"#介绍-1\" class=\"headerlink\" title=\"介绍\"></a>介绍</h2><p>array_merge() 将一个或多个数组的单元合并起来，一个数组中的值附加在前一个数组的后面。返回作为结果的数组。如果输入的数组中有相同的关联数组，则该键名后面的值将覆盖前一个值。然而，如果数组包含索引数组，后面的值将不会覆盖原来的值，而是附加到后面。 如果只给了一个数组并且该数组是索引数组，则键名会以连续方式重新索引。</p>\n<h2 id=\"读我快速理解特点：-1\"><a href=\"#读我快速理解特点：-1\" class=\"headerlink\" title=\"读我快速理解特点：\"></a>读我快速理解特点：</h2><p>数字索引，不会覆盖，值合并后，键名会连续方式重新索引<br>字符串键名，则该键名后面的值将覆盖前一个值</p>\n<h1 id=\"array-merge-recursive函数\"><a href=\"#array-merge-recursive函数\" class=\"headerlink\" title=\"array_merge_recursive函数\"></a>array_merge_recursive函数</h1><h2 id=\"介绍-2\"><a href=\"#介绍-2\" class=\"headerlink\" title=\"介绍\"></a>介绍</h2><p>array_merge_recursive() 将一个或多个数组的单元合并起来，一个数组中的值附加在前一个数组的后面。返回作为结果的数组。   </p>\n<p>如果输入的数组中有相同的关联数组，则这些值会被合并到一个数组中去，这将递归下去，因此如果一个值本身是一个数组，本函数将按照相应的条目把它合并为另一个数组。  </p>\n<p>然而，如果数组具有相同的数组键名，后一个值将不会覆盖原来的值，而是附加到后面。 </p>\n<h2 id=\"读我快速理解特点\"><a href=\"#读我快速理解特点\" class=\"headerlink\" title=\"读我快速理解特点\"></a>读我快速理解特点</h2><p>规则跟array_merge基本相同，只是在处理相同字符键名的时候，采用递归追加。</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"运算符\"><a href=\"#运算符\" class=\"headerlink\" title=\"+运算符\"></a>+运算符</h1><h2 id=\"介绍\"><a href=\"#介绍\" class=\"headerlink\" title=\"介绍\"></a>介绍</h2><blockquote>\n<p>当两个数组的键名是索引数组或关联数组可以直接 「+」，<code>$c = $a + $b</code> ，在 <code>$a</code> 后追加键名和值(<code>$b</code>在<code>$a</code>中不存在的键名)。</p>\n<h2 id=\"读我快速理解特点：\"><a href=\"#读我快速理解特点：\" class=\"headerlink\" title=\"读我快速理解特点：\"></a>读我快速理解特点：</h2><p>不覆盖，只是追加不存在的键名和对应的值。<br>键名不重新索引<br>无论是全部索引数字还是混合，都只是追加键名和值，如果键名相同则不进行追加，即把最先出现的值作为最终结果返回。</p>\n</blockquote>\n<h1 id=\"array-merge函数\"><a href=\"#array-merge函数\" class=\"headerlink\" title=\"array_merge函数\"></a>array_merge函数</h1><h2 id=\"介绍-1\"><a href=\"#介绍-1\" class=\"headerlink\" title=\"介绍\"></a>介绍</h2><p>array_merge() 将一个或多个数组的单元合并起来，一个数组中的值附加在前一个数组的后面。返回作为结果的数组。如果输入的数组中有相同的关联数组，则该键名后面的值将覆盖前一个值。然而，如果数组包含索引数组，后面的值将不会覆盖原来的值，而是附加到后面。 如果只给了一个数组并且该数组是索引数组，则键名会以连续方式重新索引。</p>\n<h2 id=\"读我快速理解特点：-1\"><a href=\"#读我快速理解特点：-1\" class=\"headerlink\" title=\"读我快速理解特点：\"></a>读我快速理解特点：</h2><p>数字索引，不会覆盖，值合并后，键名会连续方式重新索引<br>字符串键名，则该键名后面的值将覆盖前一个值</p>\n<h1 id=\"array-merge-recursive函数\"><a href=\"#array-merge-recursive函数\" class=\"headerlink\" title=\"array_merge_recursive函数\"></a>array_merge_recursive函数</h1><h2 id=\"介绍-2\"><a href=\"#介绍-2\" class=\"headerlink\" title=\"介绍\"></a>介绍</h2><p>array_merge_recursive() 将一个或多个数组的单元合并起来，一个数组中的值附加在前一个数组的后面。返回作为结果的数组。   </p>\n<p>如果输入的数组中有相同的关联数组，则这些值会被合并到一个数组中去，这将递归下去，因此如果一个值本身是一个数组，本函数将按照相应的条目把它合并为另一个数组。  </p>\n<p>然而，如果数组具有相同的数组键名，后一个值将不会覆盖原来的值，而是附加到后面。 </p>\n<h2 id=\"读我快速理解特点\"><a href=\"#读我快速理解特点\" class=\"headerlink\" title=\"读我快速理解特点\"></a>读我快速理解特点</h2><p>规则跟array_merge基本相同，只是在处理相同字符键名的时候，采用递归追加。</p>\n"},{"title":"Mysql的左链接和右链接区别","date":"2016-10-02T18:35:44.000Z","_content":"\n很多人在学习活面试的时候会听到这样的问题：Mysql的左链接和右链接有什么区别？\n\n简单的理解：\n    左连接: 左表所有与右表满足条件的\n    右连接: 右表所有与左表满足条件的\n<!--more-->\n\n例子，相信你一看就明白，不需要多说 \n\n```\nA表(a1,b1,c1)        B表(a2,b2) \na1 b1 c1               a2 b2 \n01 数学 95              01 张三 \n02 语文 90              02 李四 \n03 英语 80              04 王五\n``` \n\n左链接\n`select A.*,B.* from A left outer join B on(A.a1=B.a2)`\n结果是: \n\n```\na1 b1 c1 a2 b2 \n01 数学 95 01 张三 \n02 语文 90 02 李四 \n03 英语 80 NULL NULL \n```\n\n右链接\n`select A.*,B.* from A right outer join B on(A.a1=B.a2)`\n结果是: \n\n```\na1 b1 c1 a2 b2 \n01 数学 95 01 张三 \n02 语文 90 02 李四 \nNULL NULL NULL 04 王五\n```\n\n\n","source":"_posts/mysqlJOIN.md","raw":"---\ntitle: Mysql的左链接和右链接区别\ndate: 2016-10-03 02:35:44\ntags:\n    - mysql\ncategories: 数据库\n---\n\n很多人在学习活面试的时候会听到这样的问题：Mysql的左链接和右链接有什么区别？\n\n简单的理解：\n    左连接: 左表所有与右表满足条件的\n    右连接: 右表所有与左表满足条件的\n<!--more-->\n\n例子，相信你一看就明白，不需要多说 \n\n```\nA表(a1,b1,c1)        B表(a2,b2) \na1 b1 c1               a2 b2 \n01 数学 95              01 张三 \n02 语文 90              02 李四 \n03 英语 80              04 王五\n``` \n\n左链接\n`select A.*,B.* from A left outer join B on(A.a1=B.a2)`\n结果是: \n\n```\na1 b1 c1 a2 b2 \n01 数学 95 01 张三 \n02 语文 90 02 李四 \n03 英语 80 NULL NULL \n```\n\n右链接\n`select A.*,B.* from A right outer join B on(A.a1=B.a2)`\n结果是: \n\n```\na1 b1 c1 a2 b2 \n01 数学 95 01 张三 \n02 语文 90 02 李四 \nNULL NULL NULL 04 王五\n```\n\n\n","slug":"mysqlJOIN","published":1,"updated":"2017-09-24T21:06:28.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj7zrohr3000pr1s6j05xbq4w","content":"<p>很多人在学习活面试的时候会听到这样的问题：Mysql的左链接和右链接有什么区别？</p>\n<p>简单的理解：<br>    左连接: 左表所有与右表满足条件的<br>    右连接: 右表所有与左表满足条件的<br><a id=\"more\"></a></p>\n<p>例子，相信你一看就明白，不需要多说 </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">A表(a1,b1,c1)        B表(a2,b2) </div><div class=\"line\">a1 b1 c1               a2 b2 </div><div class=\"line\">01 数学 95              01 张三 </div><div class=\"line\">02 语文 90              02 李四 </div><div class=\"line\">03 英语 80              04 王五</div><div class=\"line\">``` </div><div class=\"line\"></div><div class=\"line\">左链接</div><div class=\"line\">`select A.*,B.* from A left outer join B on(A.a1=B.a2)`</div><div class=\"line\">结果是:</div></pre></td></tr></table></figure>\n<p>a1 b1 c1 a2 b2<br>01 数学 95 01 张三<br>02 语文 90 02 李四<br>03 英语 80 NULL NULL<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">右链接</div><div class=\"line\">`select A.*,B.* from A right outer join B on(A.a1=B.a2)`</div><div class=\"line\">结果是:</div></pre></td></tr></table></figure></p>\n<p>a1 b1 c1 a2 b2<br>01 数学 95 01 张三<br>02 语文 90 02 李四<br>NULL NULL NULL 04 王五<br>```</p>\n","site":{"data":{}},"excerpt":"<p>很多人在学习活面试的时候会听到这样的问题：Mysql的左链接和右链接有什么区别？</p>\n<p>简单的理解：<br>    左连接: 左表所有与右表满足条件的<br>    右连接: 右表所有与左表满足条件的<br>","more":"</p>\n<p>例子，相信你一看就明白，不需要多说 </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">A表(a1,b1,c1)        B表(a2,b2) </div><div class=\"line\">a1 b1 c1               a2 b2 </div><div class=\"line\">01 数学 95              01 张三 </div><div class=\"line\">02 语文 90              02 李四 </div><div class=\"line\">03 英语 80              04 王五</div><div class=\"line\">``` </div><div class=\"line\"></div><div class=\"line\">左链接</div><div class=\"line\">`select A.*,B.* from A left outer join B on(A.a1=B.a2)`</div><div class=\"line\">结果是:</div></pre></td></tr></table></figure>\n<p>a1 b1 c1 a2 b2<br>01 数学 95 01 张三<br>02 语文 90 02 李四<br>03 英语 80 NULL NULL<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">右链接</div><div class=\"line\">`select A.*,B.* from A right outer join B on(A.a1=B.a2)`</div><div class=\"line\">结果是:</div></pre></td></tr></table></figure></p>\n<p>a1 b1 c1 a2 b2<br>01 数学 95 01 张三<br>02 语文 90 02 李四<br>NULL NULL NULL 04 王五<br>```</p>"},{"title":"php必须掌握的基础知识","date":"2016-08-21T17:33:51.000Z","_content":"# php必须掌握的基础知识\nPHP的数据类型\n字符串（string） 整形（integer） 浮点型（float或者double） 布尔型（boolean） 数组（Array） 对象（Object） 资源（Resource）\n## 字符串\n页面中需要显示的文字，在PHP代码中我们使用单引号或者双引号包含 作为一些技巧性的使用，如果字符串中含有单引号，那么字符串可以使用双引号包含 $var = “‘foo'”; 同理，如果字符串中含有双引号，则可以使用单引号包含 $var = ‘”bar”‘; 如果双引号包含的字符串中要显示双引号，或者单引号包含的字符串中要显示单引号，我们可以添加转义符（一个斜杠\\） $var = ‘\\’foo\\”;\u000b$var = “\\”bar\\””;\n## 单引号和双引号\nPHP中字符串使用单引号还是双引号并没有严格的约定 实际上，引号是可以随意使用的，只要注意不要混用，引号必须配对即可 唯一的不同就是变量的问题，双引号中可以直接将变量转换为值，而单引号不行，请问下面的代码会输出什么？\n\n\n```\n$name = “andy”;\necho ‘my name is $name’;\necho “my name is $name”;\n```\n \nPHP初学者最容易犯的一个错误就是忘记给文字加引号 “hello” 这是字符串 $hello 这是变量 hello 系统会认为这是一个常量\n常见的十进制整型我们无需多说 $var = 100; // 使用var_dump输出是int(100) 另外，在PHP中，我们还可以设置其他进制的整型\n \n## 运算与赋值\n简单的说就是我们平时常用的加减乘除运算，我们下面会重点介绍一下浮点数加减的问题，%的使用场合，以及++和—的使用\n+\t加法运算\n–\t减法运算\n*\t乘法运算\n/\t除法运算\n%\t求余运算\n++\t递增运算（加1）\n—-\t递减运算（减1）\n3.使用number_format，我们可以将一个小数的小数点后的位数保留到指定的值 string number_format ( float $number [, int $decimals = 0 ] ) 将浮点数作为第一个参数传递，第二个参数设置小数点后保留的位数 echo number_format($x – $y, 2); // 结果为0.07\n## 取余操作%\n假设，我们有42篇文章，我们打算一页显示10篇，则从数学方面来分析，最后一页显示几篇文章？\n整数商为4 余数 = 42 – 4*10 = 2 相当于PHP的计算 42 % 10 = 2\n## 递增和递减\n$var–; 相当于执行 $var = $var – 1; 同理，$var++相当于执行 $var = $var + 1;\n单个变量直接执行递增或者递减，不论符号放在左侧还是右侧都没有差别。 $var = 10; $var–; // 或者 –$var echo $var; // 结果都是9 但是，作为PHP的一个特殊性，如果操作符在赋值语句右侧的话，需要区分前后顺序 $var = 10; $output = $var–; // 或者 $output = –$var; echo $output; // 两个结果一个是10另一个是9 $output = $var–;相当于先将$var赋值给$output再执行递减运算\n## 字符串运算符\nPHP的字符串运算符只有一个，就是我们常说的连字符.（一个英文的点号），使用它我们可以将几段文字连接在一起显示 $str = “i”;     \u000becho $str . “phone”; // 输出iphone\u000becho $str . 123; // 输出i123\u000b$str2 = “pad”;\u000becho $str . $str2; // 输出ipad\n连字符的大量使用，会导致文本难以阅读，代码凌乱，推荐使用格式化输出，假设有两个变量$num和$loc，分别表示数量和地点 $num = 5;\u000b$loc = “树”; 如果直接用连字符输出下面的文字 echo $loc . “上有” . $num . “只猴子”;\n## sprintf\n上面的代码很难看出来要显示的是什么文字，使用sprintf函数来代替 $format = ‘%s上有%d只猴子’;\u000becho sprintf($format, $loc, $num);\n## 赋值运算符\n赋值运算实际上是将右侧表达式的值赋给左侧变量；或者说是将原表达式的值拷贝到新变量中\n=\t赋值\t右侧表达式的值赋给左侧变量\n+=\t赋值加\t左侧原变量加上右侧变量后，值赋给原变量\n-=\t赋值减\t左侧原变量减去右側变量后，值赋给原变量\n*=\t赋值乘\t左侧原变量乘以右侧变量后，值赋给原变量\n/=\t赋值除\t左侧原变量除以右侧变量后，值赋给原变量\n%=\t赋值取余\t左侧原变量与右侧变量取余，值赋给原变量\n.=\t字符串赋值\t左侧变量后连接到右侧原变量后，值赋给原变量\n## 加减乘除赋值\n+=、-=、*=、/=、%=、.= 上面六个运算符，看复杂，实际上只是一种 缩写 A ?= B 全部都可以理解为 A = A ? B 其中?代表任意的运算符号，因此 $foo += $bar;  相当于执行了 $foo = $foo + $bar;\n## 字符串赋值.=\n字符串赋值平时最常用的用法是用来连接大段的文本，看下面的例子： $html = “<html>”;\u000b$html .= “<head>”;\u000b$html .= “<title>”  . $title . “</title>”;\u000b$html .= “</head>”;\u000b$html .= “<body>”;\u000b// ……\u000becho $html; 当我们需要将很多段的文本片段连接到一起，又想保持代码的整洁，同时让逻辑看起来也很清晰，就可以是使用字符串赋值，实际上使用heredoc更清晰简单。\n## 比较运算符\n比较运算符负责条件判断、比较等操作，是程序中经常被用到的一种运算符。比较运算的结果只有两种：要么是“真”，要么是“假”。\n运算符\t功能\t说明\n\\>\t大于\t运算符左边表达式值大于右边表达式值时，返回true\n<\t小于\t运算符左边表达式值小于右边表达式值时，返回true\n\\>=\t大于等于\t运算符左边表达式值大于等于右边表达式值时，返回true\n<=\t小于等于\t运算符左边表达式值小于等于右边表达式值时，返回true\n==\t相等\t运算符左右两边表达式的值相等，返回true\n!=\t不等\t运算符左右两边表达式的值不相等，返回true\n<>\t不等\t运算符左右两边表达式的值不相等，返回true\n \n## 比较运算符\n基本的比较运算符我们不用多介绍，下面介绍一种比较特殊的比较运算符：恒等。在判断值是否相等的前提下，还会判断类型是否一样\n运算符\t功能\t说明\n===\t恒等\t运算符左右两边表达式的值相等并且类型一样，返回true\n!==\t非恒等\t运算符左右两边表达式的值不相等或者类型不一样，返回true\n在PHP中，下面所有的值都表示空：null、false、array()、””、0、”0″。 如果使用==，则 null == false、0 == “0”、null== array()、false == “”……都是返回true，而使用===则会返回false\n## 逻辑运算符\n逻辑运算有点类似前面讲过的位运算的方式，但逻辑运算更侧重在程序书写和日常开发中使用，比如 if switch 语句等。PHP提供了逻辑与、或、异或、非等逻辑运算符。\nAND\t逻辑与\t当所有表达式为true时，返回true，否则返回false\nOR\t逻辑或\t当所有表达式为false时，返回false，否则返回true\nXOR\t逻辑异或\t只有一个表达式为true时，返回true，否则返回false\n&&\t逻辑与\t当所有表达式为true时，返回true，否则返回false\n||\t逻辑或\t当所有表达式为false时，返回false，否则返回true\n!\t逻辑非\t当表达式为true时返回false，反之返回true\n假设： $x = 8; \u000b$y = 6; 那么： $x + $y > 10; // 返回的是真\u000b$x – $y < 0; // 返回的是假 把两个比较运算放在一起进行逻辑运算的结果是什么？ $result = ($x + $y > 10) && ($x – $y < 0);\u000b$result = ($x + $y > 10) || ($x – $y < 0);\u000b$result = !($x – $y < 0);\n \n## 条件语句\n简单的IF语句由两部分组成，expr是我们的表达式，而statement是我们需要执行的代码；当expr为true的时候，statement被执行；反之，则被忽略 if (expr) statement expr必须放在一对圆括号中间\nif ($dir == ‘west’)\necho ‘西’;\n还是前面的代码，我么稍作修改，执行的结果应该是什么？\n$dir = ‘east’;\u000b if ($dir == ‘west’)\u000b  {\necho ‘当前方向为’;\n} else {\necho ‘西’;\n}\n有时候我们不仅仅需要判断当expr条件为true时执行什么语句，另外，当expr条件为false时需要执行什么 if ($dir == ‘west’) {\u000b    echo ‘西’;\u000b} else {\u000b    echo ‘其它方向’;\u000b}\n \n## 三目运算符\nPHP有一个特殊的运算符，我们在之前学习运算符的时候并没有介绍，在学习了if和else语句后，我们可以介绍了 ```(expr1) ? (expr2) : (expr3)``` 当expr1条件为真时，值为expr2，否则值为expr3 下面的代码可以代替前面的```if else```语句 ```echo $dir == ‘west’ ? ‘西’ : ‘其它方向’;```\n多个条件组合\n```\nif ($dir == ‘west’) {\u000b        echo “西”;\u000b} else {\u000b    if ($dir == ‘east’) {\u000b        echo “东”;\u000b    } else {\u000b        if ($dir == ‘north’) {\u000b            echo “北”;\u000b        } else {\u000b            if ($dir == ‘sourth’) {\u000b                echo “南”;\u000b            } else {\u000b                echo “未知”;\u000b            }\u000b        }\u000b    }\u000b}\n```\n## switch语句\nswitch 语句类似于具有同一个表达式的一系列 if 语句 每个case会依次判断，expr与expr1..n是否相等，如果相等则执行对应的statement，如果最后有break，则执行完成后跳出switch语句 default是在所有case都无法满足的情况下默认执行的操作\nswitch (expr) { case expr1: statement; break; case expr2: statement; break; …… default: statement; }\n## 数组\n数组提供了一种快速，方便地管理一组相关数据的方法，是php程序设计中的重要内容。 php中将数组分为一维数组，二维数组和多维数组，但无论是一维还是多维，可以统一将数组分为数字索引数组和关联数组两种。\n## 索引数组\n这是最常见的数组类型，绝大多数编程语言都有数字索引数组 我们可以使用array()来初始化数组，每个数组元素之间使用逗号分隔 $names = array();\u000b$names = array(‘andy’, ‘tom’, ‘jack’);\n第一个是一个空数组，第二个数组的元素个数是3 PHP 5.4之后，数组的初始化可以使用更简洁的方式 $names = [];\u000b$names = [‘andy’, ‘tom’, ‘jack’];\n## count函数\n我们可以使用count函数来统计数组中元素的个数 int count ( mixed $var [, int $mode = COUNT_NORMAL ] ) echo count($names); 第二跟个参数，我们会在介绍数组维度时学习\n## 打印数组\n我们一般使用print_r来打印数组（当然用var_dump也可以，但是结构上不清晰） bool print_r ( mixed $expression [, bool $return ] ) 请尝试打印 print_r($names); 当第二个参数为true时，print_r不会直接打印数组，而是将打印的内容作为字符串返回 echo print_r($names, true);\n获取数组元素\n索引数组中的每个元素都有一个自增长的序号，默认情况下，0表示第一个元素，对于 $names = [‘andy’, ‘tom’, ‘jack’]; 我们可以使用数组变量名后面加方括号的方式来获取数组中的元素，譬如，用$names[0]来获取到andy，同理$names[2]代表jack\n## 关联数组\n$info = [\u000b    ‘name’ => ‘andy’, \u000b    ‘age’ => 18, \u000b    ‘gender’ => ‘male’\u000b]; 关联数组使用数字下标是无法获取数据的，譬如$info[0]的值是空，我们需要使用键作为下标$info[‘age’]的值是18\n## 数组的维度：一维\n$arr = [‘王刚’, ‘张丽’, ‘刘伟’]; 假设数组变量名为$arr，获取“张丽”的方式：$arr[1]\n多维数组\n超过一维的数组，我们都可以称为多维数组 我们需要明白，数组不一定就是一个下标和值的简单列表，实际上，数组中的每个元素还可以是另一个数组 因此如果一维数组中的数组元素又是一个数组，那么它就成为了二维数组\n## 数组的维度：二维\n$arr = [\u000b    [‘王刚’, ‘张丽’, ‘刘伟’],\u000b    [‘孙丽’, ‘李强’, ‘李国庆’],\u000b    [‘赵园园’, ‘丁丽丽’]\u000b]; echo count($arr);\u000becho count($arr, true);\n$arr = [\u000b    [\u000b        [‘王刚’, ‘张丽’, ‘刘伟’],\u000b        [‘孙丽’, ‘李强’, ‘李国庆’],\u000b        [‘赵园园’, ‘丁丽丽’]\u000b    ],\u000b    [\u000b        [‘宋红’, ‘马小丽’],\u000b        [‘张颖’, ‘刘军’, ‘黄涛’],\u000b        [‘杜磊’, ‘朱婷婷’]\u000b    ],\u000b]; echo count($arr);\u000becho count($arr, true);\n## 循环\n在程序开发中总会有一些规律性的重复操作 我们需要让一段代码块重复的执行，譬如： 输出重复的文字（构造表格）； 对一组数据执行相同的计算（数组遍历）； 操作失败后的再次执行…… 循环都是由循环体和循环条件组成，循环体代表需要重复执行的代码快，而循环条件代表循环终止的依据\n## for循环\nfor循环实际上可以看作是一个紧凑、简洁版的while循环 for (expr1; expr2; expr3) statement for循环有三个表达式 第一个表达式expr1在循环开始的时候只执行一次 第二个表达式expr2在循环体的每次循环开始的时候执行，如果执行的结果是true，循环继续进行，如果发现是false，循环结束 第三个表达式expr3在循环体的每次循环结束的时候执行\n## foreach循环\n实际上PHP还有一个特殊的循环语句，这个循环语句是专门用来遍历数组的 foreach (array_variable as val) statement array_variable代表一个数组变量，在每次循环执行时，每个元素的值会被临时赋给变量val，statement语句每次获取到的val的值都不一样，体会一下下面的代码 foreach ($arr as $item) {\u000b  echo “<” . $item . “>”;\u000b}\n## foreach获取下标的值\nforeach还有另外一种用法，定义如下 foreach (array_variable as key => val) statement \u000bkey代表数组的下标，val代表数组的值，那么对于数字下标数组来说，每次循环中key的值就是从0开始子增长的数字。 那么对于关联数组呢？大家请自行尝试\n## break和continue\n如果在循环的代码块中希望停止代码的执行，我们可以使用break或者continue break 跳出循环，并且循环不再执行 continue 跳出当前循环，循环继续执行，进入下一次循环 这就跟我们下象棋一样，有些人棋品不好，眼看要输了，掀了棋盘，这就是break。 还有的人心态很好，眼看要输了，后面也甭下了，认输再来一局，这就是continue。\n## 类的静态函数 可以不用实例化调用！\n\n\n\n","source":"_posts/phplore.md","raw":"---\ntitle: php必须掌握的基础知识\ndate: 2016-08-22 01:33:51\ntags:\n    -PHP\ncategories: php奇淫技巧\n---\n# php必须掌握的基础知识\nPHP的数据类型\n字符串（string） 整形（integer） 浮点型（float或者double） 布尔型（boolean） 数组（Array） 对象（Object） 资源（Resource）\n## 字符串\n页面中需要显示的文字，在PHP代码中我们使用单引号或者双引号包含 作为一些技巧性的使用，如果字符串中含有单引号，那么字符串可以使用双引号包含 $var = “‘foo'”; 同理，如果字符串中含有双引号，则可以使用单引号包含 $var = ‘”bar”‘; 如果双引号包含的字符串中要显示双引号，或者单引号包含的字符串中要显示单引号，我们可以添加转义符（一个斜杠\\） $var = ‘\\’foo\\”;\u000b$var = “\\”bar\\””;\n## 单引号和双引号\nPHP中字符串使用单引号还是双引号并没有严格的约定 实际上，引号是可以随意使用的，只要注意不要混用，引号必须配对即可 唯一的不同就是变量的问题，双引号中可以直接将变量转换为值，而单引号不行，请问下面的代码会输出什么？\n\n\n```\n$name = “andy”;\necho ‘my name is $name’;\necho “my name is $name”;\n```\n \nPHP初学者最容易犯的一个错误就是忘记给文字加引号 “hello” 这是字符串 $hello 这是变量 hello 系统会认为这是一个常量\n常见的十进制整型我们无需多说 $var = 100; // 使用var_dump输出是int(100) 另外，在PHP中，我们还可以设置其他进制的整型\n \n## 运算与赋值\n简单的说就是我们平时常用的加减乘除运算，我们下面会重点介绍一下浮点数加减的问题，%的使用场合，以及++和—的使用\n+\t加法运算\n–\t减法运算\n*\t乘法运算\n/\t除法运算\n%\t求余运算\n++\t递增运算（加1）\n—-\t递减运算（减1）\n3.使用number_format，我们可以将一个小数的小数点后的位数保留到指定的值 string number_format ( float $number [, int $decimals = 0 ] ) 将浮点数作为第一个参数传递，第二个参数设置小数点后保留的位数 echo number_format($x – $y, 2); // 结果为0.07\n## 取余操作%\n假设，我们有42篇文章，我们打算一页显示10篇，则从数学方面来分析，最后一页显示几篇文章？\n整数商为4 余数 = 42 – 4*10 = 2 相当于PHP的计算 42 % 10 = 2\n## 递增和递减\n$var–; 相当于执行 $var = $var – 1; 同理，$var++相当于执行 $var = $var + 1;\n单个变量直接执行递增或者递减，不论符号放在左侧还是右侧都没有差别。 $var = 10; $var–; // 或者 –$var echo $var; // 结果都是9 但是，作为PHP的一个特殊性，如果操作符在赋值语句右侧的话，需要区分前后顺序 $var = 10; $output = $var–; // 或者 $output = –$var; echo $output; // 两个结果一个是10另一个是9 $output = $var–;相当于先将$var赋值给$output再执行递减运算\n## 字符串运算符\nPHP的字符串运算符只有一个，就是我们常说的连字符.（一个英文的点号），使用它我们可以将几段文字连接在一起显示 $str = “i”;     \u000becho $str . “phone”; // 输出iphone\u000becho $str . 123; // 输出i123\u000b$str2 = “pad”;\u000becho $str . $str2; // 输出ipad\n连字符的大量使用，会导致文本难以阅读，代码凌乱，推荐使用格式化输出，假设有两个变量$num和$loc，分别表示数量和地点 $num = 5;\u000b$loc = “树”; 如果直接用连字符输出下面的文字 echo $loc . “上有” . $num . “只猴子”;\n## sprintf\n上面的代码很难看出来要显示的是什么文字，使用sprintf函数来代替 $format = ‘%s上有%d只猴子’;\u000becho sprintf($format, $loc, $num);\n## 赋值运算符\n赋值运算实际上是将右侧表达式的值赋给左侧变量；或者说是将原表达式的值拷贝到新变量中\n=\t赋值\t右侧表达式的值赋给左侧变量\n+=\t赋值加\t左侧原变量加上右侧变量后，值赋给原变量\n-=\t赋值减\t左侧原变量减去右側变量后，值赋给原变量\n*=\t赋值乘\t左侧原变量乘以右侧变量后，值赋给原变量\n/=\t赋值除\t左侧原变量除以右侧变量后，值赋给原变量\n%=\t赋值取余\t左侧原变量与右侧变量取余，值赋给原变量\n.=\t字符串赋值\t左侧变量后连接到右侧原变量后，值赋给原变量\n## 加减乘除赋值\n+=、-=、*=、/=、%=、.= 上面六个运算符，看复杂，实际上只是一种 缩写 A ?= B 全部都可以理解为 A = A ? B 其中?代表任意的运算符号，因此 $foo += $bar;  相当于执行了 $foo = $foo + $bar;\n## 字符串赋值.=\n字符串赋值平时最常用的用法是用来连接大段的文本，看下面的例子： $html = “<html>”;\u000b$html .= “<head>”;\u000b$html .= “<title>”  . $title . “</title>”;\u000b$html .= “</head>”;\u000b$html .= “<body>”;\u000b// ……\u000becho $html; 当我们需要将很多段的文本片段连接到一起，又想保持代码的整洁，同时让逻辑看起来也很清晰，就可以是使用字符串赋值，实际上使用heredoc更清晰简单。\n## 比较运算符\n比较运算符负责条件判断、比较等操作，是程序中经常被用到的一种运算符。比较运算的结果只有两种：要么是“真”，要么是“假”。\n运算符\t功能\t说明\n\\>\t大于\t运算符左边表达式值大于右边表达式值时，返回true\n<\t小于\t运算符左边表达式值小于右边表达式值时，返回true\n\\>=\t大于等于\t运算符左边表达式值大于等于右边表达式值时，返回true\n<=\t小于等于\t运算符左边表达式值小于等于右边表达式值时，返回true\n==\t相等\t运算符左右两边表达式的值相等，返回true\n!=\t不等\t运算符左右两边表达式的值不相等，返回true\n<>\t不等\t运算符左右两边表达式的值不相等，返回true\n \n## 比较运算符\n基本的比较运算符我们不用多介绍，下面介绍一种比较特殊的比较运算符：恒等。在判断值是否相等的前提下，还会判断类型是否一样\n运算符\t功能\t说明\n===\t恒等\t运算符左右两边表达式的值相等并且类型一样，返回true\n!==\t非恒等\t运算符左右两边表达式的值不相等或者类型不一样，返回true\n在PHP中，下面所有的值都表示空：null、false、array()、””、0、”0″。 如果使用==，则 null == false、0 == “0”、null== array()、false == “”……都是返回true，而使用===则会返回false\n## 逻辑运算符\n逻辑运算有点类似前面讲过的位运算的方式，但逻辑运算更侧重在程序书写和日常开发中使用，比如 if switch 语句等。PHP提供了逻辑与、或、异或、非等逻辑运算符。\nAND\t逻辑与\t当所有表达式为true时，返回true，否则返回false\nOR\t逻辑或\t当所有表达式为false时，返回false，否则返回true\nXOR\t逻辑异或\t只有一个表达式为true时，返回true，否则返回false\n&&\t逻辑与\t当所有表达式为true时，返回true，否则返回false\n||\t逻辑或\t当所有表达式为false时，返回false，否则返回true\n!\t逻辑非\t当表达式为true时返回false，反之返回true\n假设： $x = 8; \u000b$y = 6; 那么： $x + $y > 10; // 返回的是真\u000b$x – $y < 0; // 返回的是假 把两个比较运算放在一起进行逻辑运算的结果是什么？ $result = ($x + $y > 10) && ($x – $y < 0);\u000b$result = ($x + $y > 10) || ($x – $y < 0);\u000b$result = !($x – $y < 0);\n \n## 条件语句\n简单的IF语句由两部分组成，expr是我们的表达式，而statement是我们需要执行的代码；当expr为true的时候，statement被执行；反之，则被忽略 if (expr) statement expr必须放在一对圆括号中间\nif ($dir == ‘west’)\necho ‘西’;\n还是前面的代码，我么稍作修改，执行的结果应该是什么？\n$dir = ‘east’;\u000b if ($dir == ‘west’)\u000b  {\necho ‘当前方向为’;\n} else {\necho ‘西’;\n}\n有时候我们不仅仅需要判断当expr条件为true时执行什么语句，另外，当expr条件为false时需要执行什么 if ($dir == ‘west’) {\u000b    echo ‘西’;\u000b} else {\u000b    echo ‘其它方向’;\u000b}\n \n## 三目运算符\nPHP有一个特殊的运算符，我们在之前学习运算符的时候并没有介绍，在学习了if和else语句后，我们可以介绍了 ```(expr1) ? (expr2) : (expr3)``` 当expr1条件为真时，值为expr2，否则值为expr3 下面的代码可以代替前面的```if else```语句 ```echo $dir == ‘west’ ? ‘西’ : ‘其它方向’;```\n多个条件组合\n```\nif ($dir == ‘west’) {\u000b        echo “西”;\u000b} else {\u000b    if ($dir == ‘east’) {\u000b        echo “东”;\u000b    } else {\u000b        if ($dir == ‘north’) {\u000b            echo “北”;\u000b        } else {\u000b            if ($dir == ‘sourth’) {\u000b                echo “南”;\u000b            } else {\u000b                echo “未知”;\u000b            }\u000b        }\u000b    }\u000b}\n```\n## switch语句\nswitch 语句类似于具有同一个表达式的一系列 if 语句 每个case会依次判断，expr与expr1..n是否相等，如果相等则执行对应的statement，如果最后有break，则执行完成后跳出switch语句 default是在所有case都无法满足的情况下默认执行的操作\nswitch (expr) { case expr1: statement; break; case expr2: statement; break; …… default: statement; }\n## 数组\n数组提供了一种快速，方便地管理一组相关数据的方法，是php程序设计中的重要内容。 php中将数组分为一维数组，二维数组和多维数组，但无论是一维还是多维，可以统一将数组分为数字索引数组和关联数组两种。\n## 索引数组\n这是最常见的数组类型，绝大多数编程语言都有数字索引数组 我们可以使用array()来初始化数组，每个数组元素之间使用逗号分隔 $names = array();\u000b$names = array(‘andy’, ‘tom’, ‘jack’);\n第一个是一个空数组，第二个数组的元素个数是3 PHP 5.4之后，数组的初始化可以使用更简洁的方式 $names = [];\u000b$names = [‘andy’, ‘tom’, ‘jack’];\n## count函数\n我们可以使用count函数来统计数组中元素的个数 int count ( mixed $var [, int $mode = COUNT_NORMAL ] ) echo count($names); 第二跟个参数，我们会在介绍数组维度时学习\n## 打印数组\n我们一般使用print_r来打印数组（当然用var_dump也可以，但是结构上不清晰） bool print_r ( mixed $expression [, bool $return ] ) 请尝试打印 print_r($names); 当第二个参数为true时，print_r不会直接打印数组，而是将打印的内容作为字符串返回 echo print_r($names, true);\n获取数组元素\n索引数组中的每个元素都有一个自增长的序号，默认情况下，0表示第一个元素，对于 $names = [‘andy’, ‘tom’, ‘jack’]; 我们可以使用数组变量名后面加方括号的方式来获取数组中的元素，譬如，用$names[0]来获取到andy，同理$names[2]代表jack\n## 关联数组\n$info = [\u000b    ‘name’ => ‘andy’, \u000b    ‘age’ => 18, \u000b    ‘gender’ => ‘male’\u000b]; 关联数组使用数字下标是无法获取数据的，譬如$info[0]的值是空，我们需要使用键作为下标$info[‘age’]的值是18\n## 数组的维度：一维\n$arr = [‘王刚’, ‘张丽’, ‘刘伟’]; 假设数组变量名为$arr，获取“张丽”的方式：$arr[1]\n多维数组\n超过一维的数组，我们都可以称为多维数组 我们需要明白，数组不一定就是一个下标和值的简单列表，实际上，数组中的每个元素还可以是另一个数组 因此如果一维数组中的数组元素又是一个数组，那么它就成为了二维数组\n## 数组的维度：二维\n$arr = [\u000b    [‘王刚’, ‘张丽’, ‘刘伟’],\u000b    [‘孙丽’, ‘李强’, ‘李国庆’],\u000b    [‘赵园园’, ‘丁丽丽’]\u000b]; echo count($arr);\u000becho count($arr, true);\n$arr = [\u000b    [\u000b        [‘王刚’, ‘张丽’, ‘刘伟’],\u000b        [‘孙丽’, ‘李强’, ‘李国庆’],\u000b        [‘赵园园’, ‘丁丽丽’]\u000b    ],\u000b    [\u000b        [‘宋红’, ‘马小丽’],\u000b        [‘张颖’, ‘刘军’, ‘黄涛’],\u000b        [‘杜磊’, ‘朱婷婷’]\u000b    ],\u000b]; echo count($arr);\u000becho count($arr, true);\n## 循环\n在程序开发中总会有一些规律性的重复操作 我们需要让一段代码块重复的执行，譬如： 输出重复的文字（构造表格）； 对一组数据执行相同的计算（数组遍历）； 操作失败后的再次执行…… 循环都是由循环体和循环条件组成，循环体代表需要重复执行的代码快，而循环条件代表循环终止的依据\n## for循环\nfor循环实际上可以看作是一个紧凑、简洁版的while循环 for (expr1; expr2; expr3) statement for循环有三个表达式 第一个表达式expr1在循环开始的时候只执行一次 第二个表达式expr2在循环体的每次循环开始的时候执行，如果执行的结果是true，循环继续进行，如果发现是false，循环结束 第三个表达式expr3在循环体的每次循环结束的时候执行\n## foreach循环\n实际上PHP还有一个特殊的循环语句，这个循环语句是专门用来遍历数组的 foreach (array_variable as val) statement array_variable代表一个数组变量，在每次循环执行时，每个元素的值会被临时赋给变量val，statement语句每次获取到的val的值都不一样，体会一下下面的代码 foreach ($arr as $item) {\u000b  echo “<” . $item . “>”;\u000b}\n## foreach获取下标的值\nforeach还有另外一种用法，定义如下 foreach (array_variable as key => val) statement \u000bkey代表数组的下标，val代表数组的值，那么对于数字下标数组来说，每次循环中key的值就是从0开始子增长的数字。 那么对于关联数组呢？大家请自行尝试\n## break和continue\n如果在循环的代码块中希望停止代码的执行，我们可以使用break或者continue break 跳出循环，并且循环不再执行 continue 跳出当前循环，循环继续执行，进入下一次循环 这就跟我们下象棋一样，有些人棋品不好，眼看要输了，掀了棋盘，这就是break。 还有的人心态很好，眼看要输了，后面也甭下了，认输再来一局，这就是continue。\n## 类的静态函数 可以不用实例化调用！\n\n\n\n","slug":"phplore","published":1,"updated":"2017-09-24T21:07:34.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj7zrohr8000ur1s6cddizlxi","content":"<h1 id=\"php必须掌握的基础知识\"><a href=\"#php必须掌握的基础知识\" class=\"headerlink\" title=\"php必须掌握的基础知识\"></a>php必须掌握的基础知识</h1><p>PHP的数据类型<br>字符串（string） 整形（integer） 浮点型（float或者double） 布尔型（boolean） 数组（Array） 对象（Object） 资源（Resource）</p>\n<h2 id=\"字符串\"><a href=\"#字符串\" class=\"headerlink\" title=\"字符串\"></a>字符串</h2><p>页面中需要显示的文字，在PHP代码中我们使用单引号或者双引号包含 作为一些技巧性的使用，如果字符串中含有单引号，那么字符串可以使用双引号包含 $var = “‘foo’”; 同理，如果字符串中含有双引号，则可以使用单引号包含 $var = ‘”bar”‘; 如果双引号包含的字符串中要显示双引号，或者单引号包含的字符串中要显示单引号，我们可以添加转义符（一个斜杠\\） $var = ‘\\’foo\\”;\u000b$var = “\\”bar\\””;</p>\n<h2 id=\"单引号和双引号\"><a href=\"#单引号和双引号\" class=\"headerlink\" title=\"单引号和双引号\"></a>单引号和双引号</h2><p>PHP中字符串使用单引号还是双引号并没有严格的约定 实际上，引号是可以随意使用的，只要注意不要混用，引号必须配对即可 唯一的不同就是变量的问题，双引号中可以直接将变量转换为值，而单引号不行，请问下面的代码会输出什么？</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">$name = “andy”;</div><div class=\"line\">echo ‘my name is $name’;</div><div class=\"line\">echo “my name is $name”;</div></pre></td></tr></table></figure>\n<p>PHP初学者最容易犯的一个错误就是忘记给文字加引号 “hello” 这是字符串 $hello 这是变量 hello 系统会认为这是一个常量<br>常见的十进制整型我们无需多说 $var = 100; // 使用var_dump输出是int(100) 另外，在PHP中，我们还可以设置其他进制的整型</p>\n<h2 id=\"运算与赋值\"><a href=\"#运算与赋值\" class=\"headerlink\" title=\"运算与赋值\"></a>运算与赋值</h2><p>简单的说就是我们平时常用的加减乘除运算，我们下面会重点介绍一下浮点数加减的问题，%的使用场合，以及++和—的使用</p>\n<ul>\n<li>加法运算<br>–    减法运算</li>\n</ul>\n<ul>\n<li>乘法运算<br>/    除法运算<br>%    求余运算<br>++    递增运算（加1）<br>—-    递减运算（减1）<br>3.使用number_format，我们可以将一个小数的小数点后的位数保留到指定的值 string number_format ( float $number [, int $decimals = 0 ] ) 将浮点数作为第一个参数传递，第二个参数设置小数点后保留的位数 echo number_format($x – $y, 2); // 结果为0.07<h2 id=\"取余操作\"><a href=\"#取余操作\" class=\"headerlink\" title=\"取余操作%\"></a>取余操作%</h2>假设，我们有42篇文章，我们打算一页显示10篇，则从数学方面来分析，最后一页显示几篇文章？<br>整数商为4 余数 = 42 – 4*10 = 2 相当于PHP的计算 42 % 10 = 2<h2 id=\"递增和递减\"><a href=\"#递增和递减\" class=\"headerlink\" title=\"递增和递减\"></a>递增和递减</h2>$var–; 相当于执行 $var = $var – 1; 同理，$var++相当于执行 $var = $var + 1;<br>单个变量直接执行递增或者递减，不论符号放在左侧还是右侧都没有差别。 $var = 10; $var–; // 或者 –$var echo $var; // 结果都是9 但是，作为PHP的一个特殊性，如果操作符在赋值语句右侧的话，需要区分前后顺序 $var = 10; $output = $var–; // 或者 $output = –$var; echo $output; // 两个结果一个是10另一个是9 $output = $var–;相当于先将$var赋值给$output再执行递减运算<h2 id=\"字符串运算符\"><a href=\"#字符串运算符\" class=\"headerlink\" title=\"字符串运算符\"></a>字符串运算符</h2>PHP的字符串运算符只有一个，就是我们常说的连字符.（一个英文的点号），使用它我们可以将几段文字连接在一起显示 $str = “i”;     \u000becho $str . “phone”; // 输出iphone\u000becho $str . 123; // 输出i123\u000b$str2 = “pad”;\u000becho $str . $str2; // 输出ipad<br>连字符的大量使用，会导致文本难以阅读，代码凌乱，推荐使用格式化输出，假设有两个变量$num和$loc，分别表示数量和地点 $num = 5;\u000b$loc = “树”; 如果直接用连字符输出下面的文字 echo $loc . “上有” . $num . “只猴子”;<h2 id=\"sprintf\"><a href=\"#sprintf\" class=\"headerlink\" title=\"sprintf\"></a>sprintf</h2>上面的代码很难看出来要显示的是什么文字，使用sprintf函数来代替 $format = ‘%s上有%d只猴子’;\u000becho sprintf($format, $loc, $num);<h2 id=\"赋值运算符\"><a href=\"#赋值运算符\" class=\"headerlink\" title=\"赋值运算符\"></a>赋值运算符</h2>赋值运算实际上是将右侧表达式的值赋给左侧变量；或者说是将原表达式的值拷贝到新变量中<br>=    赋值    右侧表达式的值赋给左侧变量<br>+=    赋值加    左侧原变量加上右侧变量后，值赋给原变量<br>-=    赋值减    左侧原变量减去右側变量后，值赋给原变量<br>*=    赋值乘    左侧原变量乘以右侧变量后，值赋给原变量<br>/=    赋值除    左侧原变量除以右侧变量后，值赋给原变量<br>%=    赋值取余    左侧原变量与右侧变量取余，值赋给原变量<br>.=    字符串赋值    左侧变量后连接到右侧原变量后，值赋给原变量<h2 id=\"加减乘除赋值\"><a href=\"#加减乘除赋值\" class=\"headerlink\" title=\"加减乘除赋值\"></a>加减乘除赋值</h2>+=、-=、*=、/=、%=、.= 上面六个运算符，看复杂，实际上只是一种 缩写 A ?= B 全部都可以理解为 A = A ? B 其中?代表任意的运算符号，因此 $foo += $bar;  相当于执行了 $foo = $foo + $bar;<h2 id=\"字符串赋值\"><a href=\"#字符串赋值\" class=\"headerlink\" title=\"字符串赋值.=\"></a>字符串赋值.=</h2>字符串赋值平时最常用的用法是用来连接大段的文本，看下面的例子： $html = “<html>”;\u000b$html .= “<head>”;\u000b$html .= “<title>”  . $title . “</title>”;\u000b$html .= “</head>”;\u000b$html .= “<body>”;\u000b// ……\u000becho $html; 当我们需要将很多段的文本片段连接到一起，又想保持代码的整洁，同时让逻辑看起来也很清晰，就可以是使用字符串赋值，实际上使用heredoc更清晰简单。<h2 id=\"比较运算符\"><a href=\"#比较运算符\" class=\"headerlink\" title=\"比较运算符\"></a>比较运算符</h2>比较运算符负责条件判断、比较等操作，是程序中经常被用到的一种运算符。比较运算的结果只有两种：要么是“真”，要么是“假”。<br>运算符    功能    说明<br>>    大于    运算符左边表达式值大于右边表达式值时，返回true<br>&lt;    小于    运算符左边表达式值小于右边表达式值时，返回true<br>>=    大于等于    运算符左边表达式值大于等于右边表达式值时，返回true<br>&lt;=    小于等于    运算符左边表达式值小于等于右边表达式值时，返回true<br>==    相等    运算符左右两边表达式的值相等，返回true<br>!=    不等    运算符左右两边表达式的值不相等，返回true<br>&lt;&gt;    不等    运算符左右两边表达式的值不相等，返回true</body></html></li>\n</ul>\n<h2 id=\"比较运算符-1\"><a href=\"#比较运算符-1\" class=\"headerlink\" title=\"比较运算符\"></a>比较运算符</h2><p>基本的比较运算符我们不用多介绍，下面介绍一种比较特殊的比较运算符：恒等。在判断值是否相等的前提下，还会判断类型是否一样<br>运算符    功能    说明<br>===    恒等    运算符左右两边表达式的值相等并且类型一样，返回true<br>!==    非恒等    运算符左右两边表达式的值不相等或者类型不一样，返回true<br>在PHP中，下面所有的值都表示空：null、false、array()、””、0、”0″。 如果使用==，则 null == false、0 == “0”、null== array()、false == “”……都是返回true，而使用===则会返回false</p>\n<h2 id=\"逻辑运算符\"><a href=\"#逻辑运算符\" class=\"headerlink\" title=\"逻辑运算符\"></a>逻辑运算符</h2><p>逻辑运算有点类似前面讲过的位运算的方式，但逻辑运算更侧重在程序书写和日常开发中使用，比如 if switch 语句等。PHP提供了逻辑与、或、异或、非等逻辑运算符。<br>AND    逻辑与    当所有表达式为true时，返回true，否则返回false<br>OR    逻辑或    当所有表达式为false时，返回false，否则返回true<br>XOR    逻辑异或    只有一个表达式为true时，返回true，否则返回false<br>&amp;&amp;    逻辑与    当所有表达式为true时，返回true，否则返回false<br>||    逻辑或    当所有表达式为false时，返回false，否则返回true<br>!    逻辑非    当表达式为true时返回false，反之返回true<br>假设： $x = 8; \u000b$y = 6; 那么： $x + $y &gt; 10; // 返回的是真\u000b$x – $y &lt; 0; // 返回的是假 把两个比较运算放在一起进行逻辑运算的结果是什么？ $result = ($x + $y &gt; 10) &amp;&amp; ($x – $y &lt; 0);\u000b$result = ($x + $y &gt; 10) || ($x – $y &lt; 0);\u000b$result = !($x – $y &lt; 0);</p>\n<h2 id=\"条件语句\"><a href=\"#条件语句\" class=\"headerlink\" title=\"条件语句\"></a>条件语句</h2><p>简单的IF语句由两部分组成，expr是我们的表达式，而statement是我们需要执行的代码；当expr为true的时候，statement被执行；反之，则被忽略 if (expr) statement expr必须放在一对圆括号中间<br>if ($dir == ‘west’)<br>echo ‘西’;<br>还是前面的代码，我么稍作修改，执行的结果应该是什么？<br>$dir = ‘east’;\u000b if ($dir == ‘west’)\u000b  {<br>echo ‘当前方向为’;<br>} else {<br>echo ‘西’;<br>}<br>有时候我们不仅仅需要判断当expr条件为true时执行什么语句，另外，当expr条件为false时需要执行什么 if ($dir == ‘west’) {\u000b    echo ‘西’;\u000b} else {\u000b    echo ‘其它方向’;\u000b}</p>\n<h2 id=\"三目运算符\"><a href=\"#三目运算符\" class=\"headerlink\" title=\"三目运算符\"></a>三目运算符</h2><p>PHP有一个特殊的运算符，我们在之前学习运算符的时候并没有介绍，在学习了if和else语句后，我们可以介绍了 <figure class=\"highlight plain\"><figcaption><span>? (expr2) : (expr3)``` 当expr1条件为真时，值为expr2，否则值为expr3 下面的代码可以代替前面的```if else```语句 ```echo $dir </span></figcaption><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">多个条件组合</div></pre></td></tr></table></figure></p>\n<p>if ($dir == ‘west’) {\u000b        echo “西”;\u000b} else {\u000b    if ($dir == ‘east’) {\u000b        echo “东”;\u000b    } else {\u000b        if ($dir == ‘north’) {\u000b            echo “北”;\u000b        } else {\u000b            if ($dir == ‘sourth’) {\u000b                echo “南”;\u000b            } else {\u000b                echo “未知”;\u000b            }\u000b        }\u000b    }\u000b}<br>```</p>\n<h2 id=\"switch语句\"><a href=\"#switch语句\" class=\"headerlink\" title=\"switch语句\"></a>switch语句</h2><p>switch 语句类似于具有同一个表达式的一系列 if 语句 每个case会依次判断，expr与expr1..n是否相等，如果相等则执行对应的statement，如果最后有break，则执行完成后跳出switch语句 default是在所有case都无法满足的情况下默认执行的操作<br>switch (expr) { case expr1: statement; break; case expr2: statement; break; …… default: statement; }</p>\n<h2 id=\"数组\"><a href=\"#数组\" class=\"headerlink\" title=\"数组\"></a>数组</h2><p>数组提供了一种快速，方便地管理一组相关数据的方法，是php程序设计中的重要内容。 php中将数组分为一维数组，二维数组和多维数组，但无论是一维还是多维，可以统一将数组分为数字索引数组和关联数组两种。</p>\n<h2 id=\"索引数组\"><a href=\"#索引数组\" class=\"headerlink\" title=\"索引数组\"></a>索引数组</h2><p>这是最常见的数组类型，绝大多数编程语言都有数字索引数组 我们可以使用array()来初始化数组，每个数组元素之间使用逗号分隔 $names = array();\u000b$names = array(‘andy’, ‘tom’, ‘jack’);<br>第一个是一个空数组，第二个数组的元素个数是3 PHP 5.4之后，数组的初始化可以使用更简洁的方式 $names = [];\u000b$names = [‘andy’, ‘tom’, ‘jack’];</p>\n<h2 id=\"count函数\"><a href=\"#count函数\" class=\"headerlink\" title=\"count函数\"></a>count函数</h2><p>我们可以使用count函数来统计数组中元素的个数 int count ( mixed $var [, int $mode = COUNT_NORMAL ] ) echo count($names); 第二跟个参数，我们会在介绍数组维度时学习</p>\n<h2 id=\"打印数组\"><a href=\"#打印数组\" class=\"headerlink\" title=\"打印数组\"></a>打印数组</h2><p>我们一般使用print_r来打印数组（当然用var_dump也可以，但是结构上不清晰） bool print_r ( mixed $expression [, bool $return ] ) 请尝试打印 print_r($names); 当第二个参数为true时，print_r不会直接打印数组，而是将打印的内容作为字符串返回 echo print_r($names, true);<br>获取数组元素<br>索引数组中的每个元素都有一个自增长的序号，默认情况下，0表示第一个元素，对于 $names = [‘andy’, ‘tom’, ‘jack’]; 我们可以使用数组变量名后面加方括号的方式来获取数组中的元素，譬如，用$names[0]来获取到andy，同理$names[2]代表jack</p>\n<h2 id=\"关联数组\"><a href=\"#关联数组\" class=\"headerlink\" title=\"关联数组\"></a>关联数组</h2><p>$info = [\u000b    ‘name’ =&gt; ‘andy’, \u000b    ‘age’ =&gt; 18, \u000b    ‘gender’ =&gt; ‘male’\u000b]; 关联数组使用数字下标是无法获取数据的，譬如$info[0]的值是空，我们需要使用键作为下标$info[‘age’]的值是18</p>\n<h2 id=\"数组的维度：一维\"><a href=\"#数组的维度：一维\" class=\"headerlink\" title=\"数组的维度：一维\"></a>数组的维度：一维</h2><p>$arr = [‘王刚’, ‘张丽’, ‘刘伟’]; 假设数组变量名为$arr，获取“张丽”的方式：$arr[1]<br>多维数组<br>超过一维的数组，我们都可以称为多维数组 我们需要明白，数组不一定就是一个下标和值的简单列表，实际上，数组中的每个元素还可以是另一个数组 因此如果一维数组中的数组元素又是一个数组，那么它就成为了二维数组</p>\n<h2 id=\"数组的维度：二维\"><a href=\"#数组的维度：二维\" class=\"headerlink\" title=\"数组的维度：二维\"></a>数组的维度：二维</h2><p>$arr = [\u000b    [‘王刚’, ‘张丽’, ‘刘伟’],\u000b    [‘孙丽’, ‘李强’, ‘李国庆’],\u000b    [‘赵园园’, ‘丁丽丽’]\u000b]; echo count($arr);\u000becho count($arr, true);<br>$arr = [\u000b    [\u000b        [‘王刚’, ‘张丽’, ‘刘伟’],\u000b        [‘孙丽’, ‘李强’, ‘李国庆’],\u000b        [‘赵园园’, ‘丁丽丽’]\u000b    ],\u000b    [\u000b        [‘宋红’, ‘马小丽’],\u000b        [‘张颖’, ‘刘军’, ‘黄涛’],\u000b        [‘杜磊’, ‘朱婷婷’]\u000b    ],\u000b]; echo count($arr);\u000becho count($arr, true);</p>\n<h2 id=\"循环\"><a href=\"#循环\" class=\"headerlink\" title=\"循环\"></a>循环</h2><p>在程序开发中总会有一些规律性的重复操作 我们需要让一段代码块重复的执行，譬如： 输出重复的文字（构造表格）； 对一组数据执行相同的计算（数组遍历）； 操作失败后的再次执行…… 循环都是由循环体和循环条件组成，循环体代表需要重复执行的代码快，而循环条件代表循环终止的依据</p>\n<h2 id=\"for循环\"><a href=\"#for循环\" class=\"headerlink\" title=\"for循环\"></a>for循环</h2><p>for循环实际上可以看作是一个紧凑、简洁版的while循环 for (expr1; expr2; expr3) statement for循环有三个表达式 第一个表达式expr1在循环开始的时候只执行一次 第二个表达式expr2在循环体的每次循环开始的时候执行，如果执行的结果是true，循环继续进行，如果发现是false，循环结束 第三个表达式expr3在循环体的每次循环结束的时候执行</p>\n<h2 id=\"foreach循环\"><a href=\"#foreach循环\" class=\"headerlink\" title=\"foreach循环\"></a>foreach循环</h2><p>实际上PHP还有一个特殊的循环语句，这个循环语句是专门用来遍历数组的 foreach (array_variable as val) statement array_variable代表一个数组变量，在每次循环执行时，每个元素的值会被临时赋给变量val，statement语句每次获取到的val的值都不一样，体会一下下面的代码 foreach ($arr as $item) {\u000b  echo “&lt;” . $item . “&gt;”;\u000b}</p>\n<h2 id=\"foreach获取下标的值\"><a href=\"#foreach获取下标的值\" class=\"headerlink\" title=\"foreach获取下标的值\"></a>foreach获取下标的值</h2><p>foreach还有另外一种用法，定义如下 foreach (array_variable as key =&gt; val) statement \u000bkey代表数组的下标，val代表数组的值，那么对于数字下标数组来说，每次循环中key的值就是从0开始子增长的数字。 那么对于关联数组呢？大家请自行尝试</p>\n<h2 id=\"break和continue\"><a href=\"#break和continue\" class=\"headerlink\" title=\"break和continue\"></a>break和continue</h2><p>如果在循环的代码块中希望停止代码的执行，我们可以使用break或者continue break 跳出循环，并且循环不再执行 continue 跳出当前循环，循环继续执行，进入下一次循环 这就跟我们下象棋一样，有些人棋品不好，眼看要输了，掀了棋盘，这就是break。 还有的人心态很好，眼看要输了，后面也甭下了，认输再来一局，这就是continue。</p>\n<h2 id=\"类的静态函数-可以不用实例化调用！\"><a href=\"#类的静态函数-可以不用实例化调用！\" class=\"headerlink\" title=\"类的静态函数 可以不用实例化调用！\"></a>类的静态函数 可以不用实例化调用！</h2>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"php必须掌握的基础知识\"><a href=\"#php必须掌握的基础知识\" class=\"headerlink\" title=\"php必须掌握的基础知识\"></a>php必须掌握的基础知识</h1><p>PHP的数据类型<br>字符串（string） 整形（integer） 浮点型（float或者double） 布尔型（boolean） 数组（Array） 对象（Object） 资源（Resource）</p>\n<h2 id=\"字符串\"><a href=\"#字符串\" class=\"headerlink\" title=\"字符串\"></a>字符串</h2><p>页面中需要显示的文字，在PHP代码中我们使用单引号或者双引号包含 作为一些技巧性的使用，如果字符串中含有单引号，那么字符串可以使用双引号包含 $var = “‘foo’”; 同理，如果字符串中含有双引号，则可以使用单引号包含 $var = ‘”bar”‘; 如果双引号包含的字符串中要显示双引号，或者单引号包含的字符串中要显示单引号，我们可以添加转义符（一个斜杠\\） $var = ‘\\’foo\\”;\u000b$var = “\\”bar\\””;</p>\n<h2 id=\"单引号和双引号\"><a href=\"#单引号和双引号\" class=\"headerlink\" title=\"单引号和双引号\"></a>单引号和双引号</h2><p>PHP中字符串使用单引号还是双引号并没有严格的约定 实际上，引号是可以随意使用的，只要注意不要混用，引号必须配对即可 唯一的不同就是变量的问题，双引号中可以直接将变量转换为值，而单引号不行，请问下面的代码会输出什么？</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">$name = “andy”;</div><div class=\"line\">echo ‘my name is $name’;</div><div class=\"line\">echo “my name is $name”;</div></pre></td></tr></table></figure>\n<p>PHP初学者最容易犯的一个错误就是忘记给文字加引号 “hello” 这是字符串 $hello 这是变量 hello 系统会认为这是一个常量<br>常见的十进制整型我们无需多说 $var = 100; // 使用var_dump输出是int(100) 另外，在PHP中，我们还可以设置其他进制的整型</p>\n<h2 id=\"运算与赋值\"><a href=\"#运算与赋值\" class=\"headerlink\" title=\"运算与赋值\"></a>运算与赋值</h2><p>简单的说就是我们平时常用的加减乘除运算，我们下面会重点介绍一下浮点数加减的问题，%的使用场合，以及++和—的使用</p>\n<ul>\n<li>加法运算<br>–    减法运算</li>\n</ul>\n<ul>\n<li>乘法运算<br>/    除法运算<br>%    求余运算<br>++    递增运算（加1）<br>—-    递减运算（减1）<br>3.使用number_format，我们可以将一个小数的小数点后的位数保留到指定的值 string number_format ( float $number [, int $decimals = 0 ] ) 将浮点数作为第一个参数传递，第二个参数设置小数点后保留的位数 echo number_format($x – $y, 2); // 结果为0.07<h2 id=\"取余操作\"><a href=\"#取余操作\" class=\"headerlink\" title=\"取余操作%\"></a>取余操作%</h2>假设，我们有42篇文章，我们打算一页显示10篇，则从数学方面来分析，最后一页显示几篇文章？<br>整数商为4 余数 = 42 – 4*10 = 2 相当于PHP的计算 42 % 10 = 2<h2 id=\"递增和递减\"><a href=\"#递增和递减\" class=\"headerlink\" title=\"递增和递减\"></a>递增和递减</h2>$var–; 相当于执行 $var = $var – 1; 同理，$var++相当于执行 $var = $var + 1;<br>单个变量直接执行递增或者递减，不论符号放在左侧还是右侧都没有差别。 $var = 10; $var–; // 或者 –$var echo $var; // 结果都是9 但是，作为PHP的一个特殊性，如果操作符在赋值语句右侧的话，需要区分前后顺序 $var = 10; $output = $var–; // 或者 $output = –$var; echo $output; // 两个结果一个是10另一个是9 $output = $var–;相当于先将$var赋值给$output再执行递减运算<h2 id=\"字符串运算符\"><a href=\"#字符串运算符\" class=\"headerlink\" title=\"字符串运算符\"></a>字符串运算符</h2>PHP的字符串运算符只有一个，就是我们常说的连字符.（一个英文的点号），使用它我们可以将几段文字连接在一起显示 $str = “i”;     \u000becho $str . “phone”; // 输出iphone\u000becho $str . 123; // 输出i123\u000b$str2 = “pad”;\u000becho $str . $str2; // 输出ipad<br>连字符的大量使用，会导致文本难以阅读，代码凌乱，推荐使用格式化输出，假设有两个变量$num和$loc，分别表示数量和地点 $num = 5;\u000b$loc = “树”; 如果直接用连字符输出下面的文字 echo $loc . “上有” . $num . “只猴子”;<h2 id=\"sprintf\"><a href=\"#sprintf\" class=\"headerlink\" title=\"sprintf\"></a>sprintf</h2>上面的代码很难看出来要显示的是什么文字，使用sprintf函数来代替 $format = ‘%s上有%d只猴子’;\u000becho sprintf($format, $loc, $num);<h2 id=\"赋值运算符\"><a href=\"#赋值运算符\" class=\"headerlink\" title=\"赋值运算符\"></a>赋值运算符</h2>赋值运算实际上是将右侧表达式的值赋给左侧变量；或者说是将原表达式的值拷贝到新变量中<br>=    赋值    右侧表达式的值赋给左侧变量<br>+=    赋值加    左侧原变量加上右侧变量后，值赋给原变量<br>-=    赋值减    左侧原变量减去右側变量后，值赋给原变量<br>*=    赋值乘    左侧原变量乘以右侧变量后，值赋给原变量<br>/=    赋值除    左侧原变量除以右侧变量后，值赋给原变量<br>%=    赋值取余    左侧原变量与右侧变量取余，值赋给原变量<br>.=    字符串赋值    左侧变量后连接到右侧原变量后，值赋给原变量<h2 id=\"加减乘除赋值\"><a href=\"#加减乘除赋值\" class=\"headerlink\" title=\"加减乘除赋值\"></a>加减乘除赋值</h2>+=、-=、*=、/=、%=、.= 上面六个运算符，看复杂，实际上只是一种 缩写 A ?= B 全部都可以理解为 A = A ? B 其中?代表任意的运算符号，因此 $foo += $bar;  相当于执行了 $foo = $foo + $bar;<h2 id=\"字符串赋值\"><a href=\"#字符串赋值\" class=\"headerlink\" title=\"字符串赋值.=\"></a>字符串赋值.=</h2>字符串赋值平时最常用的用法是用来连接大段的文本，看下面的例子： $html = “<html>”;\u000b$html .= “<head>”;\u000b$html .= “<title>”  . $title . “</title>”;\u000b$html .= “</head>”;\u000b$html .= “<body>”;\u000b// ……\u000becho $html; 当我们需要将很多段的文本片段连接到一起，又想保持代码的整洁，同时让逻辑看起来也很清晰，就可以是使用字符串赋值，实际上使用heredoc更清晰简单。<h2 id=\"比较运算符\"><a href=\"#比较运算符\" class=\"headerlink\" title=\"比较运算符\"></a>比较运算符</h2>比较运算符负责条件判断、比较等操作，是程序中经常被用到的一种运算符。比较运算的结果只有两种：要么是“真”，要么是“假”。<br>运算符    功能    说明<br>>    大于    运算符左边表达式值大于右边表达式值时，返回true<br>&lt;    小于    运算符左边表达式值小于右边表达式值时，返回true<br>>=    大于等于    运算符左边表达式值大于等于右边表达式值时，返回true<br>&lt;=    小于等于    运算符左边表达式值小于等于右边表达式值时，返回true<br>==    相等    运算符左右两边表达式的值相等，返回true<br>!=    不等    运算符左右两边表达式的值不相等，返回true<br>&lt;&gt;    不等    运算符左右两边表达式的值不相等，返回true</body></html></li>\n</ul>\n<h2 id=\"比较运算符-1\"><a href=\"#比较运算符-1\" class=\"headerlink\" title=\"比较运算符\"></a>比较运算符</h2><p>基本的比较运算符我们不用多介绍，下面介绍一种比较特殊的比较运算符：恒等。在判断值是否相等的前提下，还会判断类型是否一样<br>运算符    功能    说明<br>===    恒等    运算符左右两边表达式的值相等并且类型一样，返回true<br>!==    非恒等    运算符左右两边表达式的值不相等或者类型不一样，返回true<br>在PHP中，下面所有的值都表示空：null、false、array()、””、0、”0″。 如果使用==，则 null == false、0 == “0”、null== array()、false == “”……都是返回true，而使用===则会返回false</p>\n<h2 id=\"逻辑运算符\"><a href=\"#逻辑运算符\" class=\"headerlink\" title=\"逻辑运算符\"></a>逻辑运算符</h2><p>逻辑运算有点类似前面讲过的位运算的方式，但逻辑运算更侧重在程序书写和日常开发中使用，比如 if switch 语句等。PHP提供了逻辑与、或、异或、非等逻辑运算符。<br>AND    逻辑与    当所有表达式为true时，返回true，否则返回false<br>OR    逻辑或    当所有表达式为false时，返回false，否则返回true<br>XOR    逻辑异或    只有一个表达式为true时，返回true，否则返回false<br>&amp;&amp;    逻辑与    当所有表达式为true时，返回true，否则返回false<br>||    逻辑或    当所有表达式为false时，返回false，否则返回true<br>!    逻辑非    当表达式为true时返回false，反之返回true<br>假设： $x = 8; \u000b$y = 6; 那么： $x + $y &gt; 10; // 返回的是真\u000b$x – $y &lt; 0; // 返回的是假 把两个比较运算放在一起进行逻辑运算的结果是什么？ $result = ($x + $y &gt; 10) &amp;&amp; ($x – $y &lt; 0);\u000b$result = ($x + $y &gt; 10) || ($x – $y &lt; 0);\u000b$result = !($x – $y &lt; 0);</p>\n<h2 id=\"条件语句\"><a href=\"#条件语句\" class=\"headerlink\" title=\"条件语句\"></a>条件语句</h2><p>简单的IF语句由两部分组成，expr是我们的表达式，而statement是我们需要执行的代码；当expr为true的时候，statement被执行；反之，则被忽略 if (expr) statement expr必须放在一对圆括号中间<br>if ($dir == ‘west’)<br>echo ‘西’;<br>还是前面的代码，我么稍作修改，执行的结果应该是什么？<br>$dir = ‘east’;\u000b if ($dir == ‘west’)\u000b  {<br>echo ‘当前方向为’;<br>} else {<br>echo ‘西’;<br>}<br>有时候我们不仅仅需要判断当expr条件为true时执行什么语句，另外，当expr条件为false时需要执行什么 if ($dir == ‘west’) {\u000b    echo ‘西’;\u000b} else {\u000b    echo ‘其它方向’;\u000b}</p>\n<h2 id=\"三目运算符\"><a href=\"#三目运算符\" class=\"headerlink\" title=\"三目运算符\"></a>三目运算符</h2><p>PHP有一个特殊的运算符，我们在之前学习运算符的时候并没有介绍，在学习了if和else语句后，我们可以介绍了 <figure class=\"highlight plain\"><figcaption><span>? (expr2) : (expr3)``` 当expr1条件为真时，值为expr2，否则值为expr3 下面的代码可以代替前面的```if else```语句 ```echo $dir </span></figcaption><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">多个条件组合</div></pre></td></tr></table></figure></p>\n<p>if ($dir == ‘west’) {\u000b        echo “西”;\u000b} else {\u000b    if ($dir == ‘east’) {\u000b        echo “东”;\u000b    } else {\u000b        if ($dir == ‘north’) {\u000b            echo “北”;\u000b        } else {\u000b            if ($dir == ‘sourth’) {\u000b                echo “南”;\u000b            } else {\u000b                echo “未知”;\u000b            }\u000b        }\u000b    }\u000b}<br>```</p>\n<h2 id=\"switch语句\"><a href=\"#switch语句\" class=\"headerlink\" title=\"switch语句\"></a>switch语句</h2><p>switch 语句类似于具有同一个表达式的一系列 if 语句 每个case会依次判断，expr与expr1..n是否相等，如果相等则执行对应的statement，如果最后有break，则执行完成后跳出switch语句 default是在所有case都无法满足的情况下默认执行的操作<br>switch (expr) { case expr1: statement; break; case expr2: statement; break; …… default: statement; }</p>\n<h2 id=\"数组\"><a href=\"#数组\" class=\"headerlink\" title=\"数组\"></a>数组</h2><p>数组提供了一种快速，方便地管理一组相关数据的方法，是php程序设计中的重要内容。 php中将数组分为一维数组，二维数组和多维数组，但无论是一维还是多维，可以统一将数组分为数字索引数组和关联数组两种。</p>\n<h2 id=\"索引数组\"><a href=\"#索引数组\" class=\"headerlink\" title=\"索引数组\"></a>索引数组</h2><p>这是最常见的数组类型，绝大多数编程语言都有数字索引数组 我们可以使用array()来初始化数组，每个数组元素之间使用逗号分隔 $names = array();\u000b$names = array(‘andy’, ‘tom’, ‘jack’);<br>第一个是一个空数组，第二个数组的元素个数是3 PHP 5.4之后，数组的初始化可以使用更简洁的方式 $names = [];\u000b$names = [‘andy’, ‘tom’, ‘jack’];</p>\n<h2 id=\"count函数\"><a href=\"#count函数\" class=\"headerlink\" title=\"count函数\"></a>count函数</h2><p>我们可以使用count函数来统计数组中元素的个数 int count ( mixed $var [, int $mode = COUNT_NORMAL ] ) echo count($names); 第二跟个参数，我们会在介绍数组维度时学习</p>\n<h2 id=\"打印数组\"><a href=\"#打印数组\" class=\"headerlink\" title=\"打印数组\"></a>打印数组</h2><p>我们一般使用print_r来打印数组（当然用var_dump也可以，但是结构上不清晰） bool print_r ( mixed $expression [, bool $return ] ) 请尝试打印 print_r($names); 当第二个参数为true时，print_r不会直接打印数组，而是将打印的内容作为字符串返回 echo print_r($names, true);<br>获取数组元素<br>索引数组中的每个元素都有一个自增长的序号，默认情况下，0表示第一个元素，对于 $names = [‘andy’, ‘tom’, ‘jack’]; 我们可以使用数组变量名后面加方括号的方式来获取数组中的元素，譬如，用$names[0]来获取到andy，同理$names[2]代表jack</p>\n<h2 id=\"关联数组\"><a href=\"#关联数组\" class=\"headerlink\" title=\"关联数组\"></a>关联数组</h2><p>$info = [\u000b    ‘name’ =&gt; ‘andy’, \u000b    ‘age’ =&gt; 18, \u000b    ‘gender’ =&gt; ‘male’\u000b]; 关联数组使用数字下标是无法获取数据的，譬如$info[0]的值是空，我们需要使用键作为下标$info[‘age’]的值是18</p>\n<h2 id=\"数组的维度：一维\"><a href=\"#数组的维度：一维\" class=\"headerlink\" title=\"数组的维度：一维\"></a>数组的维度：一维</h2><p>$arr = [‘王刚’, ‘张丽’, ‘刘伟’]; 假设数组变量名为$arr，获取“张丽”的方式：$arr[1]<br>多维数组<br>超过一维的数组，我们都可以称为多维数组 我们需要明白，数组不一定就是一个下标和值的简单列表，实际上，数组中的每个元素还可以是另一个数组 因此如果一维数组中的数组元素又是一个数组，那么它就成为了二维数组</p>\n<h2 id=\"数组的维度：二维\"><a href=\"#数组的维度：二维\" class=\"headerlink\" title=\"数组的维度：二维\"></a>数组的维度：二维</h2><p>$arr = [\u000b    [‘王刚’, ‘张丽’, ‘刘伟’],\u000b    [‘孙丽’, ‘李强’, ‘李国庆’],\u000b    [‘赵园园’, ‘丁丽丽’]\u000b]; echo count($arr);\u000becho count($arr, true);<br>$arr = [\u000b    [\u000b        [‘王刚’, ‘张丽’, ‘刘伟’],\u000b        [‘孙丽’, ‘李强’, ‘李国庆’],\u000b        [‘赵园园’, ‘丁丽丽’]\u000b    ],\u000b    [\u000b        [‘宋红’, ‘马小丽’],\u000b        [‘张颖’, ‘刘军’, ‘黄涛’],\u000b        [‘杜磊’, ‘朱婷婷’]\u000b    ],\u000b]; echo count($arr);\u000becho count($arr, true);</p>\n<h2 id=\"循环\"><a href=\"#循环\" class=\"headerlink\" title=\"循环\"></a>循环</h2><p>在程序开发中总会有一些规律性的重复操作 我们需要让一段代码块重复的执行，譬如： 输出重复的文字（构造表格）； 对一组数据执行相同的计算（数组遍历）； 操作失败后的再次执行…… 循环都是由循环体和循环条件组成，循环体代表需要重复执行的代码快，而循环条件代表循环终止的依据</p>\n<h2 id=\"for循环\"><a href=\"#for循环\" class=\"headerlink\" title=\"for循环\"></a>for循环</h2><p>for循环实际上可以看作是一个紧凑、简洁版的while循环 for (expr1; expr2; expr3) statement for循环有三个表达式 第一个表达式expr1在循环开始的时候只执行一次 第二个表达式expr2在循环体的每次循环开始的时候执行，如果执行的结果是true，循环继续进行，如果发现是false，循环结束 第三个表达式expr3在循环体的每次循环结束的时候执行</p>\n<h2 id=\"foreach循环\"><a href=\"#foreach循环\" class=\"headerlink\" title=\"foreach循环\"></a>foreach循环</h2><p>实际上PHP还有一个特殊的循环语句，这个循环语句是专门用来遍历数组的 foreach (array_variable as val) statement array_variable代表一个数组变量，在每次循环执行时，每个元素的值会被临时赋给变量val，statement语句每次获取到的val的值都不一样，体会一下下面的代码 foreach ($arr as $item) {\u000b  echo “&lt;” . $item . “&gt;”;\u000b}</p>\n<h2 id=\"foreach获取下标的值\"><a href=\"#foreach获取下标的值\" class=\"headerlink\" title=\"foreach获取下标的值\"></a>foreach获取下标的值</h2><p>foreach还有另外一种用法，定义如下 foreach (array_variable as key =&gt; val) statement \u000bkey代表数组的下标，val代表数组的值，那么对于数字下标数组来说，每次循环中key的值就是从0开始子增长的数字。 那么对于关联数组呢？大家请自行尝试</p>\n<h2 id=\"break和continue\"><a href=\"#break和continue\" class=\"headerlink\" title=\"break和continue\"></a>break和continue</h2><p>如果在循环的代码块中希望停止代码的执行，我们可以使用break或者continue break 跳出循环，并且循环不再执行 continue 跳出当前循环，循环继续执行，进入下一次循环 这就跟我们下象棋一样，有些人棋品不好，眼看要输了，掀了棋盘，这就是break。 还有的人心态很好，眼看要输了，后面也甭下了，认输再来一局，这就是continue。</p>\n<h2 id=\"类的静态函数-可以不用实例化调用！\"><a href=\"#类的静态函数-可以不用实例化调用！\" class=\"headerlink\" title=\"类的静态函数 可以不用实例化调用！\"></a>类的静态函数 可以不用实例化调用！</h2>"},{"title":"排序法之最快方法","date":"2016-10-05T16:59:21.000Z","_content":"按照惯例我感觉我还的介绍下冒泡排序(这里介绍来子网络)。  \n冒泡排序（Bubble Sort，台湾译为：泡沫排序或气泡排序）是一  种简单的排序算法。它重复地走访过要排序的数列，依次比较两个元素，如果他们的顺序错误就把他们交换过来。走访数列的工作是重复地进行直到没有再需要交换，也就是说该数列已经排序完成。这个算法的名字由来是因为越小的元素会经由交换慢慢“浮”到数列的顶端。\n![](http://opxoapzhs.bkt.clouddn.com//sort/BubbleSort.gif)\n<!--more-->\n\n## 思路\n比较相邻的元素。如果第一个比第二个大，就交换他们两个。对每一对相邻元素作同样的工作，从开始第一对到结尾的最后一对。在这一点，最后的元素应该会是最大的数。针对所有的元素重复以上的步骤，除了最后一个。持续每次对越来越少的元素重复上面的步骤，直到没有任何一对数字需要比较。\n\n## 呆萌--demo：\n```\n$arrs = array(1,43,2,3,4,5,6);   // 6+5+4+3+2+1  循环次数=(数组总数-1)的累加和\nfunction BubbleSort ($arr)\n{\n\t$two = 0;\n\t$len = count($arr);\n\t//该层循环控制 需要冒泡的轮数\n\tfor ($i=1; $i<$len; $i++) {\n\t\t//该层循环用来控制每轮 冒出一个数 需要比较的次数\n\t\tfor ($k=0; $k<$len-$i; $k++) {\n\t\t\t$two++;\n\t\t\tif($arr[$k] > $arr[$k+1]) {\n\t\t\t\t$tmp = $arr[$k+1]; //声明一个临时变量暂时存放\n\t\t\t\t$arr[$k+1] = $arr[$k];\n\t\t\t\t$arr[$k] = $tmp;\n\t\t\t}\n\t\t}\n\t}\n\techo $two.'==two<br>';\n\treturn $arr;\n}\nvar_dump(BubbleSort($arrs));\n```\n## 测试欢迎投稿\n下面是笔者做的一个测试的一个循环次数，如果你有比笔者更快方法请发送到 [http://www.llaravel.com](http://www.llaravel.com) 进行留言\n![](http://opxoapzhs.bkt.clouddn.com//sort/BubbleSort.png)\n\n\n\n","source":"_posts/stort1.md","raw":"---\ntitle: 排序法之最快方法\ndate: 2016-10-06 00:59:21\ntags:\n    -- 排序\ncategories: php奇淫技巧\n---\n按照惯例我感觉我还的介绍下冒泡排序(这里介绍来子网络)。  \n冒泡排序（Bubble Sort，台湾译为：泡沫排序或气泡排序）是一  种简单的排序算法。它重复地走访过要排序的数列，依次比较两个元素，如果他们的顺序错误就把他们交换过来。走访数列的工作是重复地进行直到没有再需要交换，也就是说该数列已经排序完成。这个算法的名字由来是因为越小的元素会经由交换慢慢“浮”到数列的顶端。\n![](http://opxoapzhs.bkt.clouddn.com//sort/BubbleSort.gif)\n<!--more-->\n\n## 思路\n比较相邻的元素。如果第一个比第二个大，就交换他们两个。对每一对相邻元素作同样的工作，从开始第一对到结尾的最后一对。在这一点，最后的元素应该会是最大的数。针对所有的元素重复以上的步骤，除了最后一个。持续每次对越来越少的元素重复上面的步骤，直到没有任何一对数字需要比较。\n\n## 呆萌--demo：\n```\n$arrs = array(1,43,2,3,4,5,6);   // 6+5+4+3+2+1  循环次数=(数组总数-1)的累加和\nfunction BubbleSort ($arr)\n{\n\t$two = 0;\n\t$len = count($arr);\n\t//该层循环控制 需要冒泡的轮数\n\tfor ($i=1; $i<$len; $i++) {\n\t\t//该层循环用来控制每轮 冒出一个数 需要比较的次数\n\t\tfor ($k=0; $k<$len-$i; $k++) {\n\t\t\t$two++;\n\t\t\tif($arr[$k] > $arr[$k+1]) {\n\t\t\t\t$tmp = $arr[$k+1]; //声明一个临时变量暂时存放\n\t\t\t\t$arr[$k+1] = $arr[$k];\n\t\t\t\t$arr[$k] = $tmp;\n\t\t\t}\n\t\t}\n\t}\n\techo $two.'==two<br>';\n\treturn $arr;\n}\nvar_dump(BubbleSort($arrs));\n```\n## 测试欢迎投稿\n下面是笔者做的一个测试的一个循环次数，如果你有比笔者更快方法请发送到 [http://www.llaravel.com](http://www.llaravel.com) 进行留言\n![](http://opxoapzhs.bkt.clouddn.com//sort/BubbleSort.png)\n\n\n\n","slug":"stort1","published":1,"updated":"2017-09-24T21:07:51.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj7zrohra000wr1s6vq14sgbo","content":"<p>按照惯例我感觉我还的介绍下冒泡排序(这里介绍来子网络)。<br>冒泡排序（Bubble Sort，台湾译为：泡沫排序或气泡排序）是一  种简单的排序算法。它重复地走访过要排序的数列，依次比较两个元素，如果他们的顺序错误就把他们交换过来。走访数列的工作是重复地进行直到没有再需要交换，也就是说该数列已经排序完成。这个算法的名字由来是因为越小的元素会经由交换慢慢“浮”到数列的顶端。<br><img src=\"http://opxoapzhs.bkt.clouddn.com//sort/BubbleSort.gif\" alt=\"\"><br><a id=\"more\"></a></p>\n<h2 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h2><p>比较相邻的元素。如果第一个比第二个大，就交换他们两个。对每一对相邻元素作同样的工作，从开始第一对到结尾的最后一对。在这一点，最后的元素应该会是最大的数。针对所有的元素重复以上的步骤，除了最后一个。持续每次对越来越少的元素重复上面的步骤，直到没有任何一对数字需要比较。</p>\n<h2 id=\"呆萌–demo：\"><a href=\"#呆萌–demo：\" class=\"headerlink\" title=\"呆萌–demo：\"></a>呆萌–demo：</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div></pre></td><td class=\"code\"><pre><div class=\"line\">$arrs = array(1,43,2,3,4,5,6);   // 6+5+4+3+2+1  循环次数=(数组总数-1)的累加和</div><div class=\"line\">function BubbleSort ($arr)</div><div class=\"line\">&#123;</div><div class=\"line\">\t$two = 0;</div><div class=\"line\">\t$len = count($arr);</div><div class=\"line\">\t//该层循环控制 需要冒泡的轮数</div><div class=\"line\">\tfor ($i=1; $i&lt;$len; $i++) &#123;</div><div class=\"line\">\t\t//该层循环用来控制每轮 冒出一个数 需要比较的次数</div><div class=\"line\">\t\tfor ($k=0; $k&lt;$len-$i; $k++) &#123;</div><div class=\"line\">\t\t\t$two++;</div><div class=\"line\">\t\t\tif($arr[$k] &gt; $arr[$k+1]) &#123;</div><div class=\"line\">\t\t\t\t$tmp = $arr[$k+1]; //声明一个临时变量暂时存放</div><div class=\"line\">\t\t\t\t$arr[$k+1] = $arr[$k];</div><div class=\"line\">\t\t\t\t$arr[$k] = $tmp;</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\techo $two.&apos;==two&lt;br&gt;&apos;;</div><div class=\"line\">\treturn $arr;</div><div class=\"line\">&#125;</div><div class=\"line\">var_dump(BubbleSort($arrs));</div></pre></td></tr></table></figure>\n<h2 id=\"测试欢迎投稿\"><a href=\"#测试欢迎投稿\" class=\"headerlink\" title=\"测试欢迎投稿\"></a>测试欢迎投稿</h2><p>下面是笔者做的一个测试的一个循环次数，如果你有比笔者更快方法请发送到 <a href=\"http://www.llaravel.com\" target=\"_blank\" rel=\"external\">http://www.llaravel.com</a> 进行留言<br><img src=\"http://opxoapzhs.bkt.clouddn.com//sort/BubbleSort.png\" alt=\"\"></p>\n","site":{"data":{}},"excerpt":"<p>按照惯例我感觉我还的介绍下冒泡排序(这里介绍来子网络)。<br>冒泡排序（Bubble Sort，台湾译为：泡沫排序或气泡排序）是一  种简单的排序算法。它重复地走访过要排序的数列，依次比较两个元素，如果他们的顺序错误就把他们交换过来。走访数列的工作是重复地进行直到没有再需要交换，也就是说该数列已经排序完成。这个算法的名字由来是因为越小的元素会经由交换慢慢“浮”到数列的顶端。<br><img src=\"http://opxoapzhs.bkt.clouddn.com//sort/BubbleSort.gif\" alt=\"\"><br>","more":"</p>\n<h2 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h2><p>比较相邻的元素。如果第一个比第二个大，就交换他们两个。对每一对相邻元素作同样的工作，从开始第一对到结尾的最后一对。在这一点，最后的元素应该会是最大的数。针对所有的元素重复以上的步骤，除了最后一个。持续每次对越来越少的元素重复上面的步骤，直到没有任何一对数字需要比较。</p>\n<h2 id=\"呆萌–demo：\"><a href=\"#呆萌–demo：\" class=\"headerlink\" title=\"呆萌–demo：\"></a>呆萌–demo：</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div></pre></td><td class=\"code\"><pre><div class=\"line\">$arrs = array(1,43,2,3,4,5,6);   // 6+5+4+3+2+1  循环次数=(数组总数-1)的累加和</div><div class=\"line\">function BubbleSort ($arr)</div><div class=\"line\">&#123;</div><div class=\"line\">\t$two = 0;</div><div class=\"line\">\t$len = count($arr);</div><div class=\"line\">\t//该层循环控制 需要冒泡的轮数</div><div class=\"line\">\tfor ($i=1; $i&lt;$len; $i++) &#123;</div><div class=\"line\">\t\t//该层循环用来控制每轮 冒出一个数 需要比较的次数</div><div class=\"line\">\t\tfor ($k=0; $k&lt;$len-$i; $k++) &#123;</div><div class=\"line\">\t\t\t$two++;</div><div class=\"line\">\t\t\tif($arr[$k] &gt; $arr[$k+1]) &#123;</div><div class=\"line\">\t\t\t\t$tmp = $arr[$k+1]; //声明一个临时变量暂时存放</div><div class=\"line\">\t\t\t\t$arr[$k+1] = $arr[$k];</div><div class=\"line\">\t\t\t\t$arr[$k] = $tmp;</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\techo $two.&apos;==two&lt;br&gt;&apos;;</div><div class=\"line\">\treturn $arr;</div><div class=\"line\">&#125;</div><div class=\"line\">var_dump(BubbleSort($arrs));</div></pre></td></tr></table></figure>\n<h2 id=\"测试欢迎投稿\"><a href=\"#测试欢迎投稿\" class=\"headerlink\" title=\"测试欢迎投稿\"></a>测试欢迎投稿</h2><p>下面是笔者做的一个测试的一个循环次数，如果你有比笔者更快方法请发送到 <a href=\"http://www.llaravel.com\" target=\"_blank\" rel=\"external\">http://www.llaravel.com</a> 进行留言<br><img src=\"http://opxoapzhs.bkt.clouddn.com//sort/BubbleSort.png\" alt=\"\"></p>"},{"title":"MAC开发工具大杂烩","date":"2017-06-23T17:51:58.000Z","_content":"开发必备部分软件安装配置教程\n\n文件打开提示放入垃圾桶打开终端键入：`sudo spctl --master-disable` 输入密码即可\n<!--more-->\n本人命令放在 `~/bin` 中 在 .zshrc 中 引入 `export PATH='/Users/baby/bin':$PATH` \n\n# brew：\n\n## 安装：\n安装前需要下载Xcode\n官网自行安装：[https://brew.sh](https://brew.sh)\n## 插件\n ```\n brew install tig  #高亮美化\n \n brew install ccat #美化cat命令\n alias cat=ccat    #替换系统cat命令\n \n brew install tree  #树形目录\n ```\n \n## 切换PHP版本\n一、使用brew安装php多版本方法\n\n```\nbrew install php56\nbrew install php70\n```\n\n二、安装切换工具\n\n```\nbrew install php-version\nsource $(brew --prefix php-version)/php-version.sh\n```\n\n三、查看当前安装的所有版本\n\n```\nphp-version\n```\n\n四、切换版本\n\n```\nphp-version 5.6.5\n```\n\n```\nbrew list\nbrew services start homebrew/php/php71\nbrew services restart php71\nbrew unlink php71\n```\n\n搞定\n\n# Itrem2\n\n\n## 下载&安装：Itrem2\n下载地址:[http://www.iterm2.com/downloads.html](http://www.iterm2.com/downloads.html)\n下载完成后直接拖到应用程序中\n\n设置选项：\n去除![](http://opxoapzhs.bkt.clouddn.com/15046316197660/15046381900701.jpg)\n\n```\n    cd ~\n    touch .hushlogin \n```\n\n效果如下：  是不是干净很清爽\n![](http://opxoapzhs.bkt.clouddn.com/15046316197660/15046383296331.jpg)\n## 自动提示：zsh-autosuggestions\n下载&安装\n依然是在github中：[zsh-autosuggestions](https://github.com/zsh-users/zsh-autosuggestions)\n手动安装：\n\n```\ngit clone git://github.com/zsh-users/zsh-autosuggestions ~/.zsh/zsh-autosuggestions\n```\n\n打开 `~/.zshrc` 文件 在做后一行换行添加\n\n```\nsource ~/.zsh/zsh-autosuggestions/zsh-autosuggestions.zsh\n```\n\n退出iterm2 重新打开即可\n\n\n\n![](http://opxoapzhs.bkt.clouddn.com/15046316197660/15046377401155.jpg)\n1:com+q 直接退出  2: cond+end 在当前窗口全屏\n\n![](http://opxoapzhs.bkt.clouddn.com/15046316197660/15046378769341.jpg)\n快捷键：在任何地方呼出iterm2 . 这里设施的是英文状态下的～ 数字数字1傍边那个\n\n\n-------\n材料：\nOh-My-zsh:[Oh-My-zsh](https://github.com/robbyrussell/oh-my-zsh) || github上搜索\n使用via curl下载\n输入密码即可\n配置文件存在于 `~/.zshrc` 打开它 大概第10行 `ZSH_THEME=\"robbyrussell\"` 我这里是 `ZSH_THEME=\"cloud\"`\n\n打开 [https://draculatheme.com](https://draculatheme.com) 找到iterm2 进行下载\n引入选择刚刚下载的主题配置：\n![](http://opxoapzhs.bkt.clouddn.com/15046316197660/15046441733710.jpg)\n\n\n字体设置：\n![](http://opxoapzhs.bkt.clouddn.com/15046316197660/15046443304233.jpg)\n\n最终系效果图-\n![oic](http://opxoapzhs.bkt.clouddn.com/15046316197660/oicc.png)\n\n\n### 加在缓慢：\n\n```\nsudo rm -rf /private/var/log/asl/*.asl\n```\n\n清理了终端 log 就好了 干净无用\n\n### shell 语法高亮\n先上图 2333：\n![](http://opxoapzhs.bkt.clouddn.com/15046316197660/15050353264309.jpg)\n\n炫不炫 绿色代表存在这个命令 一眼就看出来了，如果打错了，它就是红色的\n\n下载方式有很多，请自行安装，本人使用的手动安装 走你-->\n插件git地址: [zsh-syntax-highlighting](https://github.com/zsh-users/zsh-syntax-highlighting)\n\n安装起来非常简单，clone到$ZSH_CUSTOM/plugins目录，然后在.zshrc文件正配置一下即可。\n\n\n\n\n# Sublime\n下载&安装：\n打开sublime text 菜单栏找到 Tools -> install Packge... 稍等片刻即好，编辑器左下角安装状态\n![](http://opxoapzhs.bkt.clouddn.com/15046316197660/15046386227539.jpg)\n\n主题：command+shit+p --> install Package --> Material Theme;\n地址：[https://github.com/equinusocio/material-theme](https://github.com/equinusocio/material-theme)\n\n配置：\ncommand + ,\n```\n{\n\t\"color_scheme\": \"Packages/Material Theme/schemes/Material-Theme.tmTheme\",\n\t\"font_face\": \"Fira Code\",\n\t\"font_size\": 14,\n\t\"ignored_packages\":\n\t[\n\t\t\"Vintage\"\n\t],\n\t\"line_padding_bottom\": 2,\n\t\"line_padding_top\": 2,\n\t\"open_files_in_new_window\": false,\n\t\"theme\": \"Material-Theme.sublime-theme\",\n\t\"update_check\": false\n}\n```\n对应：配色、字体、字号、【 】、行与行上间距、行与行下间距、禁止打开文件新建窗口、启动时创建窗口、主题、关闭自动更新提示\n字体：链接: https://pan.baidu.com/s/1nuCW4Lb 密码: mxvv\n\n\n\n## 通过命令行启动\n官网地址：[https://www.sublimetext.com/docs/3/osx_command_line.html](https://www.sublimetext.com/docs/3/osx_command_line.html)\n```\nmkdir ~/bin\nln -s '/Applications/Sublime Text.app/Contents/SharedSupport/bin/subl' ~/bin/subl\n\ncd ~/bin\nvi .bashrc\nexport PATH=\"/Users/baby/bin:$PATH\"\nsource .bashrc\n```\n## 效果图\n![ite](http://opxoapzhs.bkt.clouddn.com/15046316197660/iter.png)\n\n## 编码问题\n针对subl3 \n\n1、按Control + ~打开命令行,然后输入下面这一行代码 代码报错[点我](https://packagecontrol.io/installation) 复制\n\n```\nimport urllib.request,os; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); open(os.path.join(ipp, pf), 'wb').write(urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ','%20')).read())\n```\n\n执行之后，必须重启Subl3，才能继续\n\n2、安装ConvertToUTF8\n按Command + Shift + P打开万能搜索框\n然后输入install package回车，这时候会加载所有的packges列表。看到列表之后再输入ConvertToUTF8回车，就会下载安装这个包。装好之后会看到个包的说明文件，\n\n3.重复2步骤 看到列表之后输入Codecs33回车。\n> 原因: 由于 Sublime Text 3 内嵌的 Python 限制，ConvertToUTF8 可能无法正常工作,所以你懂的\n\n\n# Phpstrome\n\n## 主题安装：\ncmd+shift + a 搜索 plugins ->点击 brow reposit... 搜索 Material Theme UI 选中 然后install ，安装完毕重启。\n![](http://opxoapzhs.bkt.clouddn.com/15046316197660/15047456737706.jpg)\n\n### 生效\ncmd+,Editor-->Color & Fonts 选择主题生效 点击右下角完成\n![](http://opxoapzhs.bkt.clouddn.com/15046316197660/15047461885857.jpg)\n\n\ncomd+1 左侧\n\n面包屑：\n![](http://opxoapzhs.bkt.clouddn.com/15046316197660/15046512637733.jpg)\ntabs placement :\n\n### 讨厌的波浪线\ncommand shift a 搜，warning 去设置一下，或者是 typo\n![](http://opxoapzhs.bkt.clouddn.com/15046316197660/15047436875078.jpg)\n\n\n### Xdebug-phpstome\n\n1.首先下载Debug\n\n2.配置php.ini\n\n```\n[xdebug]\nxdebug.remote_autostart=1\nxdebug.default_enable=1\nxdebug.remote_port=9001\nxdebug.remote_host=127.0.0.1\nxdebug.remote_connect_back=1\nxdebug.remote_enable=1\nxdebug.idekey=PHPSTORM\n```\n\n3.重启下php-fpm\n\n4.配置PHPstorm\n    * phpstorm -> preferences 打开设置页面：\n    * 然后，再选择 Languages -> php -> Debug 下，将Xdebug 下的Debug port 改成9001，和php.ini中设置的一致\n\n//OK。xdebug端口配置好了\n\ndebug也只是针对某一个页面在做的。我们以index.php页面为例，先打开index.php，菜单栏点击 run -->Edit Configurations 打开设置页面：\n![](http://opxoapzhs.bkt.clouddn.com/15046316197660/15047153533249.jpg)\n\n设置完成control+d 运行\nCli interpreter 错误 comd+shift+a 输入 Cli interpreter ，enter \n![](http://opxoapzhs.bkt.clouddn.com/15046316197660/15047156552449.jpg)\n\n参考：`http://blog.csdn.net/think2me/article/details/45344489`\n\n\n# 其他\nexport = '':$PATH\nsource ./bashrc \n       .bash_profile\nalias filename =''\n\n# Git \n\ngit config --global user.name 'username'\ngit config --global user.emali 'You-Emali'\n\nssh-keygen -t rsa -C 'You-Emali'\n\nid_rsa 私钥\nid_rsa.pub 弓腰\nknown_hosts 记录\nauthorized_keys 和做人弓腰\n\n## 优化git\n使用 `git add . ` 、 `git commit -m ` 很繁琐索性优化下\n首先在 `~/bin/` touch 一个 .alias 文件 写入：\n\n```\nalias gaa=\"git add .\"\n\nalias gc=\"git commit -m \"\n\nalias gp=\"git push\"\n\nalias gs=\"git status\"\n\n#alias gl=\"git log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit\"\n\n#alias gll=\"git log --graph --abbrev-commit --decorate --all --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(dim white) - %an%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n %C(white)%s%C(reset)'\"\n```\n\n编辑 `~/.zshrc` 最后加上 `source ~/bin/.alias` 即可。\n\n\n## 代码规范插件phpcode\n\n### 安装&更新\n官网[http://cs.sensiolabs.org](http://cs.sensiolabs.org)\n需要使用 PHP 5.3.6 以上的版本\n\ncurl 下载：\n\n```\ncurl -L http://cs.sensiolabs.org/download/php-cs-fixer-v2.phar -o php-cs-fixer\n```\n\nwget 下载：\n\n```\nwget http://cs.sensiolabs.org/download/php-cs-fixer-v2.phar -O php-cs-fixer\n\nor\n\nwget https://github.com/FriendsOfPHP/PHP-CS-Fixer/releases/download/v2.4.0/php-cs-fixer.phar -O php-cs-fixer\n```\n\n下载完成后给可执行的权限，然后移动到 bin 目录下面即可：\n\n```\nsudo chmod a+x php-cs-fixer\nsudo mv php-cs-fixer /usr/local/bin/php-cs-fixer\n```\n\n### 用法\n用法也很简单，最基本的命令参数就是 fix，直接执行时会尽可能多的根据默认标准格式化代码\n\n```\n# 格式化目录 如果是当前目录的话可以省略目录\nphp-cs-fixer fix /path/to/dir\n# 格式化文件\nphp-cs-fixer.phar fix /path/to/file\n```\n\n\n# 课外阅读\n# 优酷免费去广告\n打开 Chrome 的开发者工具，在 console 面板粘贴以下代码然后执行：\n\n```\nwindow.sessionStorage.setItem(\"P_l_h5\", true); \n```\n\n然后刷新，或者你使用其他浏览器的话，也是打开开发者工具，通常快捷键就是 F12，使用上面的代码。\n\n# 释放你的F5(comd+R)\n这是官网[browsersync](http://www.browsersync.cn/)\n基于node.js\nnpm install -g browser-sync\n\n启动 BrowserSync\n    需要进入项目目录！！\n    需要进入项目目录！！\n    需要进入项目目录！！\n\n静态网站\n```\n// --files 路径是相对于运行该命令的项目（目录） \nbrowser-sync start --server --files \"css/*.css\"\n```\n\n如果您需要监听多个类型的文件，您只需要用逗号隔开。\n\n\n动态网站\n如果您已经有其他本地服务器环境PHP或类似的，您需要使用代理模式。 BrowserSync将通过代理URL(localhost:3000)来查看您的网站。\n\n```\n// 主机名可以是ip或域名 这是官网给出的本人MAC无法使用\nbrowser-sync start --proxy \"主机名\" \"css/*.css\"\n```\n\n在本地创建了一个PHP服务器环境，并通过绑定Browsersync.cn来访问本地服务器，使用以下命令方式，Browsersync将提供一个新的地址localhost:3000来访问Browsersync.cn，并监听其css目录下的所有css文件。\n\n```\nbrowser-sync start --proxy \"Browsersync.cn\" \"css/*.css\"\n```\n\n无法使用怎么办？\n\n```\nbrowser-sync start --proxy \"主机名\" --files \"css/*.css\"\n```\nok 可以啦\n\n","source":"_posts/toolIDE.md","raw":"---\ntitle: MAC开发工具大杂烩\ndate: 2017-06-24 01:51:58\ntags: \n    - MAC\ncategories: 开发工具\n---\n开发必备部分软件安装配置教程\n\n文件打开提示放入垃圾桶打开终端键入：`sudo spctl --master-disable` 输入密码即可\n<!--more-->\n本人命令放在 `~/bin` 中 在 .zshrc 中 引入 `export PATH='/Users/baby/bin':$PATH` \n\n# brew：\n\n## 安装：\n安装前需要下载Xcode\n官网自行安装：[https://brew.sh](https://brew.sh)\n## 插件\n ```\n brew install tig  #高亮美化\n \n brew install ccat #美化cat命令\n alias cat=ccat    #替换系统cat命令\n \n brew install tree  #树形目录\n ```\n \n## 切换PHP版本\n一、使用brew安装php多版本方法\n\n```\nbrew install php56\nbrew install php70\n```\n\n二、安装切换工具\n\n```\nbrew install php-version\nsource $(brew --prefix php-version)/php-version.sh\n```\n\n三、查看当前安装的所有版本\n\n```\nphp-version\n```\n\n四、切换版本\n\n```\nphp-version 5.6.5\n```\n\n```\nbrew list\nbrew services start homebrew/php/php71\nbrew services restart php71\nbrew unlink php71\n```\n\n搞定\n\n# Itrem2\n\n\n## 下载&安装：Itrem2\n下载地址:[http://www.iterm2.com/downloads.html](http://www.iterm2.com/downloads.html)\n下载完成后直接拖到应用程序中\n\n设置选项：\n去除![](http://opxoapzhs.bkt.clouddn.com/15046316197660/15046381900701.jpg)\n\n```\n    cd ~\n    touch .hushlogin \n```\n\n效果如下：  是不是干净很清爽\n![](http://opxoapzhs.bkt.clouddn.com/15046316197660/15046383296331.jpg)\n## 自动提示：zsh-autosuggestions\n下载&安装\n依然是在github中：[zsh-autosuggestions](https://github.com/zsh-users/zsh-autosuggestions)\n手动安装：\n\n```\ngit clone git://github.com/zsh-users/zsh-autosuggestions ~/.zsh/zsh-autosuggestions\n```\n\n打开 `~/.zshrc` 文件 在做后一行换行添加\n\n```\nsource ~/.zsh/zsh-autosuggestions/zsh-autosuggestions.zsh\n```\n\n退出iterm2 重新打开即可\n\n\n\n![](http://opxoapzhs.bkt.clouddn.com/15046316197660/15046377401155.jpg)\n1:com+q 直接退出  2: cond+end 在当前窗口全屏\n\n![](http://opxoapzhs.bkt.clouddn.com/15046316197660/15046378769341.jpg)\n快捷键：在任何地方呼出iterm2 . 这里设施的是英文状态下的～ 数字数字1傍边那个\n\n\n-------\n材料：\nOh-My-zsh:[Oh-My-zsh](https://github.com/robbyrussell/oh-my-zsh) || github上搜索\n使用via curl下载\n输入密码即可\n配置文件存在于 `~/.zshrc` 打开它 大概第10行 `ZSH_THEME=\"robbyrussell\"` 我这里是 `ZSH_THEME=\"cloud\"`\n\n打开 [https://draculatheme.com](https://draculatheme.com) 找到iterm2 进行下载\n引入选择刚刚下载的主题配置：\n![](http://opxoapzhs.bkt.clouddn.com/15046316197660/15046441733710.jpg)\n\n\n字体设置：\n![](http://opxoapzhs.bkt.clouddn.com/15046316197660/15046443304233.jpg)\n\n最终系效果图-\n![oic](http://opxoapzhs.bkt.clouddn.com/15046316197660/oicc.png)\n\n\n### 加在缓慢：\n\n```\nsudo rm -rf /private/var/log/asl/*.asl\n```\n\n清理了终端 log 就好了 干净无用\n\n### shell 语法高亮\n先上图 2333：\n![](http://opxoapzhs.bkt.clouddn.com/15046316197660/15050353264309.jpg)\n\n炫不炫 绿色代表存在这个命令 一眼就看出来了，如果打错了，它就是红色的\n\n下载方式有很多，请自行安装，本人使用的手动安装 走你-->\n插件git地址: [zsh-syntax-highlighting](https://github.com/zsh-users/zsh-syntax-highlighting)\n\n安装起来非常简单，clone到$ZSH_CUSTOM/plugins目录，然后在.zshrc文件正配置一下即可。\n\n\n\n\n# Sublime\n下载&安装：\n打开sublime text 菜单栏找到 Tools -> install Packge... 稍等片刻即好，编辑器左下角安装状态\n![](http://opxoapzhs.bkt.clouddn.com/15046316197660/15046386227539.jpg)\n\n主题：command+shit+p --> install Package --> Material Theme;\n地址：[https://github.com/equinusocio/material-theme](https://github.com/equinusocio/material-theme)\n\n配置：\ncommand + ,\n```\n{\n\t\"color_scheme\": \"Packages/Material Theme/schemes/Material-Theme.tmTheme\",\n\t\"font_face\": \"Fira Code\",\n\t\"font_size\": 14,\n\t\"ignored_packages\":\n\t[\n\t\t\"Vintage\"\n\t],\n\t\"line_padding_bottom\": 2,\n\t\"line_padding_top\": 2,\n\t\"open_files_in_new_window\": false,\n\t\"theme\": \"Material-Theme.sublime-theme\",\n\t\"update_check\": false\n}\n```\n对应：配色、字体、字号、【 】、行与行上间距、行与行下间距、禁止打开文件新建窗口、启动时创建窗口、主题、关闭自动更新提示\n字体：链接: https://pan.baidu.com/s/1nuCW4Lb 密码: mxvv\n\n\n\n## 通过命令行启动\n官网地址：[https://www.sublimetext.com/docs/3/osx_command_line.html](https://www.sublimetext.com/docs/3/osx_command_line.html)\n```\nmkdir ~/bin\nln -s '/Applications/Sublime Text.app/Contents/SharedSupport/bin/subl' ~/bin/subl\n\ncd ~/bin\nvi .bashrc\nexport PATH=\"/Users/baby/bin:$PATH\"\nsource .bashrc\n```\n## 效果图\n![ite](http://opxoapzhs.bkt.clouddn.com/15046316197660/iter.png)\n\n## 编码问题\n针对subl3 \n\n1、按Control + ~打开命令行,然后输入下面这一行代码 代码报错[点我](https://packagecontrol.io/installation) 复制\n\n```\nimport urllib.request,os; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); open(os.path.join(ipp, pf), 'wb').write(urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ','%20')).read())\n```\n\n执行之后，必须重启Subl3，才能继续\n\n2、安装ConvertToUTF8\n按Command + Shift + P打开万能搜索框\n然后输入install package回车，这时候会加载所有的packges列表。看到列表之后再输入ConvertToUTF8回车，就会下载安装这个包。装好之后会看到个包的说明文件，\n\n3.重复2步骤 看到列表之后输入Codecs33回车。\n> 原因: 由于 Sublime Text 3 内嵌的 Python 限制，ConvertToUTF8 可能无法正常工作,所以你懂的\n\n\n# Phpstrome\n\n## 主题安装：\ncmd+shift + a 搜索 plugins ->点击 brow reposit... 搜索 Material Theme UI 选中 然后install ，安装完毕重启。\n![](http://opxoapzhs.bkt.clouddn.com/15046316197660/15047456737706.jpg)\n\n### 生效\ncmd+,Editor-->Color & Fonts 选择主题生效 点击右下角完成\n![](http://opxoapzhs.bkt.clouddn.com/15046316197660/15047461885857.jpg)\n\n\ncomd+1 左侧\n\n面包屑：\n![](http://opxoapzhs.bkt.clouddn.com/15046316197660/15046512637733.jpg)\ntabs placement :\n\n### 讨厌的波浪线\ncommand shift a 搜，warning 去设置一下，或者是 typo\n![](http://opxoapzhs.bkt.clouddn.com/15046316197660/15047436875078.jpg)\n\n\n### Xdebug-phpstome\n\n1.首先下载Debug\n\n2.配置php.ini\n\n```\n[xdebug]\nxdebug.remote_autostart=1\nxdebug.default_enable=1\nxdebug.remote_port=9001\nxdebug.remote_host=127.0.0.1\nxdebug.remote_connect_back=1\nxdebug.remote_enable=1\nxdebug.idekey=PHPSTORM\n```\n\n3.重启下php-fpm\n\n4.配置PHPstorm\n    * phpstorm -> preferences 打开设置页面：\n    * 然后，再选择 Languages -> php -> Debug 下，将Xdebug 下的Debug port 改成9001，和php.ini中设置的一致\n\n//OK。xdebug端口配置好了\n\ndebug也只是针对某一个页面在做的。我们以index.php页面为例，先打开index.php，菜单栏点击 run -->Edit Configurations 打开设置页面：\n![](http://opxoapzhs.bkt.clouddn.com/15046316197660/15047153533249.jpg)\n\n设置完成control+d 运行\nCli interpreter 错误 comd+shift+a 输入 Cli interpreter ，enter \n![](http://opxoapzhs.bkt.clouddn.com/15046316197660/15047156552449.jpg)\n\n参考：`http://blog.csdn.net/think2me/article/details/45344489`\n\n\n# 其他\nexport = '':$PATH\nsource ./bashrc \n       .bash_profile\nalias filename =''\n\n# Git \n\ngit config --global user.name 'username'\ngit config --global user.emali 'You-Emali'\n\nssh-keygen -t rsa -C 'You-Emali'\n\nid_rsa 私钥\nid_rsa.pub 弓腰\nknown_hosts 记录\nauthorized_keys 和做人弓腰\n\n## 优化git\n使用 `git add . ` 、 `git commit -m ` 很繁琐索性优化下\n首先在 `~/bin/` touch 一个 .alias 文件 写入：\n\n```\nalias gaa=\"git add .\"\n\nalias gc=\"git commit -m \"\n\nalias gp=\"git push\"\n\nalias gs=\"git status\"\n\n#alias gl=\"git log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit\"\n\n#alias gll=\"git log --graph --abbrev-commit --decorate --all --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(dim white) - %an%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n %C(white)%s%C(reset)'\"\n```\n\n编辑 `~/.zshrc` 最后加上 `source ~/bin/.alias` 即可。\n\n\n## 代码规范插件phpcode\n\n### 安装&更新\n官网[http://cs.sensiolabs.org](http://cs.sensiolabs.org)\n需要使用 PHP 5.3.6 以上的版本\n\ncurl 下载：\n\n```\ncurl -L http://cs.sensiolabs.org/download/php-cs-fixer-v2.phar -o php-cs-fixer\n```\n\nwget 下载：\n\n```\nwget http://cs.sensiolabs.org/download/php-cs-fixer-v2.phar -O php-cs-fixer\n\nor\n\nwget https://github.com/FriendsOfPHP/PHP-CS-Fixer/releases/download/v2.4.0/php-cs-fixer.phar -O php-cs-fixer\n```\n\n下载完成后给可执行的权限，然后移动到 bin 目录下面即可：\n\n```\nsudo chmod a+x php-cs-fixer\nsudo mv php-cs-fixer /usr/local/bin/php-cs-fixer\n```\n\n### 用法\n用法也很简单，最基本的命令参数就是 fix，直接执行时会尽可能多的根据默认标准格式化代码\n\n```\n# 格式化目录 如果是当前目录的话可以省略目录\nphp-cs-fixer fix /path/to/dir\n# 格式化文件\nphp-cs-fixer.phar fix /path/to/file\n```\n\n\n# 课外阅读\n# 优酷免费去广告\n打开 Chrome 的开发者工具，在 console 面板粘贴以下代码然后执行：\n\n```\nwindow.sessionStorage.setItem(\"P_l_h5\", true); \n```\n\n然后刷新，或者你使用其他浏览器的话，也是打开开发者工具，通常快捷键就是 F12，使用上面的代码。\n\n# 释放你的F5(comd+R)\n这是官网[browsersync](http://www.browsersync.cn/)\n基于node.js\nnpm install -g browser-sync\n\n启动 BrowserSync\n    需要进入项目目录！！\n    需要进入项目目录！！\n    需要进入项目目录！！\n\n静态网站\n```\n// --files 路径是相对于运行该命令的项目（目录） \nbrowser-sync start --server --files \"css/*.css\"\n```\n\n如果您需要监听多个类型的文件，您只需要用逗号隔开。\n\n\n动态网站\n如果您已经有其他本地服务器环境PHP或类似的，您需要使用代理模式。 BrowserSync将通过代理URL(localhost:3000)来查看您的网站。\n\n```\n// 主机名可以是ip或域名 这是官网给出的本人MAC无法使用\nbrowser-sync start --proxy \"主机名\" \"css/*.css\"\n```\n\n在本地创建了一个PHP服务器环境，并通过绑定Browsersync.cn来访问本地服务器，使用以下命令方式，Browsersync将提供一个新的地址localhost:3000来访问Browsersync.cn，并监听其css目录下的所有css文件。\n\n```\nbrowser-sync start --proxy \"Browsersync.cn\" \"css/*.css\"\n```\n\n无法使用怎么办？\n\n```\nbrowser-sync start --proxy \"主机名\" --files \"css/*.css\"\n```\nok 可以啦\n\n","slug":"toolIDE","published":1,"updated":"2017-09-24T21:02:02.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj7zrohrd000zr1s6wp23objx","content":"<p>开发必备部分软件安装配置教程</p>\n<p>文件打开提示放入垃圾桶打开终端键入：<code>sudo spctl --master-disable</code> 输入密码即可<br><a id=\"more\"></a><br>本人命令放在 <code>~/bin</code> 中 在 .zshrc 中 引入 <code>export PATH=&#39;/Users/baby/bin&#39;:$PATH</code> </p>\n<h1 id=\"brew：\"><a href=\"#brew：\" class=\"headerlink\" title=\"brew：\"></a>brew：</h1><h2 id=\"安装：\"><a href=\"#安装：\" class=\"headerlink\" title=\"安装：\"></a>安装：</h2><p>安装前需要下载Xcode<br>官网自行安装：<a href=\"https://brew.sh\" target=\"_blank\" rel=\"external\">https://brew.sh</a></p>\n<h2 id=\"插件\"><a href=\"#插件\" class=\"headerlink\" title=\"插件\"></a>插件</h2> <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">brew install tig  #高亮美化</div><div class=\"line\"></div><div class=\"line\">brew install ccat #美化cat命令</div><div class=\"line\">alias cat=ccat    #替换系统cat命令</div><div class=\"line\"></div><div class=\"line\">brew install tree  #树形目录</div></pre></td></tr></table></figure>\n<h2 id=\"切换PHP版本\"><a href=\"#切换PHP版本\" class=\"headerlink\" title=\"切换PHP版本\"></a>切换PHP版本</h2><p>一、使用brew安装php多版本方法</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">brew install php56</div><div class=\"line\">brew install php70</div></pre></td></tr></table></figure>\n<p>二、安装切换工具</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">brew install php-version</div><div class=\"line\">source $(brew --prefix php-version)/php-version.sh</div></pre></td></tr></table></figure>\n<p>三、查看当前安装的所有版本</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">php-version</div></pre></td></tr></table></figure>\n<p>四、切换版本</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">php-version 5.6.5</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">brew list</div><div class=\"line\">brew services start homebrew/php/php71</div><div class=\"line\">brew services restart php71</div><div class=\"line\">brew unlink php71</div></pre></td></tr></table></figure>\n<p>搞定</p>\n<h1 id=\"Itrem2\"><a href=\"#Itrem2\" class=\"headerlink\" title=\"Itrem2\"></a>Itrem2</h1><h2 id=\"下载-amp-安装：Itrem2\"><a href=\"#下载-amp-安装：Itrem2\" class=\"headerlink\" title=\"下载&amp;安装：Itrem2\"></a>下载&amp;安装：Itrem2</h2><p>下载地址:<a href=\"http://www.iterm2.com/downloads.html\" target=\"_blank\" rel=\"external\">http://www.iterm2.com/downloads.html</a><br>下载完成后直接拖到应用程序中</p>\n<p>设置选项：<br>去除<img src=\"http://opxoapzhs.bkt.clouddn.com/15046316197660/15046381900701.jpg\" alt=\"\"></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">cd ~</div><div class=\"line\">touch .hushlogin</div></pre></td></tr></table></figure>\n<p>效果如下：  是不是干净很清爽<br><img src=\"http://opxoapzhs.bkt.clouddn.com/15046316197660/15046383296331.jpg\" alt=\"\"></p>\n<h2 id=\"自动提示：zsh-autosuggestions\"><a href=\"#自动提示：zsh-autosuggestions\" class=\"headerlink\" title=\"自动提示：zsh-autosuggestions\"></a>自动提示：zsh-autosuggestions</h2><p>下载&amp;安装<br>依然是在github中：<a href=\"https://github.com/zsh-users/zsh-autosuggestions\" target=\"_blank\" rel=\"external\">zsh-autosuggestions</a><br>手动安装：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git clone git://github.com/zsh-users/zsh-autosuggestions ~/.zsh/zsh-autosuggestions</div></pre></td></tr></table></figure>\n<p>打开 <code>~/.zshrc</code> 文件 在做后一行换行添加</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">source ~/.zsh/zsh-autosuggestions/zsh-autosuggestions.zsh</div></pre></td></tr></table></figure>\n<p>退出iterm2 重新打开即可</p>\n<p><img src=\"http://opxoapzhs.bkt.clouddn.com/15046316197660/15046377401155.jpg\" alt=\"\"><br>1:com+q 直接退出  2: cond+end 在当前窗口全屏</p>\n<p><img src=\"http://opxoapzhs.bkt.clouddn.com/15046316197660/15046378769341.jpg\" alt=\"\"><br>快捷键：在任何地方呼出iterm2 . 这里设施的是英文状态下的～ 数字数字1傍边那个</p>\n<hr>\n<p>材料：<br>Oh-My-zsh:<a href=\"https://github.com/robbyrussell/oh-my-zsh\" target=\"_blank\" rel=\"external\">Oh-My-zsh</a> || github上搜索<br>使用via curl下载<br>输入密码即可<br>配置文件存在于 <code>~/.zshrc</code> 打开它 大概第10行 <code>ZSH_THEME=&quot;robbyrussell&quot;</code> 我这里是 <code>ZSH_THEME=&quot;cloud&quot;</code></p>\n<p>打开 <a href=\"https://draculatheme.com\" target=\"_blank\" rel=\"external\">https://draculatheme.com</a> 找到iterm2 进行下载<br>引入选择刚刚下载的主题配置：<br><img src=\"http://opxoapzhs.bkt.clouddn.com/15046316197660/15046441733710.jpg\" alt=\"\"></p>\n<p>字体设置：<br><img src=\"http://opxoapzhs.bkt.clouddn.com/15046316197660/15046443304233.jpg\" alt=\"\"></p>\n<p>最终系效果图-<br><img src=\"http://opxoapzhs.bkt.clouddn.com/15046316197660/oicc.png\" alt=\"oic\"></p>\n<h3 id=\"加在缓慢：\"><a href=\"#加在缓慢：\" class=\"headerlink\" title=\"加在缓慢：\"></a>加在缓慢：</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo rm -rf /private/var/log/asl/*.asl</div></pre></td></tr></table></figure>\n<p>清理了终端 log 就好了 干净无用</p>\n<h3 id=\"shell-语法高亮\"><a href=\"#shell-语法高亮\" class=\"headerlink\" title=\"shell 语法高亮\"></a>shell 语法高亮</h3><p>先上图 2333：<br><img src=\"http://opxoapzhs.bkt.clouddn.com/15046316197660/15050353264309.jpg\" alt=\"\"></p>\n<p>炫不炫 绿色代表存在这个命令 一眼就看出来了，如果打错了，它就是红色的</p>\n<p>下载方式有很多，请自行安装，本人使用的手动安装 走你–&gt;<br>插件git地址: <a href=\"https://github.com/zsh-users/zsh-syntax-highlighting\" target=\"_blank\" rel=\"external\">zsh-syntax-highlighting</a></p>\n<p>安装起来非常简单，clone到$ZSH_CUSTOM/plugins目录，然后在.zshrc文件正配置一下即可。</p>\n<h1 id=\"Sublime\"><a href=\"#Sublime\" class=\"headerlink\" title=\"Sublime\"></a>Sublime</h1><p>下载&amp;安装：<br>打开sublime text 菜单栏找到 Tools -&gt; install Packge… 稍等片刻即好，编辑器左下角安装状态<br><img src=\"http://opxoapzhs.bkt.clouddn.com/15046316197660/15046386227539.jpg\" alt=\"\"></p>\n<p>主题：command+shit+p –&gt; install Package –&gt; Material Theme;<br>地址：<a href=\"https://github.com/equinusocio/material-theme\" target=\"_blank\" rel=\"external\">https://github.com/equinusocio/material-theme</a></p>\n<p>配置：<br>command + ,<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;</div><div class=\"line\">\t&quot;color_scheme&quot;: &quot;Packages/Material Theme/schemes/Material-Theme.tmTheme&quot;,</div><div class=\"line\">\t&quot;font_face&quot;: &quot;Fira Code&quot;,</div><div class=\"line\">\t&quot;font_size&quot;: 14,</div><div class=\"line\">\t&quot;ignored_packages&quot;:</div><div class=\"line\">\t[</div><div class=\"line\">\t\t&quot;Vintage&quot;</div><div class=\"line\">\t],</div><div class=\"line\">\t&quot;line_padding_bottom&quot;: 2,</div><div class=\"line\">\t&quot;line_padding_top&quot;: 2,</div><div class=\"line\">\t&quot;open_files_in_new_window&quot;: false,</div><div class=\"line\">\t&quot;theme&quot;: &quot;Material-Theme.sublime-theme&quot;,</div><div class=\"line\">\t&quot;update_check&quot;: false</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>对应：配色、字体、字号、【 】、行与行上间距、行与行下间距、禁止打开文件新建窗口、启动时创建窗口、主题、关闭自动更新提示<br>字体：链接: <a href=\"https://pan.baidu.com/s/1nuCW4Lb\" target=\"_blank\" rel=\"external\">https://pan.baidu.com/s/1nuCW4Lb</a> 密码: mxvv</p>\n<h2 id=\"通过命令行启动\"><a href=\"#通过命令行启动\" class=\"headerlink\" title=\"通过命令行启动\"></a>通过命令行启动</h2><p>官网地址：<a href=\"https://www.sublimetext.com/docs/3/osx_command_line.html\" target=\"_blank\" rel=\"external\">https://www.sublimetext.com/docs/3/osx_command_line.html</a><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">mkdir ~/bin</div><div class=\"line\">ln -s &apos;/Applications/Sublime Text.app/Contents/SharedSupport/bin/subl&apos; ~/bin/subl</div><div class=\"line\"></div><div class=\"line\">cd ~/bin</div><div class=\"line\">vi .bashrc</div><div class=\"line\">export PATH=&quot;/Users/baby/bin:$PATH&quot;</div><div class=\"line\">source .bashrc</div></pre></td></tr></table></figure></p>\n<h2 id=\"效果图\"><a href=\"#效果图\" class=\"headerlink\" title=\"效果图\"></a>效果图</h2><p><img src=\"http://opxoapzhs.bkt.clouddn.com/15046316197660/iter.png\" alt=\"ite\"></p>\n<h2 id=\"编码问题\"><a href=\"#编码问题\" class=\"headerlink\" title=\"编码问题\"></a>编码问题</h2><p>针对subl3 </p>\n<p>1、按Control + ~打开命令行,然后输入下面这一行代码 代码报错<a href=\"https://packagecontrol.io/installation\" target=\"_blank\" rel=\"external\">点我</a> 复制</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">import urllib.request,os; pf = &apos;Package Control.sublime-package&apos;; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); open(os.path.join(ipp, pf), &apos;wb&apos;).write(urllib.request.urlopen( &apos;http://sublime.wbond.net/&apos; + pf.replace(&apos; &apos;,&apos;%20&apos;)).read())</div></pre></td></tr></table></figure>\n<p>执行之后，必须重启Subl3，才能继续</p>\n<p>2、安装ConvertToUTF8<br>按Command + Shift + P打开万能搜索框<br>然后输入install package回车，这时候会加载所有的packges列表。看到列表之后再输入ConvertToUTF8回车，就会下载安装这个包。装好之后会看到个包的说明文件，</p>\n<p>3.重复2步骤 看到列表之后输入Codecs33回车。</p>\n<blockquote>\n<p>原因: 由于 Sublime Text 3 内嵌的 Python 限制，ConvertToUTF8 可能无法正常工作,所以你懂的</p>\n</blockquote>\n<h1 id=\"Phpstrome\"><a href=\"#Phpstrome\" class=\"headerlink\" title=\"Phpstrome\"></a>Phpstrome</h1><h2 id=\"主题安装：\"><a href=\"#主题安装：\" class=\"headerlink\" title=\"主题安装：\"></a>主题安装：</h2><p>cmd+shift + a 搜索 plugins -&gt;点击 brow reposit… 搜索 Material Theme UI 选中 然后install ，安装完毕重启。<br><img src=\"http://opxoapzhs.bkt.clouddn.com/15046316197660/15047456737706.jpg\" alt=\"\"></p>\n<h3 id=\"生效\"><a href=\"#生效\" class=\"headerlink\" title=\"生效\"></a>生效</h3><p>cmd+,Editor–&gt;Color &amp; Fonts 选择主题生效 点击右下角完成<br><img src=\"http://opxoapzhs.bkt.clouddn.com/15046316197660/15047461885857.jpg\" alt=\"\"></p>\n<p>comd+1 左侧</p>\n<p>面包屑：<br><img src=\"http://opxoapzhs.bkt.clouddn.com/15046316197660/15046512637733.jpg\" alt=\"\"><br>tabs placement :</p>\n<h3 id=\"讨厌的波浪线\"><a href=\"#讨厌的波浪线\" class=\"headerlink\" title=\"讨厌的波浪线\"></a>讨厌的波浪线</h3><p>command shift a 搜，warning 去设置一下，或者是 typo<br><img src=\"http://opxoapzhs.bkt.clouddn.com/15046316197660/15047436875078.jpg\" alt=\"\"></p>\n<h3 id=\"Xdebug-phpstome\"><a href=\"#Xdebug-phpstome\" class=\"headerlink\" title=\"Xdebug-phpstome\"></a>Xdebug-phpstome</h3><p>1.首先下载Debug</p>\n<p>2.配置php.ini</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">[xdebug]</div><div class=\"line\">xdebug.remote_autostart=1</div><div class=\"line\">xdebug.default_enable=1</div><div class=\"line\">xdebug.remote_port=9001</div><div class=\"line\">xdebug.remote_host=127.0.0.1</div><div class=\"line\">xdebug.remote_connect_back=1</div><div class=\"line\">xdebug.remote_enable=1</div><div class=\"line\">xdebug.idekey=PHPSTORM</div></pre></td></tr></table></figure>\n<p>3.重启下php-fpm</p>\n<p>4.配置PHPstorm</p>\n<pre><code>* phpstorm -&gt; preferences 打开设置页面：\n* 然后，再选择 Languages -&gt; php -&gt; Debug 下，将Xdebug 下的Debug port 改成9001，和php.ini中设置的一致\n</code></pre><p>//OK。xdebug端口配置好了</p>\n<p>debug也只是针对某一个页面在做的。我们以index.php页面为例，先打开index.php，菜单栏点击 run –&gt;Edit Configurations 打开设置页面：<br><img src=\"http://opxoapzhs.bkt.clouddn.com/15046316197660/15047153533249.jpg\" alt=\"\"></p>\n<p>设置完成control+d 运行<br>Cli interpreter 错误 comd+shift+a 输入 Cli interpreter ，enter<br><img src=\"http://opxoapzhs.bkt.clouddn.com/15046316197660/15047156552449.jpg\" alt=\"\"></p>\n<p>参考：<code>http://blog.csdn.net/think2me/article/details/45344489</code></p>\n<h1 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h1><p>export = ‘’:$PATH<br>source ./bashrc<br>       .bash_profile<br>alias filename =’’</p>\n<h1 id=\"Git\"><a href=\"#Git\" class=\"headerlink\" title=\"Git\"></a>Git</h1><p>git config –global user.name ‘username’<br>git config –global user.emali ‘You-Emali’</p>\n<p>ssh-keygen -t rsa -C ‘You-Emali’</p>\n<p>id_rsa 私钥<br>id_rsa.pub 弓腰<br>known_hosts 记录<br>authorized_keys 和做人弓腰</p>\n<h2 id=\"优化git\"><a href=\"#优化git\" class=\"headerlink\" title=\"优化git\"></a>优化git</h2><p>使用 <code>git add .</code> 、 <code>git commit -m</code> 很繁琐索性优化下<br>首先在 <code>~/bin/</code> touch 一个 .alias 文件 写入：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">alias gaa=&quot;git add .&quot;</div><div class=\"line\"></div><div class=\"line\">alias gc=&quot;git commit -m &quot;</div><div class=\"line\"></div><div class=\"line\">alias gp=&quot;git push&quot;</div><div class=\"line\"></div><div class=\"line\">alias gs=&quot;git status&quot;</div><div class=\"line\"></div><div class=\"line\">#alias gl=&quot;git log --graph --pretty=format:&apos;%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)&lt;%an&gt;%Creset&apos; --abbrev-commit&quot;</div><div class=\"line\"></div><div class=\"line\">#alias gll=&quot;git log --graph --abbrev-commit --decorate --all --format=format:&apos;%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(dim white) - %an%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n %C(white)%s%C(reset)&apos;&quot;</div></pre></td></tr></table></figure>\n<p>编辑 <code>~/.zshrc</code> 最后加上 <code>source ~/bin/.alias</code> 即可。</p>\n<h2 id=\"代码规范插件phpcode\"><a href=\"#代码规范插件phpcode\" class=\"headerlink\" title=\"代码规范插件phpcode\"></a>代码规范插件phpcode</h2><h3 id=\"安装-amp-更新\"><a href=\"#安装-amp-更新\" class=\"headerlink\" title=\"安装&amp;更新\"></a>安装&amp;更新</h3><p>官网<a href=\"http://cs.sensiolabs.org\" target=\"_blank\" rel=\"external\">http://cs.sensiolabs.org</a><br>需要使用 PHP 5.3.6 以上的版本</p>\n<p>curl 下载：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">curl -L http://cs.sensiolabs.org/download/php-cs-fixer-v2.phar -o php-cs-fixer</div></pre></td></tr></table></figure>\n<p>wget 下载：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">wget http://cs.sensiolabs.org/download/php-cs-fixer-v2.phar -O php-cs-fixer</div><div class=\"line\"></div><div class=\"line\">or</div><div class=\"line\"></div><div class=\"line\">wget https://github.com/FriendsOfPHP/PHP-CS-Fixer/releases/download/v2.4.0/php-cs-fixer.phar -O php-cs-fixer</div></pre></td></tr></table></figure>\n<p>下载完成后给可执行的权限，然后移动到 bin 目录下面即可：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo chmod a+x php-cs-fixer</div><div class=\"line\">sudo mv php-cs-fixer /usr/local/bin/php-cs-fixer</div></pre></td></tr></table></figure>\n<h3 id=\"用法\"><a href=\"#用法\" class=\"headerlink\" title=\"用法\"></a>用法</h3><p>用法也很简单，最基本的命令参数就是 fix，直接执行时会尽可能多的根据默认标准格式化代码</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"># 格式化目录 如果是当前目录的话可以省略目录</div><div class=\"line\">php-cs-fixer fix /path/to/dir</div><div class=\"line\"># 格式化文件</div><div class=\"line\">php-cs-fixer.phar fix /path/to/file</div></pre></td></tr></table></figure>\n<h1 id=\"课外阅读\"><a href=\"#课外阅读\" class=\"headerlink\" title=\"课外阅读\"></a>课外阅读</h1><h1 id=\"优酷免费去广告\"><a href=\"#优酷免费去广告\" class=\"headerlink\" title=\"优酷免费去广告\"></a>优酷免费去广告</h1><p>打开 Chrome 的开发者工具，在 console 面板粘贴以下代码然后执行：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">window.sessionStorage.setItem(&quot;P_l_h5&quot;, true);</div></pre></td></tr></table></figure>\n<p>然后刷新，或者你使用其他浏览器的话，也是打开开发者工具，通常快捷键就是 F12，使用上面的代码。</p>\n<h1 id=\"释放你的F5-comd-R\"><a href=\"#释放你的F5-comd-R\" class=\"headerlink\" title=\"释放你的F5(comd+R)\"></a>释放你的F5(comd+R)</h1><p>这是官网<a href=\"http://www.browsersync.cn/\" target=\"_blank\" rel=\"external\">browsersync</a><br>基于node.js<br>npm install -g browser-sync</p>\n<p>启动 BrowserSync<br>    需要进入项目目录！！<br>    需要进入项目目录！！<br>    需要进入项目目录！！</p>\n<p>静态网站<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">// --files 路径是相对于运行该命令的项目（目录） </div><div class=\"line\">browser-sync start --server --files &quot;css/*.css&quot;</div></pre></td></tr></table></figure></p>\n<p>如果您需要监听多个类型的文件，您只需要用逗号隔开。</p>\n<p>动态网站<br>如果您已经有其他本地服务器环境PHP或类似的，您需要使用代理模式。 BrowserSync将通过代理URL(localhost:3000)来查看您的网站。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">// 主机名可以是ip或域名 这是官网给出的本人MAC无法使用</div><div class=\"line\">browser-sync start --proxy &quot;主机名&quot; &quot;css/*.css&quot;</div></pre></td></tr></table></figure>\n<p>在本地创建了一个PHP服务器环境，并通过绑定Browsersync.cn来访问本地服务器，使用以下命令方式，Browsersync将提供一个新的地址localhost:3000来访问Browsersync.cn，并监听其css目录下的所有css文件。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">browser-sync start --proxy &quot;Browsersync.cn&quot; &quot;css/*.css&quot;</div></pre></td></tr></table></figure>\n<p>无法使用怎么办？</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">browser-sync start --proxy &quot;主机名&quot; --files &quot;css/*.css&quot;</div></pre></td></tr></table></figure>\n<p>ok 可以啦</p>\n","site":{"data":{}},"excerpt":"<p>开发必备部分软件安装配置教程</p>\n<p>文件打开提示放入垃圾桶打开终端键入：<code>sudo spctl --master-disable</code> 输入密码即可<br>","more":"<br>本人命令放在 <code>~/bin</code> 中 在 .zshrc 中 引入 <code>export PATH=&#39;/Users/baby/bin&#39;:$PATH</code> </p>\n<h1 id=\"brew：\"><a href=\"#brew：\" class=\"headerlink\" title=\"brew：\"></a>brew：</h1><h2 id=\"安装：\"><a href=\"#安装：\" class=\"headerlink\" title=\"安装：\"></a>安装：</h2><p>安装前需要下载Xcode<br>官网自行安装：<a href=\"https://brew.sh\" target=\"_blank\" rel=\"external\">https://brew.sh</a></p>\n<h2 id=\"插件\"><a href=\"#插件\" class=\"headerlink\" title=\"插件\"></a>插件</h2> <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">brew install tig  #高亮美化</div><div class=\"line\"></div><div class=\"line\">brew install ccat #美化cat命令</div><div class=\"line\">alias cat=ccat    #替换系统cat命令</div><div class=\"line\"></div><div class=\"line\">brew install tree  #树形目录</div></pre></td></tr></table></figure>\n<h2 id=\"切换PHP版本\"><a href=\"#切换PHP版本\" class=\"headerlink\" title=\"切换PHP版本\"></a>切换PHP版本</h2><p>一、使用brew安装php多版本方法</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">brew install php56</div><div class=\"line\">brew install php70</div></pre></td></tr></table></figure>\n<p>二、安装切换工具</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">brew install php-version</div><div class=\"line\">source $(brew --prefix php-version)/php-version.sh</div></pre></td></tr></table></figure>\n<p>三、查看当前安装的所有版本</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">php-version</div></pre></td></tr></table></figure>\n<p>四、切换版本</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">php-version 5.6.5</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">brew list</div><div class=\"line\">brew services start homebrew/php/php71</div><div class=\"line\">brew services restart php71</div><div class=\"line\">brew unlink php71</div></pre></td></tr></table></figure>\n<p>搞定</p>\n<h1 id=\"Itrem2\"><a href=\"#Itrem2\" class=\"headerlink\" title=\"Itrem2\"></a>Itrem2</h1><h2 id=\"下载-amp-安装：Itrem2\"><a href=\"#下载-amp-安装：Itrem2\" class=\"headerlink\" title=\"下载&amp;安装：Itrem2\"></a>下载&amp;安装：Itrem2</h2><p>下载地址:<a href=\"http://www.iterm2.com/downloads.html\" target=\"_blank\" rel=\"external\">http://www.iterm2.com/downloads.html</a><br>下载完成后直接拖到应用程序中</p>\n<p>设置选项：<br>去除<img src=\"http://opxoapzhs.bkt.clouddn.com/15046316197660/15046381900701.jpg\" alt=\"\"></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">cd ~</div><div class=\"line\">touch .hushlogin</div></pre></td></tr></table></figure>\n<p>效果如下：  是不是干净很清爽<br><img src=\"http://opxoapzhs.bkt.clouddn.com/15046316197660/15046383296331.jpg\" alt=\"\"></p>\n<h2 id=\"自动提示：zsh-autosuggestions\"><a href=\"#自动提示：zsh-autosuggestions\" class=\"headerlink\" title=\"自动提示：zsh-autosuggestions\"></a>自动提示：zsh-autosuggestions</h2><p>下载&amp;安装<br>依然是在github中：<a href=\"https://github.com/zsh-users/zsh-autosuggestions\" target=\"_blank\" rel=\"external\">zsh-autosuggestions</a><br>手动安装：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git clone git://github.com/zsh-users/zsh-autosuggestions ~/.zsh/zsh-autosuggestions</div></pre></td></tr></table></figure>\n<p>打开 <code>~/.zshrc</code> 文件 在做后一行换行添加</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">source ~/.zsh/zsh-autosuggestions/zsh-autosuggestions.zsh</div></pre></td></tr></table></figure>\n<p>退出iterm2 重新打开即可</p>\n<p><img src=\"http://opxoapzhs.bkt.clouddn.com/15046316197660/15046377401155.jpg\" alt=\"\"><br>1:com+q 直接退出  2: cond+end 在当前窗口全屏</p>\n<p><img src=\"http://opxoapzhs.bkt.clouddn.com/15046316197660/15046378769341.jpg\" alt=\"\"><br>快捷键：在任何地方呼出iterm2 . 这里设施的是英文状态下的～ 数字数字1傍边那个</p>\n<hr>\n<p>材料：<br>Oh-My-zsh:<a href=\"https://github.com/robbyrussell/oh-my-zsh\" target=\"_blank\" rel=\"external\">Oh-My-zsh</a> || github上搜索<br>使用via curl下载<br>输入密码即可<br>配置文件存在于 <code>~/.zshrc</code> 打开它 大概第10行 <code>ZSH_THEME=&quot;robbyrussell&quot;</code> 我这里是 <code>ZSH_THEME=&quot;cloud&quot;</code></p>\n<p>打开 <a href=\"https://draculatheme.com\" target=\"_blank\" rel=\"external\">https://draculatheme.com</a> 找到iterm2 进行下载<br>引入选择刚刚下载的主题配置：<br><img src=\"http://opxoapzhs.bkt.clouddn.com/15046316197660/15046441733710.jpg\" alt=\"\"></p>\n<p>字体设置：<br><img src=\"http://opxoapzhs.bkt.clouddn.com/15046316197660/15046443304233.jpg\" alt=\"\"></p>\n<p>最终系效果图-<br><img src=\"http://opxoapzhs.bkt.clouddn.com/15046316197660/oicc.png\" alt=\"oic\"></p>\n<h3 id=\"加在缓慢：\"><a href=\"#加在缓慢：\" class=\"headerlink\" title=\"加在缓慢：\"></a>加在缓慢：</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo rm -rf /private/var/log/asl/*.asl</div></pre></td></tr></table></figure>\n<p>清理了终端 log 就好了 干净无用</p>\n<h3 id=\"shell-语法高亮\"><a href=\"#shell-语法高亮\" class=\"headerlink\" title=\"shell 语法高亮\"></a>shell 语法高亮</h3><p>先上图 2333：<br><img src=\"http://opxoapzhs.bkt.clouddn.com/15046316197660/15050353264309.jpg\" alt=\"\"></p>\n<p>炫不炫 绿色代表存在这个命令 一眼就看出来了，如果打错了，它就是红色的</p>\n<p>下载方式有很多，请自行安装，本人使用的手动安装 走你–&gt;<br>插件git地址: <a href=\"https://github.com/zsh-users/zsh-syntax-highlighting\" target=\"_blank\" rel=\"external\">zsh-syntax-highlighting</a></p>\n<p>安装起来非常简单，clone到$ZSH_CUSTOM/plugins目录，然后在.zshrc文件正配置一下即可。</p>\n<h1 id=\"Sublime\"><a href=\"#Sublime\" class=\"headerlink\" title=\"Sublime\"></a>Sublime</h1><p>下载&amp;安装：<br>打开sublime text 菜单栏找到 Tools -&gt; install Packge… 稍等片刻即好，编辑器左下角安装状态<br><img src=\"http://opxoapzhs.bkt.clouddn.com/15046316197660/15046386227539.jpg\" alt=\"\"></p>\n<p>主题：command+shit+p –&gt; install Package –&gt; Material Theme;<br>地址：<a href=\"https://github.com/equinusocio/material-theme\" target=\"_blank\" rel=\"external\">https://github.com/equinusocio/material-theme</a></p>\n<p>配置：<br>command + ,<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;</div><div class=\"line\">\t&quot;color_scheme&quot;: &quot;Packages/Material Theme/schemes/Material-Theme.tmTheme&quot;,</div><div class=\"line\">\t&quot;font_face&quot;: &quot;Fira Code&quot;,</div><div class=\"line\">\t&quot;font_size&quot;: 14,</div><div class=\"line\">\t&quot;ignored_packages&quot;:</div><div class=\"line\">\t[</div><div class=\"line\">\t\t&quot;Vintage&quot;</div><div class=\"line\">\t],</div><div class=\"line\">\t&quot;line_padding_bottom&quot;: 2,</div><div class=\"line\">\t&quot;line_padding_top&quot;: 2,</div><div class=\"line\">\t&quot;open_files_in_new_window&quot;: false,</div><div class=\"line\">\t&quot;theme&quot;: &quot;Material-Theme.sublime-theme&quot;,</div><div class=\"line\">\t&quot;update_check&quot;: false</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>对应：配色、字体、字号、【 】、行与行上间距、行与行下间距、禁止打开文件新建窗口、启动时创建窗口、主题、关闭自动更新提示<br>字体：链接: <a href=\"https://pan.baidu.com/s/1nuCW4Lb\" target=\"_blank\" rel=\"external\">https://pan.baidu.com/s/1nuCW4Lb</a> 密码: mxvv</p>\n<h2 id=\"通过命令行启动\"><a href=\"#通过命令行启动\" class=\"headerlink\" title=\"通过命令行启动\"></a>通过命令行启动</h2><p>官网地址：<a href=\"https://www.sublimetext.com/docs/3/osx_command_line.html\" target=\"_blank\" rel=\"external\">https://www.sublimetext.com/docs/3/osx_command_line.html</a><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">mkdir ~/bin</div><div class=\"line\">ln -s &apos;/Applications/Sublime Text.app/Contents/SharedSupport/bin/subl&apos; ~/bin/subl</div><div class=\"line\"></div><div class=\"line\">cd ~/bin</div><div class=\"line\">vi .bashrc</div><div class=\"line\">export PATH=&quot;/Users/baby/bin:$PATH&quot;</div><div class=\"line\">source .bashrc</div></pre></td></tr></table></figure></p>\n<h2 id=\"效果图\"><a href=\"#效果图\" class=\"headerlink\" title=\"效果图\"></a>效果图</h2><p><img src=\"http://opxoapzhs.bkt.clouddn.com/15046316197660/iter.png\" alt=\"ite\"></p>\n<h2 id=\"编码问题\"><a href=\"#编码问题\" class=\"headerlink\" title=\"编码问题\"></a>编码问题</h2><p>针对subl3 </p>\n<p>1、按Control + ~打开命令行,然后输入下面这一行代码 代码报错<a href=\"https://packagecontrol.io/installation\" target=\"_blank\" rel=\"external\">点我</a> 复制</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">import urllib.request,os; pf = &apos;Package Control.sublime-package&apos;; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); open(os.path.join(ipp, pf), &apos;wb&apos;).write(urllib.request.urlopen( &apos;http://sublime.wbond.net/&apos; + pf.replace(&apos; &apos;,&apos;%20&apos;)).read())</div></pre></td></tr></table></figure>\n<p>执行之后，必须重启Subl3，才能继续</p>\n<p>2、安装ConvertToUTF8<br>按Command + Shift + P打开万能搜索框<br>然后输入install package回车，这时候会加载所有的packges列表。看到列表之后再输入ConvertToUTF8回车，就会下载安装这个包。装好之后会看到个包的说明文件，</p>\n<p>3.重复2步骤 看到列表之后输入Codecs33回车。</p>\n<blockquote>\n<p>原因: 由于 Sublime Text 3 内嵌的 Python 限制，ConvertToUTF8 可能无法正常工作,所以你懂的</p>\n</blockquote>\n<h1 id=\"Phpstrome\"><a href=\"#Phpstrome\" class=\"headerlink\" title=\"Phpstrome\"></a>Phpstrome</h1><h2 id=\"主题安装：\"><a href=\"#主题安装：\" class=\"headerlink\" title=\"主题安装：\"></a>主题安装：</h2><p>cmd+shift + a 搜索 plugins -&gt;点击 brow reposit… 搜索 Material Theme UI 选中 然后install ，安装完毕重启。<br><img src=\"http://opxoapzhs.bkt.clouddn.com/15046316197660/15047456737706.jpg\" alt=\"\"></p>\n<h3 id=\"生效\"><a href=\"#生效\" class=\"headerlink\" title=\"生效\"></a>生效</h3><p>cmd+,Editor–&gt;Color &amp; Fonts 选择主题生效 点击右下角完成<br><img src=\"http://opxoapzhs.bkt.clouddn.com/15046316197660/15047461885857.jpg\" alt=\"\"></p>\n<p>comd+1 左侧</p>\n<p>面包屑：<br><img src=\"http://opxoapzhs.bkt.clouddn.com/15046316197660/15046512637733.jpg\" alt=\"\"><br>tabs placement :</p>\n<h3 id=\"讨厌的波浪线\"><a href=\"#讨厌的波浪线\" class=\"headerlink\" title=\"讨厌的波浪线\"></a>讨厌的波浪线</h3><p>command shift a 搜，warning 去设置一下，或者是 typo<br><img src=\"http://opxoapzhs.bkt.clouddn.com/15046316197660/15047436875078.jpg\" alt=\"\"></p>\n<h3 id=\"Xdebug-phpstome\"><a href=\"#Xdebug-phpstome\" class=\"headerlink\" title=\"Xdebug-phpstome\"></a>Xdebug-phpstome</h3><p>1.首先下载Debug</p>\n<p>2.配置php.ini</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">[xdebug]</div><div class=\"line\">xdebug.remote_autostart=1</div><div class=\"line\">xdebug.default_enable=1</div><div class=\"line\">xdebug.remote_port=9001</div><div class=\"line\">xdebug.remote_host=127.0.0.1</div><div class=\"line\">xdebug.remote_connect_back=1</div><div class=\"line\">xdebug.remote_enable=1</div><div class=\"line\">xdebug.idekey=PHPSTORM</div></pre></td></tr></table></figure>\n<p>3.重启下php-fpm</p>\n<p>4.配置PHPstorm</p>\n<pre><code>* phpstorm -&gt; preferences 打开设置页面：\n* 然后，再选择 Languages -&gt; php -&gt; Debug 下，将Xdebug 下的Debug port 改成9001，和php.ini中设置的一致\n</code></pre><p>//OK。xdebug端口配置好了</p>\n<p>debug也只是针对某一个页面在做的。我们以index.php页面为例，先打开index.php，菜单栏点击 run –&gt;Edit Configurations 打开设置页面：<br><img src=\"http://opxoapzhs.bkt.clouddn.com/15046316197660/15047153533249.jpg\" alt=\"\"></p>\n<p>设置完成control+d 运行<br>Cli interpreter 错误 comd+shift+a 输入 Cli interpreter ，enter<br><img src=\"http://opxoapzhs.bkt.clouddn.com/15046316197660/15047156552449.jpg\" alt=\"\"></p>\n<p>参考：<code>http://blog.csdn.net/think2me/article/details/45344489</code></p>\n<h1 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h1><p>export = ‘’:$PATH<br>source ./bashrc<br>       .bash_profile<br>alias filename =’’</p>\n<h1 id=\"Git\"><a href=\"#Git\" class=\"headerlink\" title=\"Git\"></a>Git</h1><p>git config –global user.name ‘username’<br>git config –global user.emali ‘You-Emali’</p>\n<p>ssh-keygen -t rsa -C ‘You-Emali’</p>\n<p>id_rsa 私钥<br>id_rsa.pub 弓腰<br>known_hosts 记录<br>authorized_keys 和做人弓腰</p>\n<h2 id=\"优化git\"><a href=\"#优化git\" class=\"headerlink\" title=\"优化git\"></a>优化git</h2><p>使用 <code>git add .</code> 、 <code>git commit -m</code> 很繁琐索性优化下<br>首先在 <code>~/bin/</code> touch 一个 .alias 文件 写入：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">alias gaa=&quot;git add .&quot;</div><div class=\"line\"></div><div class=\"line\">alias gc=&quot;git commit -m &quot;</div><div class=\"line\"></div><div class=\"line\">alias gp=&quot;git push&quot;</div><div class=\"line\"></div><div class=\"line\">alias gs=&quot;git status&quot;</div><div class=\"line\"></div><div class=\"line\">#alias gl=&quot;git log --graph --pretty=format:&apos;%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)&lt;%an&gt;%Creset&apos; --abbrev-commit&quot;</div><div class=\"line\"></div><div class=\"line\">#alias gll=&quot;git log --graph --abbrev-commit --decorate --all --format=format:&apos;%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(dim white) - %an%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n %C(white)%s%C(reset)&apos;&quot;</div></pre></td></tr></table></figure>\n<p>编辑 <code>~/.zshrc</code> 最后加上 <code>source ~/bin/.alias</code> 即可。</p>\n<h2 id=\"代码规范插件phpcode\"><a href=\"#代码规范插件phpcode\" class=\"headerlink\" title=\"代码规范插件phpcode\"></a>代码规范插件phpcode</h2><h3 id=\"安装-amp-更新\"><a href=\"#安装-amp-更新\" class=\"headerlink\" title=\"安装&amp;更新\"></a>安装&amp;更新</h3><p>官网<a href=\"http://cs.sensiolabs.org\" target=\"_blank\" rel=\"external\">http://cs.sensiolabs.org</a><br>需要使用 PHP 5.3.6 以上的版本</p>\n<p>curl 下载：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">curl -L http://cs.sensiolabs.org/download/php-cs-fixer-v2.phar -o php-cs-fixer</div></pre></td></tr></table></figure>\n<p>wget 下载：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">wget http://cs.sensiolabs.org/download/php-cs-fixer-v2.phar -O php-cs-fixer</div><div class=\"line\"></div><div class=\"line\">or</div><div class=\"line\"></div><div class=\"line\">wget https://github.com/FriendsOfPHP/PHP-CS-Fixer/releases/download/v2.4.0/php-cs-fixer.phar -O php-cs-fixer</div></pre></td></tr></table></figure>\n<p>下载完成后给可执行的权限，然后移动到 bin 目录下面即可：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo chmod a+x php-cs-fixer</div><div class=\"line\">sudo mv php-cs-fixer /usr/local/bin/php-cs-fixer</div></pre></td></tr></table></figure>\n<h3 id=\"用法\"><a href=\"#用法\" class=\"headerlink\" title=\"用法\"></a>用法</h3><p>用法也很简单，最基本的命令参数就是 fix，直接执行时会尽可能多的根据默认标准格式化代码</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"># 格式化目录 如果是当前目录的话可以省略目录</div><div class=\"line\">php-cs-fixer fix /path/to/dir</div><div class=\"line\"># 格式化文件</div><div class=\"line\">php-cs-fixer.phar fix /path/to/file</div></pre></td></tr></table></figure>\n<h1 id=\"课外阅读\"><a href=\"#课外阅读\" class=\"headerlink\" title=\"课外阅读\"></a>课外阅读</h1><h1 id=\"优酷免费去广告\"><a href=\"#优酷免费去广告\" class=\"headerlink\" title=\"优酷免费去广告\"></a>优酷免费去广告</h1><p>打开 Chrome 的开发者工具，在 console 面板粘贴以下代码然后执行：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">window.sessionStorage.setItem(&quot;P_l_h5&quot;, true);</div></pre></td></tr></table></figure>\n<p>然后刷新，或者你使用其他浏览器的话，也是打开开发者工具，通常快捷键就是 F12，使用上面的代码。</p>\n<h1 id=\"释放你的F5-comd-R\"><a href=\"#释放你的F5-comd-R\" class=\"headerlink\" title=\"释放你的F5(comd+R)\"></a>释放你的F5(comd+R)</h1><p>这是官网<a href=\"http://www.browsersync.cn/\" target=\"_blank\" rel=\"external\">browsersync</a><br>基于node.js<br>npm install -g browser-sync</p>\n<p>启动 BrowserSync<br>    需要进入项目目录！！<br>    需要进入项目目录！！<br>    需要进入项目目录！！</p>\n<p>静态网站<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">// --files 路径是相对于运行该命令的项目（目录） </div><div class=\"line\">browser-sync start --server --files &quot;css/*.css&quot;</div></pre></td></tr></table></figure></p>\n<p>如果您需要监听多个类型的文件，您只需要用逗号隔开。</p>\n<p>动态网站<br>如果您已经有其他本地服务器环境PHP或类似的，您需要使用代理模式。 BrowserSync将通过代理URL(localhost:3000)来查看您的网站。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">// 主机名可以是ip或域名 这是官网给出的本人MAC无法使用</div><div class=\"line\">browser-sync start --proxy &quot;主机名&quot; &quot;css/*.css&quot;</div></pre></td></tr></table></figure>\n<p>在本地创建了一个PHP服务器环境，并通过绑定Browsersync.cn来访问本地服务器，使用以下命令方式，Browsersync将提供一个新的地址localhost:3000来访问Browsersync.cn，并监听其css目录下的所有css文件。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">browser-sync start --proxy &quot;Browsersync.cn&quot; &quot;css/*.css&quot;</div></pre></td></tr></table></figure>\n<p>无法使用怎么办？</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">browser-sync start --proxy &quot;主机名&quot; --files &quot;css/*.css&quot;</div></pre></td></tr></table></figure>\n<p>ok 可以啦</p>"}],"PostAsset":[],"PostCategory":[{"post_id":"cj7zrohpq0000r1s63ntrcged","category_id":"cj7zrohq30004r1s69k4bk8up","_id":"cj7zrohqr000fr1s65yr2uh94"},{"post_id":"cj7zrohpz0002r1s6hwy8uvgw","category_id":"cj7zrohql000br1s6fgnaa2oy","_id":"cj7zrohqy000kr1s6gse95ua1"},{"post_id":"cj7zrohqd0008r1s6gzis0vww","category_id":"cj7zrohqr000gr1s6s1zs208j","_id":"cj7zrohr7000sr1s6ap85l4ow"},{"post_id":"cj7zrohqk000ar1s6amus2kxj","category_id":"cj7zrohqr000gr1s6s1zs208j","_id":"cj7zrohrd000yr1s62i80yb0f"},{"post_id":"cj7zrohqm000dr1s6295n7ylb","category_id":"cj7zrohqr000gr1s6s1zs208j","_id":"cj7zrohrf0012r1s61f4rxy98"},{"post_id":"cj7zrohqo000er1s6znlpxjpn","category_id":"cj7zrohrc000xr1s6rxmmhfbp","_id":"cj7zrohrg0017r1s6x2v1hkx8"},{"post_id":"cj7zrohqs000ir1s6mmx5e3pj","category_id":"cj7zrohrc000xr1s6rxmmhfbp","_id":"cj7zrohrj001ar1s6r46fyf4u"},{"post_id":"cj7zrohqw000jr1s6g7gqpy57","category_id":"cj7zrohrg0016r1s6hicoc2th","_id":"cj7zrohrm001er1s64mkfy82g"},{"post_id":"cj7zrohr1000nr1s6hjjw01n7","category_id":"cj7zrohrj001br1s68qfkhz6f","_id":"cj7zrohrp001hr1s6n76dgs5q"},{"post_id":"cj7zrohr3000pr1s6j05xbq4w","category_id":"cj7zrohrm001fr1s6a9r1pltw","_id":"cj7zrohrr001mr1s6is1qwuc4"},{"post_id":"cj7zrohr8000ur1s6cddizlxi","category_id":"cj7zrohrj001br1s68qfkhz6f","_id":"cj7zrohrt001rr1s6rix2f8r1"},{"post_id":"cj7zrohra000wr1s6vq14sgbo","category_id":"cj7zrohrj001br1s68qfkhz6f","_id":"cj7zrohrt001tr1s614hi8saq"},{"post_id":"cj7zrohrd000zr1s6wp23objx","category_id":"cj7zrohrt001qr1s6d26ney00","_id":"cj7zrohrv001vr1s6hhd0l0ou"}],"PostTag":[{"post_id":"cj7zrohpq0000r1s63ntrcged","tag_id":"cj7zrohq80005r1s6x3agv2am","_id":"cj7zrohr3000or1s6qp1lc0ph"},{"post_id":"cj7zrohpq0000r1s63ntrcged","tag_id":"cj7zrohql000cr1s6k4eyvk28","_id":"cj7zrohr6000qr1s6ugqvmhts"},{"post_id":"cj7zrohpq0000r1s63ntrcged","tag_id":"cj7zrohqs000hr1s6he5jyuc8","_id":"cj7zrohra000vr1s66qhkddha"},{"post_id":"cj7zrohpz0002r1s6hwy8uvgw","tag_id":"cj7zrohqz000mr1s6mz7cvdm6","_id":"cj7zrohrf0011r1s6a7nls05g"},{"post_id":"cj7zrohpz0002r1s6hwy8uvgw","tag_id":"cj7zrohr7000tr1s6mzjwr8bc","_id":"cj7zrohrf0014r1s616amfipp"},{"post_id":"cj7zrohqd0008r1s6gzis0vww","tag_id":"cj7zrohre0010r1s6gmh92qx3","_id":"cj7zrohri0019r1s6huswzc1s"},{"post_id":"cj7zrohqd0008r1s6gzis0vww","tag_id":"cj7zrohrg0015r1s6pxonl7hr","_id":"cj7zrohrl001cr1s6129nxaau"},{"post_id":"cj7zrohqk000ar1s6amus2kxj","tag_id":"cj7zrohrh0018r1s6i7zjo7t0","_id":"cj7zrohrq001kr1s6tzu7mmvm"},{"post_id":"cj7zrohqk000ar1s6amus2kxj","tag_id":"cj7zrohrm001dr1s6ar08uiak","_id":"cj7zrohrs001nr1s6zucmw7kp"},{"post_id":"cj7zrohqk000ar1s6amus2kxj","tag_id":"cj7zrohrn001gr1s646257kxp","_id":"cj7zrohrs001pr1s6iaqkvtkg"},{"post_id":"cj7zrohqm000dr1s6295n7ylb","tag_id":"cj7zrohre0010r1s6gmh92qx3","_id":"cj7zrohrx001xr1s6a636dh78"},{"post_id":"cj7zrohqm000dr1s6295n7ylb","tag_id":"cj7zrohqz000mr1s6mz7cvdm6","_id":"cj7zrohrx001yr1s6at6pg30d"},{"post_id":"cj7zrohqm000dr1s6295n7ylb","tag_id":"cj7zrohrt001sr1s6fewg68wc","_id":"cj7zrohry0020r1s6mph9ivgc"},{"post_id":"cj7zrohqm000dr1s6295n7ylb","tag_id":"cj7zrohrv001ur1s6bymv2a3x","_id":"cj7zrohry0021r1s6ah4ons1z"},{"post_id":"cj7zrohqo000er1s6znlpxjpn","tag_id":"cj7zrohr7000tr1s6mzjwr8bc","_id":"cj7zrohrz0023r1s6xu5sa9v6"},{"post_id":"cj7zrohqo000er1s6znlpxjpn","tag_id":"cj7zrohrx001zr1s60f3gdgjx","_id":"cj7zrohrz0024r1s650z4mfte"},{"post_id":"cj7zrohqs000ir1s6mmx5e3pj","tag_id":"cj7zrohr7000tr1s6mzjwr8bc","_id":"cj7zrohs00026r1s62ai4idk8"},{"post_id":"cj7zrohqw000jr1s6g7gqpy57","tag_id":"cj7zrohr7000tr1s6mzjwr8bc","_id":"cj7zrohs10029r1s682gdvrj1"},{"post_id":"cj7zrohqw000jr1s6g7gqpy57","tag_id":"cj7zrohs00027r1s6viqkokoa","_id":"cj7zrohs1002ar1s6lvgyjjn3"},{"post_id":"cj7zrohr1000nr1s6hjjw01n7","tag_id":"cj7zrohs10028r1s66ht8z6l4","_id":"cj7zrohs2002cr1s6g6bnkxfu"},{"post_id":"cj7zrohr3000pr1s6j05xbq4w","tag_id":"cj7zrohs1002br1s6jhivsb5u","_id":"cj7zrohs2002er1s6pfrn4rdk"},{"post_id":"cj7zrohr8000ur1s6cddizlxi","tag_id":"cj7zrohs2002dr1s6s2kocn5e","_id":"cj7zrohs2002gr1s6oz0a3ixv"},{"post_id":"cj7zrohra000wr1s6vq14sgbo","tag_id":"cj7zrohs2002fr1s6wr8yxtuk","_id":"cj7zrohs2002ir1s6z9s5p6wk"},{"post_id":"cj7zrohrd000zr1s6wp23objx","tag_id":"cj7zrohs2002hr1s6jaeb91v6","_id":"cj7zrohs3002jr1s6tmcmjwpm"}],"Tag":[{"name":"Mac","_id":"cj7zrohq80005r1s6x3agv2am"},{"name":"App_Errpr","_id":"cj7zrohql000cr1s6k4eyvk28"},{"name":"软件打不开","_id":"cj7zrohqs000hr1s6he5jyuc8"},{"name":"git","_id":"cj7zrohqz000mr1s6mz7cvdm6"},{"name":"Linux","_id":"cj7zrohr7000tr1s6mzjwr8bc"},{"name":"Laravel","_id":"cj7zrohre0010r1s6gmh92qx3"},{"name":"Excel","_id":"cj7zrohrg0015r1s6pxonl7hr"},{"name":"laravel","_id":"cj7zrohrh0018r1s6i7zjo7t0"},{"name":"select","_id":"cj7zrohrm001dr1s6ar08uiak"},{"name":"DB","_id":"cj7zrohrn001gr1s646257kxp"},{"name":"phpstome","_id":"cj7zrohrt001sr1s6fewg68wc"},{"name":"oh my zsh","_id":"cj7zrohrv001ur1s6bymv2a3x"},{"name":"常用操作命令","_id":"cj7zrohrx001zr1s60f3gdgjx"},{"name":"LNMP","_id":"cj7zrohs00027r1s6viqkokoa"},{"name":"数组","_id":"cj7zrohs10028r1s66ht8z6l4"},{"name":"mysql","_id":"cj7zrohs1002br1s6jhivsb5u"},{"name":"-PHP","_id":"cj7zrohs2002dr1s6s2kocn5e"},{"name":"-- 排序","_id":"cj7zrohs2002fr1s6wr8yxtuk"},{"name":"MAC","_id":"cj7zrohs2002hr1s6jaeb91v6"}]}}